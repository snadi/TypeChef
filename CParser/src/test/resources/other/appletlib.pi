#line 1 "platform-redhat.h" 1
//Generated with:
//echo -|gcc -dM - -E -std=gnu99 







































































































































#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/header.h" 1
#if definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_HAVE_DOT_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_DESKTOP)
   
   
   
#endif
#if !definedEx(CONFIG_DESKTOP)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if !definedEx(CONFIG_INCLUDE_SUSv2)
   
   
   
#endif
#if definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if !definedEx(CONFIG_USE_PORTABLE_CODE)
   
   
   
#endif
#if definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if !definedEx(CONFIG_PLATFORM_LINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_USE_MALLOC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)
   
   
   
#endif
#if definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_SHOW_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_NO_USR)
   
   
   
#endif
#if definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_LOCALE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_USING_LOCALE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_UNICODE_IN_ENV)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_COMBINING_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_WIDE_WCHARS)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_BIDI_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_NEUTRAL_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if !definedEx(CONFIG_UNICODE_PRESERVE_BROKEN)
   
   
   
#endif
#if definedEx(CONFIG_PAM)
   
   
   
#endif
#if !definedEx(CONFIG_PAM)
   
   
   
#endif
#if definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LONG_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CLEAN_UP)
   
   
   
#endif

   
   
   
    
   
   


   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_APPLETS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HAVE_RPC)
   
   
   
#endif
#if definedEx(CONFIG_STATIC)
   
   
   
#endif
#if !definedEx(CONFIG_STATIC)
   
   
   
#endif
#if definedEx(CONFIG_PIE)
   
   
   
#endif
#if !definedEx(CONFIG_PIE)
   
   
   
#endif
#if definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if !definedEx(CONFIG_NOMMU)
   
   
   
#endif
#if definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_BUILD_LIBBUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
   
   
   
#endif
#if definedEx(CONFIG_LFS)
   
   
   
#endif
#if !definedEx(CONFIG_LFS)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if !definedEx(CONFIG_DEBUG_PESSIMIZE)
   
   
   
#endif
#if definedEx(CONFIG_WERROR)
   
   
   
#endif
#if !definedEx(CONFIG_WERROR)
   
   
   
#endif
#if definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if !definedEx(CONFIG_NO_DEBUG_LIB)
   
   
   
#endif
#if definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if !definedEx(CONFIG_DMALLOC)
   
   
   
#endif
#if definedEx(CONFIG_EFENCE)
   
   
   
#endif
#if !definedEx(CONFIG_EFENCE)
   
   
   
#endif

   
   
   
    
   
   


   
   
   
    
   
   


   
   
   
    
   
   


   
   
   
    
   
   

#if definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SYMLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_HARDLINK)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSTEMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSTEMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RTMINMAX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RTMINMAX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FAST_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ETC_NETWORKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_TERMIOS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_SAVE_ON_EXIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_SAVE_ON_EXIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REVERSE_SEARCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REVERSE_SEARCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAB_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_FANCY_PROMPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NON_POSIX_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VERBOSE_CP_MESSAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SKIP_ROOTFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SKIP_ROOTFS)
   
   
   
#endif
#if definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if !definedEx(CONFIG_MONOTONIC_SYSCALL)
   
   
   
#endif
#if definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if !definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWIB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_XZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_BZ2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_GZ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SEAMLESS_Z)
   
   
   
#endif
#if definedEx(CONFIG_AR)
   
   
   
#endif
#if !definedEx(CONFIG_AR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_LONG_FILENAMES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if !definedEx(CONFIG_UNCOMPRESS)
   
   
   
#endif
#if definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GUNZIP)
   
   
   
#endif
#if definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BUNZIP2)
   
   
   
#endif
#if definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if !definedEx(CONFIG_UNLZMA)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LZMA_FAST)
   
   
   
#endif
#if definedEx(CONFIG_LZMA)
   
   
   
#endif
#if !definedEx(CONFIG_LZMA)
   
   
   
#endif
#if definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if !definedEx(CONFIG_UNXZ)
   
   
   
#endif
#if definedEx(CONFIG_XZ)
   
   
   
#endif
#if !definedEx(CONFIG_XZ)
   
   
   
#endif
#if definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if !definedEx(CONFIG_BZIP2)
   
   
   
#endif
#if definedEx(CONFIG_CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_CPIO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_O)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CPIO_P)
   
   
   
#endif
#if definedEx(CONFIG_DPKG)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG)
   
   
   
#endif
#if definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if !definedEx(CONFIG_DPKG_DEB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DPKG_DEB_EXTRACT_ONLY)
   
   
   
#endif
#if definedEx(CONFIG_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GZIP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_LZOP)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP)
   
   
   
#endif
#if definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if !definedEx(CONFIG_LZOP_COMPR_HIGH)
   
   
   
#endif
#if definedEx(CONFIG_RPM)
   
   
   
#endif
#if !definedEx(CONFIG_RPM)
   
   
   
#endif
#if definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if !definedEx(CONFIG_RPM2CPIO)
   
   
   
#endif
#if definedEx(CONFIG_TAR)
   
   
   
#endif
#if !definedEx(CONFIG_TAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_AUTODETECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_FROM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDGNU_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_OLDSUN_COMPATIBILITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_NOPRESERVE_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TAR_SELINUX)
   
   
   
#endif
#if definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if !definedEx(CONFIG_UNZIP)
   
   
   
#endif
#if definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if !definedEx(CONFIG_BASENAME)
   
   
   
#endif
#if definedEx(CONFIG_CAT)
   
   
   
#endif
#if !definedEx(CONFIG_CAT)
   
   
   
#endif
#if definedEx(CONFIG_DATE)
   
   
   
#endif
#if !definedEx(CONFIG_DATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_ISOFMT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_NANO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DATE_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTID)
   
   
   
#endif
#if definedEx(CONFIG_ID)
   
   
   
#endif
#if !definedEx(CONFIG_ID)
   
   
   
#endif
#if definedEx(CONFIG_GROUPS)
   
   
   
#endif
#if !definedEx(CONFIG_GROUPS)
   
   
   
#endif
#if definedEx(CONFIG_SHUF)
   
   
   
#endif
#if !definedEx(CONFIG_SHUF)
   
   
   
#endif
#if definedEx(CONFIG_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_TEST)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEST_64)
   
   
   
#endif
#if definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if !definedEx(CONFIG_TOUCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOUCH_NODEREF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOUCH_NODEREF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOUCH_SUSV3)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOUCH_SUSV3)
   
   
   
#endif
#if definedEx(CONFIG_TR)
   
   
   
#endif
#if !definedEx(CONFIG_TR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_CLASSES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TR_EQUIV)
   
   
   
#endif
#if definedEx(CONFIG_BASE64)
   
   
   
#endif
#if !definedEx(CONFIG_BASE64)
   
   
   
#endif
#if definedEx(CONFIG_WHO)
   
   
   
#endif
#if !definedEx(CONFIG_WHO)
   
   
   
#endif
#if definedEx(CONFIG_USERS)
   
   
   
#endif
#if !definedEx(CONFIG_USERS)
   
   
   
#endif
#if definedEx(CONFIG_CAL)
   
   
   
#endif
#if !definedEx(CONFIG_CAL)
   
   
   
#endif
#if definedEx(CONFIG_CATV)
   
   
   
#endif
#if !definedEx(CONFIG_CATV)
   
   
   
#endif
#if definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if !definedEx(CONFIG_CHGRP)
   
   
   
#endif
#if definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if !definedEx(CONFIG_CHMOD)
   
   
   
#endif
#if definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if !definedEx(CONFIG_CHOWN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHOWN_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if !definedEx(CONFIG_CHROOT)
   
   
   
#endif
#if definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if !definedEx(CONFIG_CKSUM)
   
   
   
#endif
#if definedEx(CONFIG_COMM)
   
   
   
#endif
#if !definedEx(CONFIG_COMM)
   
   
   
#endif
#if definedEx(CONFIG_CP)
   
   
   
#endif
#if !definedEx(CONFIG_CP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_CUT)
   
   
   
#endif
#if !definedEx(CONFIG_CUT)
   
   
   
#endif
#if definedEx(CONFIG_DD)
   
   
   
#endif
#if !definedEx(CONFIG_DD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_SIGNAL_HANDLING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_THIRD_STATUS_LINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DD_IBS_OBS)
   
   
   
#endif
#if definedEx(CONFIG_DF)
   
   
   
#endif
#if !definedEx(CONFIG_DF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DF_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if !definedEx(CONFIG_DIRNAME)
   
   
   
#endif
#if definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if !definedEx(CONFIG_DOS2UNIX)
   
   
   
#endif
#if definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if !definedEx(CONFIG_UNIX2DOS)
   
   
   
#endif
#if definedEx(CONFIG_DU)
   
   
   
#endif
#if !definedEx(CONFIG_DU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DU_DEFAULT_BLOCKSIZE_1K)
   
   
   
#endif
#if definedEx(CONFIG_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ENV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_EXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_EXPR)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR)
   
   
   
#endif
#if definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_EXPR_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FALSE)
   
   
   
#endif
#if !definedEx(CONFIG_FALSE)
   
   
   
#endif
#if definedEx(CONFIG_FOLD)
   
   
   
#endif
#if !definedEx(CONFIG_FOLD)
   
   
   
#endif
#if definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if !definedEx(CONFIG_FSYNC)
   
   
   
#endif
#if definedEx(CONFIG_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_HEAD)
   
   
   
#endif
#if definedEx(CONFIG_INSTALL)
   
   
   
#endif
#if !definedEx(CONFIG_INSTALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSTALL_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSTALL_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_LN)
   
   
   
#endif
#if !definedEx(CONFIG_LN)
   
   
   
#endif
#if definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if !definedEx(CONFIG_LOGNAME)
   
   
   
#endif
#if definedEx(CONFIG_LS)
   
   
   
#endif
#if !definedEx(CONFIG_LS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FILETYPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_FOLLOWLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_RECURSIVE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_SORTFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_TIMESTAMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_USERNAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LS_COLOR_IS_DEFAULT)
   
   
   
#endif
#if definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if !definedEx(CONFIG_MD5SUM)
   
   
   
#endif
#if definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if !definedEx(CONFIG_MKDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if !definedEx(CONFIG_MKFIFO)
   
   
   
#endif
#if definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if !definedEx(CONFIG_MKNOD)
   
   
   
#endif
#if definedEx(CONFIG_MV)
   
   
   
#endif
#if !definedEx(CONFIG_MV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MV_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NICE)
   
   
   
#endif
#if !definedEx(CONFIG_NICE)
   
   
   
#endif
#if definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if !definedEx(CONFIG_NOHUP)
   
   
   
#endif
#if definedEx(CONFIG_OD)
   
   
   
#endif
#if !definedEx(CONFIG_OD)
   
   
   
#endif
#if definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTENV)
   
   
   
#endif
#if definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_PWD)
   
   
   
#endif
#if !definedEx(CONFIG_PWD)
   
   
   
#endif
#if definedEx(CONFIG_READLINK)
   
   
   
#endif
#if !definedEx(CONFIG_READLINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_READLINK_FOLLOW)
   
   
   
#endif
#if definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if !definedEx(CONFIG_REALPATH)
   
   
   
#endif
#if definedEx(CONFIG_RM)
   
   
   
#endif
#if !definedEx(CONFIG_RM)
   
   
   
#endif
#if definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RMDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RMDIR_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SEQ)
   
   
   
#endif
#if !definedEx(CONFIG_SEQ)
   
   
   
#endif
#if definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA1SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA256SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA512SUM)
   
   
   
#endif
#if definedEx(CONFIG_SHA3SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SHA3SUM)
   
   
   
#endif
#if definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FLOAT_SLEEP)
   
   
   
#endif
#if definedEx(CONFIG_SORT)
   
   
   
#endif
#if !definedEx(CONFIG_SORT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SORT_BIG)
   
   
   
#endif
#if definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if !definedEx(CONFIG_SPLIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SPLIT_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_STAT)
   
   
   
#endif
#if !definedEx(CONFIG_STAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_STAT_FORMAT)
   
   
   
#endif
#if definedEx(CONFIG_STTY)
   
   
   
#endif
#if !definedEx(CONFIG_STTY)
   
   
   
#endif
#if definedEx(CONFIG_SUM)
   
   
   
#endif
#if !definedEx(CONFIG_SUM)
   
   
   
#endif
#if definedEx(CONFIG_SYNC)
   
   
   
#endif
#if !definedEx(CONFIG_SYNC)
   
   
   
#endif
#if definedEx(CONFIG_TAC)
   
   
   
#endif
#if !definedEx(CONFIG_TAC)
   
   
   
#endif
#if definedEx(CONFIG_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_TAIL)
   
   
   
#endif
#if definedEx(CONFIG_TEE)
   
   
   
#endif
#if !definedEx(CONFIG_TEE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TEE_USE_BLOCK_IO)
   
   
   
#endif
#if definedEx(CONFIG_TRUE)
   
   
   
#endif
#if !definedEx(CONFIG_TRUE)
   
   
   
#endif
#if definedEx(CONFIG_TTY)
   
   
   
#endif
#if !definedEx(CONFIG_TTY)
   
   
   
#endif
#if definedEx(CONFIG_UNAME)
   
   
   
#endif
#if !definedEx(CONFIG_UNAME)
   
   
   
#endif
#if definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if !definedEx(CONFIG_UNEXPAND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNEXPAND_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if !definedEx(CONFIG_UNIQ)
   
   
   
#endif
#if definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if !definedEx(CONFIG_USLEEP)
   
   
   
#endif
#if definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUDECODE)
   
   
   
#endif
#if definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if !definedEx(CONFIG_UUENCODE)
   
   
   
#endif
#if definedEx(CONFIG_WC)
   
   
   
#endif
#if !definedEx(CONFIG_WC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WC_LARGE)
   
   
   
#endif
#if definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if !definedEx(CONFIG_WHOAMI)
   
   
   
#endif
#if definedEx(CONFIG_YES)
   
   
   
#endif
#if !definedEx(CONFIG_YES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PRESERVE_HARDLINKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AUTOWIDTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HUMAN_READABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MD5_SHA1_SUM_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CHVT)
   
   
   
#endif
#if !definedEx(CONFIG_CHVT)
   
   
   
#endif
#if definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_FGCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if !definedEx(CONFIG_CLEAR)
   
   
   
#endif
#if definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if !definedEx(CONFIG_DEALLOCVT)
   
   
   
#endif
#if definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPKMAP)
   
   
   
#endif
#if definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if !definedEx(CONFIG_KBD_MODE)
   
   
   
#endif
#if definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if !definedEx(CONFIG_LOADFONT)
   
   
   
#endif
#if definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if !definedEx(CONFIG_LOADKMAP)
   
   
   
#endif
#if definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if !definedEx(CONFIG_OPENVT)
   
   
   
#endif
#if definedEx(CONFIG_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_RESET)
   
   
   
#endif
#if definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RESIZE_PRINT)
   
   
   
#endif
#if definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if !definedEx(CONFIG_SETCONSOLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETCONSOLE_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if !definedEx(CONFIG_SETFONT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFONT_TEXTUAL_MAP)
   
   
   
#endif
#if definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if !definedEx(CONFIG_SETKEYCODES)
   
   
   
#endif
#if definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if !definedEx(CONFIG_SETLOGCONS)
   
   
   
#endif
#if definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if !definedEx(CONFIG_SHOWKEY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_PSF2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOADFONT_RAW)
   
   
   
#endif
#if definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if !definedEx(CONFIG_MKTEMP)
   
   
   
#endif
#if definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if !definedEx(CONFIG_PIPE_PROGRESS)
   
   
   
#endif
#if definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if !definedEx(CONFIG_RUN_PARTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUN_PARTS_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if !definedEx(CONFIG_START_STOP_DAEMON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_START_STOP_DAEMON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_WHICH)
   
   
   
#endif
#if !definedEx(CONFIG_WHICH)
   
   
   
#endif
#if definedEx(CONFIG_AWK)
   
   
   
#endif
#if !definedEx(CONFIG_AWK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AWK_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AWK_GNU_EXTENSIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AWK_GNU_EXTENSIONS)
   
   
   
#endif
#if definedEx(CONFIG_CMP)
   
   
   
#endif
#if !definedEx(CONFIG_CMP)
   
   
   
#endif
#if definedEx(CONFIG_DIFF)
   
   
   
#endif
#if !definedEx(CONFIG_DIFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DIFF_DIR)
   
   
   
#endif
#if definedEx(CONFIG_ED)
   
   
   
#endif
#if !definedEx(CONFIG_ED)
   
   
   
#endif
#if definedEx(CONFIG_PATCH)
   
   
   
#endif
#if !definedEx(CONFIG_PATCH)
   
   
   
#endif
#if definedEx(CONFIG_SED)
   
   
   
#endif
#if !definedEx(CONFIG_SED)
   
   
   
#endif
#if definedEx(CONFIG_VI)
   
   
   
#endif
#if !definedEx(CONFIG_VI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_8BIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_COLON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_YANKMARK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SEARCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_REGEX_SEARCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_REGEX_SEARCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_USE_SIGNALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_DOT_CMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_READONLY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_SET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_WIN_RESIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VI_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ALLOW_EXEC)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRINT0)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MMIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PERM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_XDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_MAXDEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NEWER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_INUM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_USER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_NOT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DEPTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PAREN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PRUNE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_DELETE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_PATH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_REGEX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FIND_LINKS)
   
   
   
#endif
#if definedEx(CONFIG_GREP)
   
   
   
#endif
#if !definedEx(CONFIG_GREP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GREP_CONTEXT)
   
   
   
#endif
#if definedEx(CONFIG_XARGS)
   
   
   
#endif
#if !definedEx(CONFIG_XARGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_CONFIRMATION)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_QUOTES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_TERMOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_ZERO_TERM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_XARGS_SUPPORT_REPL_STR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_XARGS_SUPPORT_REPL_STR)
   
   
   
#endif
#if definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if !definedEx(CONFIG_BOOTCHARTD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_BLOATED_HEADER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BOOTCHARTD_CONFIG_FILE)
   
   
   
#endif
#if definedEx(CONFIG_HALT)
   
   
   
#endif
#if !definedEx(CONFIG_HALT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CALL_TELINIT)
   
   
   
#endif
#if definedEx(CONFIG_INIT)
   
   
   
#endif
#if !definedEx(CONFIG_INIT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_USE_INITTAB)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KILL_REMOVED)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SCTTY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INIT_COREDUMPS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INITRD)
   
   
   
#endif
#if definedEx(CONFIG_MESG)
   
   
   
#endif
#if !definedEx(CONFIG_MESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MESG_ENABLE_ONLY_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MESG_ENABLE_ONLY_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_ADD_SHELL)
   
   
   
#endif
#if !definedEx(CONFIG_ADD_SHELL)
   
   
   
#endif
#if definedEx(CONFIG_REMOVE_SHELL)
   
   
   
#endif
#if !definedEx(CONFIG_REMOVE_SHELL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_PWD_GRP)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_SHADOW)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT)
   
   
   
#endif
#if definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if !definedEx(CONFIG_USE_BB_CRYPT_SHA)
   
   
   
#endif
#if definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if !definedEx(CONFIG_ADDUSER)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_NAMES)
   
   
   
#endif
#if definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_ADDGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDGROUP_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if !definedEx(CONFIG_DELUSER)
   
   
   
#endif
#if definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if !definedEx(CONFIG_DELGROUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP)
   
   
   
#endif
#if definedEx(CONFIG_GETTY)
   
   
   
#endif
#if !definedEx(CONFIG_GETTY)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN_SESSION_AS_CHILD)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN_SESSION_AS_CHILD)
   
   
   
#endif
#if definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if !definedEx(CONFIG_LOGIN_SCRIPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SECURETTY)
   
   
   
#endif
#if definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_PASSWD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PASSWD_WEAK_CHECK)
   
   
   
#endif
#if definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if !definedEx(CONFIG_CRYPTPW)
   
   
   
#endif
#if definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if !definedEx(CONFIG_CHPASSWD)
   
   
   
#endif
#if definedEx(CONFIG_SU)
   
   
   
#endif
#if !definedEx(CONFIG_SU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SU_CHECKS_SHELLS)
   
   
   
#endif
#if definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_SULOGIN)
   
   
   
#endif
#if definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_VLOCK)
   
   
   
#endif
#if definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if !definedEx(CONFIG_CHATTR)
   
   
   
#endif
#if definedEx(CONFIG_FSCK)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK)
   
   
   
#endif
#if definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if !definedEx(CONFIG_LSATTR)
   
   
   
#endif
#if definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if !definedEx(CONFIG_TUNE2FS)
   
   
   
#endif
#if definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if !definedEx(CONFIG_MODINFO)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_OPTIONS_ON_CMDLINE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED)
   
   
   
#endif
#if definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_INSMOD)
   
   
   
#endif
#if definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if !definedEx(CONFIG_RMMOD)
   
   
   
#endif
#if definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if !definedEx(CONFIG_LSMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT)
   
   
   
#endif
#if definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if !definedEx(CONFIG_MODPROBE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODPROBE_BLACKLIST)
   
   
   
#endif
#if definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if !definedEx(CONFIG_DEPMOD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_2_4_MODULES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_TRY_MMAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_VERSION_CHECKING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_KSYMOOPS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOADINKMEM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INSMOD_LOAD_MAP_FULL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_TAINTED_MODULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MODUTILS_SYMBOLS)
   
   
   
#endif
#if definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if !definedEx(CONFIG_BLOCKDEV)
   
   
   
#endif
#if definedEx(CONFIG_FSTRIM)
   
   
   
#endif
#if !definedEx(CONFIG_FSTRIM)
   
   
   
#endif
#if definedEx(CONFIG_MDEV)
   
   
   
#endif
#if !definedEx(CONFIG_MDEV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_CONF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_RENAME_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_EXEC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MDEV_LOAD_FIRMWARE)
   
   
   
#endif
#if definedEx(CONFIG_REV)
   
   
   
#endif
#if !definedEx(CONFIG_REV)
   
   
   
#endif
#if definedEx(CONFIG_ACPID)
   
   
   
#endif
#if !definedEx(CONFIG_ACPID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ACPID_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_BLKID)
   
   
   
#endif
#if !definedEx(CONFIG_BLKID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BLKID_TYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BLKID_TYPE)
   
   
   
#endif
#if definedEx(CONFIG_DMESG)
   
   
   
#endif
#if !definedEx(CONFIG_DMESG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DMESG_PRETTY)
   
   
   
#endif
#if definedEx(CONFIG_FBSET)
   
   
   
#endif
#if !definedEx(CONFIG_FBSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FBSET_READMODE)
   
   
   
#endif
#if definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FDFLUSH)
   
   
   
#endif
#if definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if !definedEx(CONFIG_FDFORMAT)
   
   
   
#endif
#if definedEx(CONFIG_FDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK)
   
   
   
#endif
#if definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if !definedEx(CONFIG_FDISK_SUPPORT_LARGE_DISKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_WRITABLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_AIX_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SGI_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SUN_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_OSF_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GPT_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GPT_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FDISK_ADVANCED)
   
   
   
#endif
#if definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if !definedEx(CONFIG_FINDFS)
   
   
   
#endif
#if definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if !definedEx(CONFIG_FREERAMDISK)
   
   
   
#endif
#if definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_FSCK_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_EXT2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_MINIX)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MINIX2)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_REISER)
   
   
   
#endif
#if definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if !definedEx(CONFIG_MKFS_VFAT)
   
   
   
#endif
#if definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if !definedEx(CONFIG_GETOPT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_GETOPT_LONG)
   
   
   
#endif
#if definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if !definedEx(CONFIG_HEXDUMP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HEXDUMP_REVERSE)
   
   
   
#endif
#if definedEx(CONFIG_HD)
   
   
   
#endif
#if !definedEx(CONFIG_HD)
   
   
   
#endif
#if definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_HWCLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HWCLOCK_ADJTIME_FHS)
   
   
   
#endif
#if definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if !definedEx(CONFIG_IPCRM)
   
   
   
#endif
#if definedEx(CONFIG_IPCS)
   
   
   
#endif
#if !definedEx(CONFIG_IPCS)
   
   
   
#endif
#if definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if !definedEx(CONFIG_LOSETUP)
   
   
   
#endif
#if definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if !definedEx(CONFIG_LSPCI)
   
   
   
#endif
#if definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if !definedEx(CONFIG_LSUSB)
   
   
   
#endif
#if definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_MKSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MKSWAP_UUID)
   
   
   
#endif
#if definedEx(CONFIG_MORE)
   
   
   
#endif
#if !definedEx(CONFIG_MORE)
   
   
   
#endif
#if definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FAKE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_HELPERS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LABEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_NFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_CIFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_FSTAB)
   
   
   
#endif
#if definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_PIVOT_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_RDATE)
   
   
   
#endif
#if !definedEx(CONFIG_RDATE)
   
   
   
#endif
#if definedEx(CONFIG_RDEV)
   
   
   
#endif
#if !definedEx(CONFIG_RDEV)
   
   
   
#endif
#if definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if !definedEx(CONFIG_READPROFILE)
   
   
   
#endif
#if definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if !definedEx(CONFIG_RTCWAKE)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPT)
   
   
   
#endif
#if definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if !definedEx(CONFIG_SCRIPTREPLAY)
   
   
   
#endif
#if definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if !definedEx(CONFIG_SETARCH)
   
   
   
#endif
#if definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if !definedEx(CONFIG_SWAPONOFF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SWAPON_PRI)
   
   
   
#endif
#if definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if !definedEx(CONFIG_SWITCH_ROOT)
   
   
   
#endif
#if definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if !definedEx(CONFIG_UMOUNT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UMOUNT_ALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MOUNT_LOOP_CREATE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MTAB_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if !definedEx(CONFIG_VOLUMEID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_BTRFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_CRAMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_EXFAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_EXFAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_EXT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_F2FS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_F2FS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_FAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_HFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ISO9660)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_JFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXRAID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LINUXSWAP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_LUKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_NILFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_NILFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_NTFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_OCFS2)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_REISERFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_ROMFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_SQUASHFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_SQUASHFS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_SYSV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_UDF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_VOLUMEID_XFS)
   
   
   
#endif
#if definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if !definedEx(CONFIG_CONSPY)
   
   
   
#endif
#if definedEx(CONFIG_LESS)
   
   
   
#endif
#if !definedEx(CONFIG_LESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_BRACKETS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_FLAGS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_MARKS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_REGEXP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_WINCH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_ASK_TERMINAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_ASK_TERMINAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_DASHCMD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LESS_LINENUMS)
   
   
   
#endif
#if definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if !definedEx(CONFIG_NANDWRITE)
   
   
   
#endif
#if definedEx(CONFIG_NANDDUMP)
   
   
   
#endif
#if !definedEx(CONFIG_NANDDUMP)
   
   
   
#endif
#if definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if !definedEx(CONFIG_RFKILL)
   
   
   
#endif
#if definedEx(CONFIG_SETSERIAL)
   
   
   
#endif
#if !definedEx(CONFIG_SETSERIAL)
   
   
   
#endif
#if definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIATTACH)
   
   
   
#endif
#if definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if !definedEx(CONFIG_UBIDETACH)
   
   
   
#endif
#if definedEx(CONFIG_UBIMKVOL)
   
   
   
#endif
#if !definedEx(CONFIG_UBIMKVOL)
   
   
   
#endif
#if definedEx(CONFIG_UBIRMVOL)
   
   
   
#endif
#if !definedEx(CONFIG_UBIRMVOL)
   
   
   
#endif
#if definedEx(CONFIG_UBIRSVOL)
   
   
   
#endif
#if !definedEx(CONFIG_UBIRSVOL)
   
   
   
#endif
#if definedEx(CONFIG_UBIUPDATEVOL)
   
   
   
#endif
#if !definedEx(CONFIG_UBIUPDATEVOL)
   
   
   
#endif
#if definedEx(CONFIG_WALL)
   
   
   
#endif
#if !definedEx(CONFIG_WALL)
   
   
   
#endif
#if definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if !definedEx(CONFIG_ADJTIMEX)
   
   
   
#endif
#if definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_BBCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_BEEP)
   
   
   
#endif
#if !definedEx(CONFIG_BEEP)
   
   
   
#endif
#if definedEx(CONFIG_CHAT)
   
   
   
#endif
#if !definedEx(CONFIG_CHAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_NOFAIL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_TTY_HIFI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_IMPLICIT_CR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SWALLOW_OPTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_SEND_ESCAPES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_VAR_ABORT_LEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHAT_CLR_ABORT)
   
   
   
#endif
#if definedEx(CONFIG_CHRT)
   
   
   
#endif
#if !definedEx(CONFIG_CHRT)
   
   
   
#endif
#if definedEx(CONFIG_CROND)
   
   
   
#endif
#if !definedEx(CONFIG_CROND)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_D)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if !definedEx(CONFIG_CRONTAB)
   
   
   
#endif
#if definedEx(CONFIG_DC)
   
   
   
#endif
#if !definedEx(CONFIG_DC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DC_LIBM)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_MODLOAD)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_FG_NP)
   
   
   
#endif
#if definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_DEVFSD_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_DEVFS)
   
   
   
#endif
#if definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if !definedEx(CONFIG_DEVMEM)
   
   
   
#endif
#if definedEx(CONFIG_EJECT)
   
   
   
#endif
#if !definedEx(CONFIG_EJECT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_EJECT_SCSI)
   
   
   
#endif
#if definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if !definedEx(CONFIG_FBSPLASH)
   
   
   
#endif
#if definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FLASHCP)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_LOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_UNLOCK)
   
   
   
#endif
#if definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if !definedEx(CONFIG_FLASH_ERASEALL)
   
   
   
#endif
#if definedEx(CONFIG_IONICE)
   
   
   
#endif
#if !definedEx(CONFIG_IONICE)
   
   
   
#endif
#if definedEx(CONFIG_INOTIFYD)
   
   
   
#endif
#if !definedEx(CONFIG_INOTIFYD)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_SMALL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LAST_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if !definedEx(CONFIG_HDPARM)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_GET_IDENTITY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_LEAF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_MAKEDEVS_TABLE)
   
   
   
#endif
#if definedEx(CONFIG_MAN)
   
   
   
#endif
#if !definedEx(CONFIG_MAN)
   
   
   
#endif
#if definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if !definedEx(CONFIG_MICROCOM)
   
   
   
#endif
#if definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if !definedEx(CONFIG_MOUNTPOINT)
   
   
   
#endif
#if definedEx(CONFIG_MT)
   
   
   
#endif
#if !definedEx(CONFIG_MT)
   
   
   
#endif
#if definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if !definedEx(CONFIG_RAIDAUTORUN)
   
   
   
#endif
#if definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if !definedEx(CONFIG_READAHEAD)
   
   
   
#endif
#if definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if !definedEx(CONFIG_RUNLEVEL)
   
   
   
#endif
#if definedEx(CONFIG_RX)
   
   
   
#endif
#if !definedEx(CONFIG_RX)
   
   
   
#endif
#if definedEx(CONFIG_SETSID)
   
   
   
#endif
#if !definedEx(CONFIG_SETSID)
   
   
   
#endif
#if definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if !definedEx(CONFIG_STRINGS)
   
   
   
#endif
#if definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if !definedEx(CONFIG_TASKSET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TASKSET_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_TIME)
   
   
   
#endif
#if definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_TTYSIZE)
   
   
   
#endif
#if definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if !definedEx(CONFIG_VOLNAME)
   
   
   
#endif
#if definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if !definedEx(CONFIG_WATCHDOG)
   
   
   
#endif
#if definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if !definedEx(CONFIG_NAMEIF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NAMEIF_EXTENDED)
   
   
   
#endif
#if definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if !definedEx(CONFIG_NBDCLIENT)
   
   
   
#endif
#if definedEx(CONFIG_NC)
   
   
   
#endif
#if !definedEx(CONFIG_NC)
   
   
   
#endif
#if definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_NC_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if !definedEx(CONFIG_NC_EXTRA)
   
   
   
#endif
#if definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_NC_110_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_PING)
   
   
   
#endif
#if !definedEx(CONFIG_PING)
   
   
   
#endif
#if definedEx(CONFIG_PING6)
   
   
   
#endif
#if !definedEx(CONFIG_PING6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FANCY_PING)
   
   
   
#endif
#if definedEx(CONFIG_WHOIS)
   
   
   
#endif
#if !definedEx(CONFIG_WHOIS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UNIX_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PREFER_IPV4_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if !definedEx(CONFIG_VERBOSE_RESOLUTION_ERRORS)
   
   
   
#endif
#if definedEx(CONFIG_ARP)
   
   
   
#endif
#if !definedEx(CONFIG_ARP)
   
   
   
#endif
#if definedEx(CONFIG_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BRCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BRCTL_SHOW)
   
   
   
#endif
#if definedEx(CONFIG_DNSD)
   
   
   
#endif
#if !definedEx(CONFIG_DNSD)
   
   
   
#endif
#if definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if !definedEx(CONFIG_ETHER_WAKE)
   
   
   
#endif
#if definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if !definedEx(CONFIG_FAKEIDENTD)
   
   
   
#endif
#if definedEx(CONFIG_FTPD)
   
   
   
#endif
#if !definedEx(CONFIG_FTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTP_WRITE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST)
   
   
   
#endif
#if definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if !definedEx(CONFIG_FTPGET)
   
   
   
#endif
#if definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if !definedEx(CONFIG_FTPPUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if !definedEx(CONFIG_HOSTNAME)
   
   
   
#endif
#if definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if !definedEx(CONFIG_HTTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_RANGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_USE_SENDFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SETUID)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_BASIC_AUTH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_AUTH_MD5)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CGI)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ENCODE_URL_STR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_ERROR_PAGES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_PROXY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_HTTPD_GZIP)
   
   
   
#endif
#if definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_IFCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_STATUS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_SLIP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_HW)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS)
   
   
   
#endif
#if definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if !definedEx(CONFIG_IFENSLAVE)
   
   
   
#endif
#if definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if !definedEx(CONFIG_IFPLUGD)
   
   
   
#endif
#if definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if !definedEx(CONFIG_IFUPDOWN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IP_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IFCONFIG_BUILTIN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV4)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_IPV6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_MAPPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP)
   
   
   
#endif
#if definedEx(CONFIG_INETD)
   
   
   
#endif
#if !definedEx(CONFIG_INETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_INETD_RPC)
   
   
   
#endif
#if definedEx(CONFIG_IP)
   
   
   
#endif
#if !definedEx(CONFIG_IP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ADDRESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_LINK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_TUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RULE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_SHORT_FORMS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IP_RARE_PROTOCOLS)
   
   
   
#endif
#if definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if !definedEx(CONFIG_IPADDR)
   
   
   
#endif
#if definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if !definedEx(CONFIG_IPLINK)
   
   
   
#endif
#if definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_IPROUTE)
   
   
   
#endif
#if definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if !definedEx(CONFIG_IPTUNNEL)
   
   
   
#endif
#if definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if !definedEx(CONFIG_IPRULE)
   
   
   
#endif
#if definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if !definedEx(CONFIG_IPCALC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_FANCY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPCALC_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_NETSTAT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NETSTAT_PRG)
   
   
   
#endif
#if definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if !definedEx(CONFIG_NSLOOKUP)
   
   
   
#endif
#if definedEx(CONFIG_NTPD)
   
   
   
#endif
#if !definedEx(CONFIG_NTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_NTPD_SERVER)
   
   
   
#endif
#if definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if !definedEx(CONFIG_PSCAN)
   
   
   
#endif
#if definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if !definedEx(CONFIG_SLATTACH)
   
   
   
#endif
#if definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_TCPSVD)
   
   
   
#endif
#if definedEx(CONFIG_TELNET)
   
   
   
#endif
#if !definedEx(CONFIG_TELNET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_TTYPE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNET_AUTOLOGIN)
   
   
   
#endif
#if definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if !definedEx(CONFIG_TELNETD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TELNETD_INETD_WAIT)
   
   
   
#endif
#if definedEx(CONFIG_TFTP)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP)
   
   
   
#endif
#if definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if !definedEx(CONFIG_TFTPD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_GET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PUT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_BLOCKSIZE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TFTP_PROGRESS_BAR)
   
   
   
#endif
#if definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if !definedEx(CONFIG_TFTP_DEBUG)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE)
   
   
   
#endif
#if definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if !definedEx(CONFIG_TRACEROUTE6)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_VERBOSE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_SOURCE_ROUTE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TRACEROUTE_USE_ICMP)
   
   
   
#endif
#if definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if !definedEx(CONFIG_TUNCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TUNCTL_UG)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC6)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC6)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPD)
   
   
   
#endif
#if definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if !definedEx(CONFIG_DHCPRELAY)
   
   
   
#endif
#if definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if !definedEx(CONFIG_DUMPLEASES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPD_WRITE_LEASES_EARLY)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPD_BASE_IP_ON_MAC)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPD_BASE_IP_ON_MAC)
   
   
   
#endif
#if definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if !definedEx(CONFIG_UDHCPC)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCPC_ARPING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_PORT)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_RFC3397)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UDHCP_8021Q)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UDHCP_8021Q)
   
   
   
#endif
#if definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if !definedEx(CONFIG_UDPSVD)
   
   
   
#endif
#if definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if !definedEx(CONFIG_VCONFIG)
   
   
   
#endif
#if definedEx(CONFIG_WGET)
   
   
   
#endif
#if !definedEx(CONFIG_WGET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_STATUSBAR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_AUTHENTICATION)
   
   
   
#endif

   
   
   
    
   
   

#if definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_WGET_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if !definedEx(CONFIG_ZCIP)
   
   
   
#endif
#if definedEx(CONFIG_LPD)
   
   
   
#endif
#if !definedEx(CONFIG_LPD)
   
   
   
#endif
#if definedEx(CONFIG_LPR)
   
   
   
#endif
#if !definedEx(CONFIG_LPR)
   
   
   
#endif
#if definedEx(CONFIG_LPQ)
   
   
   
#endif
#if !definedEx(CONFIG_LPQ)
   
   
   
#endif
#if definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if !definedEx(CONFIG_MAKEMIME)
   
   
   
#endif
#if definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if !definedEx(CONFIG_POPMAILDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_POPMAILDIR_DELIVERY)
   
   
   
#endif
#if definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if !definedEx(CONFIG_REFORMIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REFORMIME_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if !definedEx(CONFIG_SENDMAIL)
   
   
   
#endif
#if definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_IOSTAT)
   
   
   
#endif
#if definedEx(CONFIG_LSOF)
   
   
   
#endif
#if !definedEx(CONFIG_LSOF)
   
   
   
#endif
#if definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if !definedEx(CONFIG_MPSTAT)
   
   
   
#endif
#if definedEx(CONFIG_NMETER)
   
   
   
#endif
#if !definedEx(CONFIG_NMETER)
   
   
   
#endif
#if definedEx(CONFIG_PMAP)
   
   
   
#endif
#if !definedEx(CONFIG_PMAP)
   
   
   
#endif
#if definedEx(CONFIG_POWERTOP)
   
   
   
#endif
#if !definedEx(CONFIG_POWERTOP)
   
   
   
#endif
#if definedEx(CONFIG_PSTREE)
   
   
   
#endif
#if !definedEx(CONFIG_PSTREE)
   
   
   
#endif
#if definedEx(CONFIG_PWDX)
   
   
   
#endif
#if !definedEx(CONFIG_PWDX)
   
   
   
#endif
#if definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if !definedEx(CONFIG_SMEMCAP)
   
   
   
#endif
#if definedEx(CONFIG_TOP)
   
   
   
#endif
#if !definedEx(CONFIG_TOP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_USAGE_PERCENTAGE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_CPU_GLOBAL_PERCENTS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_CPU)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_DECIMALS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_TOPMEM)
   
   
   
#endif
#if definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if !definedEx(CONFIG_UPTIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_UPTIME_UTMP_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_UPTIME_UTMP_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_FREE)
   
   
   
#endif
#if !definedEx(CONFIG_FREE)
   
   
   
#endif
#if definedEx(CONFIG_FUSER)
   
   
   
#endif
#if !definedEx(CONFIG_FUSER)
   
   
   
#endif
#if definedEx(CONFIG_KILL)
   
   
   
#endif
#if !definedEx(CONFIG_KILL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL)
   
   
   
#endif
#if definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if !definedEx(CONFIG_KILLALL5)
   
   
   
#endif
#if definedEx(CONFIG_PGREP)
   
   
   
#endif
#if !definedEx(CONFIG_PGREP)
   
   
   
#endif
#if definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if !definedEx(CONFIG_PIDOF)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_SINGLE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PIDOF_OMIT)
   
   
   
#endif
#if definedEx(CONFIG_PKILL)
   
   
   
#endif
#if !definedEx(CONFIG_PKILL)
   
   
   
#endif
#if definedEx(CONFIG_PS)
   
   
   
#endif
#if !definedEx(CONFIG_PS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_WIDE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_LONG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_LONG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_TIME)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_PS_UNUSUAL_SYSTEMS)
   
   
   
#endif
#if definedEx(CONFIG_RENICE)
   
   
   
#endif
#if !definedEx(CONFIG_RENICE)
   
   
   
#endif
#if definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if !definedEx(CONFIG_BB_SYSCTL)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)
   
   
   
#endif
#if definedEx(CONFIG_WATCH)
   
   
   
#endif
#if !definedEx(CONFIG_WATCH)
   
   
   
#endif
#if definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSV)
   
   
   
#endif
#if definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_RUNSVDIR)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNSVDIR_LOG)
   
   
   
#endif
#if definedEx(CONFIG_SV)
   
   
   
#endif
#if !definedEx(CONFIG_SV)
   
   
   
#endif
#if definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SVLOGD)
   
   
   
#endif
#if definedEx(CONFIG_CHPST)
   
   
   
#endif
#if !definedEx(CONFIG_CHPST)
   
   
   
#endif
#if definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_SETUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if !definedEx(CONFIG_ENVUIDGID)
   
   
   
#endif
#if definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if !definedEx(CONFIG_ENVDIR)
   
   
   
#endif
#if definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if !definedEx(CONFIG_SOFTLIMIT)
   
   
   
#endif
#if definedEx(CONFIG_CHCON)
   
   
   
#endif
#if !definedEx(CONFIG_CHCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_CHCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_GETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_GETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if !definedEx(CONFIG_LOAD_POLICY)
   
   
   
#endif
#if definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if !definedEx(CONFIG_MATCHPATHCON)
   
   
   
#endif
#if definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if !definedEx(CONFIG_RESTORECON)
   
   
   
#endif
#if definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if !definedEx(CONFIG_RUNCON)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_RUNCON_LONG_OPTIONS)
   
   
   
#endif
#if definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if !definedEx(CONFIG_SELINUXENABLED)
   
   
   
#endif
#if definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if !definedEx(CONFIG_SETENFORCE)
   
   
   
#endif
#if definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if !definedEx(CONFIG_SETFILES)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SETFILES_CHECK_OPTION)
   
   
   
#endif
#if definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if !definedEx(CONFIG_SETSEBOOL)
   
   
   
#endif
#if definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if !definedEx(CONFIG_SESTATUS)
   
   
   
#endif
#if definedEx(CONFIG_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_ASH)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_IDLE_TIMEOUT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_IDLE_TIMEOUT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_JOB_CONTROL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_ALIAS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_GETOPTS)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_ECHO)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_PRINTF)
   
   
   
#endif
#if definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_BUILTIN_TEST)
   
   
   
#endif
#if definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_CMDCMD)
   
   
   
#endif
#if definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_MAIL)
   
   
   
#endif
#if definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_OPTIMIZE_FOR_SIZE)
   
   
   
#endif
#if definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if !definedEx(CONFIG_ASH_EXPAND_PRMT)
   
   
   
#endif
#if definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if !definedEx(CONFIG_CTTYHACK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_BASH_COMPAT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_BRACE_EXPANSION)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_BRACE_EXPANSION)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_HELP)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_INTERACTIVE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_SAVEHISTORY)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_JOB)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_TICK)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_IF)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOOPS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_CASE)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_FUNCTIONS)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_LOCAL)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_RANDOM_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_EXPORT_N)
   
   
   
#endif
#if definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if !definedEx(CONFIG_HUSH_MODE_X)
   
   
   
#endif
#if definedEx(CONFIG_MSH)
   
   
   
#endif
#if !definedEx(CONFIG_MSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_ASH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_NONE)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT)
   
   
   
#endif
#if definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if !definedEx(CONFIG_SH_MATH_SUPPORT_64)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_EXTRA_QUIET)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_STANDALONE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_NOFORK)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SH_HISTFILESIZE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SH_HISTFILESIZE)
   
   
   
#endif
#if definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_SYSLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_ROTATE_LOGFILE)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_REMOTE_LOG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_DUP)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_SYSLOGD_CFG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOGD_CFG)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_IPC_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if !definedEx(CONFIG_LOGREAD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_LOGREAD_REDUCED_LOCKING)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KMSG_SYSLOG)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KMSG_SYSLOG)
   
   
   
#endif
#if definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if !definedEx(CONFIG_KLOGD)
   
   
   
#endif
#if definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if !definedEx(CONFIG_FEATURE_KLOGD_KLOGCTL)
   
   
   
#endif
#if definedEx(CONFIG_LOGGER)
   
   
   
#endif
#if !definedEx(CONFIG_LOGGER)
   
   
   
#endif
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/mheader.h" 1














































#if definedEx(CONFIG_FEATURE_PIDFILE)
  
#endif
#if definedEx(CONFIG_SHA3_SMALL_TR)
  
#endif
#if !definedEx(CONFIG_SHA3_SMALL_TR)
  
#endif
#line 1 "gitbusybox/libbb/appletlib.c" 1
/* vi: set sw=4 ts=4: */
/*
 * Utility routines.
 *
 * Copyright (C) tons of folks.  Tracking down who wrote what
 * isn't something I'm going to worry about...  If you wrote something
 * here, please feel free to acknowledge your work.
 *
 * Based in part on code from sash, Copyright (c) 1999 by David I. Bell
 * Permission has been granted to redistribute this code under GPL.
 *
 * Licensed under GPLv2 or later, see file LICENSE in this source tree.
 */

/* We are trying to not use printf, this benefits the case when selected
 * applets are really simple. Example:
 *
 * $ ./busybox
 * ...
 * Currently defined functions:
 *         basename, false, true
 *
 * $ size busybox
 *    text    data     bss     dec     hex filename
 *    4473      52      72    4597    11f5 busybox
 *
 * FEATURE_INSTALLER or FEATURE_SUID will still link printf routines in. :(
 */
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/busybox.h" 1
/* vi: set sw=4 ts=4: */
/*
 * Licensed under GPLv2 or later, see file LICENSE in this source tree.
 */



#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 1
/* vi: set sw=4 ts=4: */
/*
 * Busybox main internal header file
 *
 * Based in part on code from sash, Copyright (c) 1999 by David I. Bell
 * Permission has been granted to redistribute this code under GPL.
 *
 * Licensed under GPLv2, see file LICENSE in this source tree.
 */



#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 1
/* vi: set sw=4 ts=4: */
/*
 * Copyright 2006, Bernhard Reutner-Fischer
 *
 * Licensed under GPLv2 or later, see file LICENSE in this source tree.
 */




/* Convenience macros to test the version of gcc. */




 

/* __restrict is known in EGCS 1.2 and above. */













 
 






/* "The malloc attribute is used to tell the compiler that a function
 * may be treated as if any non-NULL pointer it returns cannot alias
 * any other pointer valid when the function returns. This will often
 * improve optimization. Standard functions with this property include
 * malloc and calloc. realloc-like functions have this property as long
 * as the old pointer is never referred to (including comparing it
 * to the new pointer) after the function returns a non-NULL value."
 */




/* __NO_INLINE__: some gcc's do not honor inlining! :( */







 


 




/* -fwhole-program makes all symbols local. The attribute externally_visible
 * forces a symbol global.  */


//__attribute__ ((__externally_visible__))
 

/* At 4.4 gcc become much more anal about this, need to use "aliased" types */


 

/* We use __extension__ in some places to suppress -pedantic warnings
 * about GCC extensions.  This feature didn't work properly before
 * gcc 2.8.  */





/* FAST_FUNC is a qualifier which (possibly) makes function call faster
 * and/or smaller by using modified ABI. It is usually only needed
 * on non-static, busybox internal functions. Recent versions of gcc
 * optimize statics automatically. FAST_FUNC on static is required
 * only if you need to match a function pointer's type */




 

/* Make all declarations hidden (-fvisibility flag only affects definitions) */
/* (don't include system headers after this until corresponding pop!) */



 


/* gcc-2.95 had no va_copy but only __va_copy. */






/* ---- Endian Detection ------------------------------------ */

#line 1 "systems/redhat/usr/include/limits.h" 1
/* Copyright (C) 1991, 1992, 1996, 1997, 1998, 1999, 2000, 2005
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.10/5.2.4.2.1 Sizes of integer types	<limits.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _BSD_SOURCE		ISO C, POSIX, and 4.3BSD things.
   _SVID_SOURCE		ISO C, POSIX, and SVID things.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _REENTRANT		Select additionally reentrant object.
   _THREAD_SAFE		Same as _REENTRANT, often used by other systems.
   _FORTIFY_SOURCE	If set to numeric value > 0 additional security
			measures are defined, according to level.

   The `-ansi' switch to the GNU C compiler defines __STRICT_ANSI__.
   If none of these are defined, the default is to have _SVID_SOURCE,
   _BSD_SOURCE, and _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to
   200112L.  If more than one of these are defined, they accumulate.
   For example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE
   together give you ISO C, 1003.1, and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_BSD		Define 4.3BSD things.
   __USE_SVID		Define SVID things.
   __USE_MISC		Define things common to BSD and System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_REENTRANT	Define reentrant/thread-safe *_r functions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.
   __FAVOR_BSD		Favor 4.3BSD things in cases of conflict.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.  */


/* Undefine everything, so we get a clean slate.  */


























/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */



/* Always use ISO C things.  */


/* Convenience macros to test the versions of glibc and gcc.
   Use them like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note - they won't work for gcc1 or glibc1, since the _MINOR macros
   were not defined then.  */



 

/* If _BSD_SOURCE was defined by the user, favor BSD over POSIX.  */



/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */






















/* If nothing (other than _GNU_SOURCE) is defined,
   define _BSD_SOURCE and _SVID_SOURCE.  */




/* This is to enable the ISO C99 extension.  Also recognize the old macro
   which was used prior to the standard acceptance.  This macro will
   eventually go away and the features enabled by default once the ISO C99
   standard is widely adopted.  */



/* This is to enable the ISO C90 Amendment 1:1995 extension.  */



/* If none of the ANSI/POSIX macros are defined, use POSIX.1 and POSIX.2
   (and IEEE Std 1003.1b-1993 unless _XOPEN_SOURCE is defined).  */




 
 
 














































 





































 
 

 

/* We do support the IEC 559 math functionality, real and complex.  */



/* wchar_t uses ISO 10646-1 (2nd ed., published 2000-09-15) / Unicode 3.1.  */


/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */



/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */






/* Decide whether a compiler supports the long long datatypes.  */



/* This is here only because every header file already includes this one.  */


#line 1 "systems/redhat/usr/include/sys/cdefs.h" 1
/* Copyright (C) 1992-2001, 2002, 2004, 2005, 2006, 2007, 2009
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* We are almost always included from features.h. */



/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */



/* Some user header file might have defined this before.  */




/* GCC can always grok prototypes.  For C++ programs we add throw()
   to help it optimize the function calls.  But this works only with
   gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
   as non-throwing using a function attribute since programs can use
   the -fexceptions options for C code as well.  */



 


 



 









/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */



/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */




/* This is not a typedef so `const __ptr_t' does the right thing.  */




/* C++ needs to know that types and declarations are C, not C++.  */



 


/* The standard library needs the functions from the ISO C90 standard
   in the std namespace.  At the same time we want to be safe for
   future changes and we include the ISO C99 code in the non-standard
   namespace __c99.  The C++ wrapper header take case of adding the
   definitions to the global namespace.  */







 /* For compatibility we do not add the declarations into any
   namespace.  They will end up in the global namespace which is what
   old code expects.  */







/* Support for bounded pointers.  */





/* Fortify support.  */









 



/* Support for flexible arrays.  */

/* GCC 2.97 supports C99 flexible array members.  */

 

 

 




/* __asm__ ("xyz") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */






 





/*
#elif __SOME_OTHER_COMPILER__

# define __REDIRECT(name, proto, alias) name proto; 	_Pragma("let " #name " = " #alias)

*/

/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */



/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */


 

/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */



 


/* gcc allows marking deprecated functions.  */


 

/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */


 

/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */



 

/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */


 

/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */






 




/* Forces a function to be always inlined.  */


 

/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  */






 


 



 



/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */




/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */



/* __restrict is known in EGCS 1.2 and above. */



/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */


 

 

 




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 367 "systems/redhat/usr/include/sys/cdefs.h" 2

































#line 363 "systems/redhat/usr/include/features.h" 2

/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */





/* Decide whether we can define 'extern inline' functions in headers.  */



/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */
#line 1 "systems/redhat/usr/include/gnu/stubs.h" 1
/* This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */

#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 6 "systems/redhat/usr/include/gnu/stubs.h" 2



 #line 1 "systems/redhat/usr/include/gnu/stubs-64.h" 1
/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */


 















#line 11 "systems/redhat/usr/include/gnu/stubs.h" 2
 

#line 387 "systems/redhat/usr/include/features.h" 2



#line 29 "systems/redhat/usr/include/limits.h" 2


/* Maximum length of any multibyte character in any locale.
   We define this value here since the gcc header does not define
   the correct value.  */



/* If we are not using GNU CC we have to define all the symbols ourself.
   Otherwise use gcc's definitions (see below).  */





























 



















 






 













 /* Get the compiler's limits.h, which defines almost all the ISO constants.

    We put this #include_next outside the double inclusion check because
    it should be possible to include this file more than once and still get
    the definitions from gcc's header.  */

/* `_GCC_LIMITS_H_' is what GCC's file defines.  */
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/limits.h" 1
/* This administrivia gets added to the beginning of limits.h
   if the system has its own version of limits.h.  */

/* We use _GCC_LIMITS_H_ because we want this not to match
   any macros that the system's limits.h uses for its own purposes.  */










/* Number of bits in a `char'.  */



/* Maximum length of a multibyte character.  */



/* Minimum and maximum values a `signed char' can hold.  */





/* Maximum value an `unsigned char' can hold.  (Minimum is 0).  */



 

/* Minimum and maximum values a `char' can hold.  */




 



 




/* Minimum and maximum values a `signed short int' can hold.  */





/* Maximum value an `unsigned short int' can hold.  (Minimum is 0).  */



 

/* Minimum and maximum values a `signed int' can hold.  */





/* Maximum value an `unsigned int' can hold.  (Minimum is 0).  */



/* Minimum and maximum values a `signed long int' can hold.
   (Same as `int').  */





/* Maximum value an `unsigned long int' can hold.  (Minimum is 0).  */




/* Minimum and maximum values a `signed long long int' can hold.  */





/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */




/* Minimum and maximum values a `signed long long int' can hold.  */





/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */




/* This administrivia gets added to the end of limits.h
   if the system has its own version of limits.h.  */

 



#line 127 "systems/redhat/usr/include/limits.h" 2

/* The <limits.h> files in some gcc versions don't define LLONG_MIN,
   LLONG_MAX, and ULLONG_MAX.  Instead only the values gcc defined for
   ages are available.  */












/* POSIX adds things to <limits.h>.  */
#line 1 "systems/redhat/usr/include/bits/posix1_lim.h" 1
/* Copyright (C) 1991-1993,96,98,2000-2003,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.9.2 Minimum Values	Added to <limits.h>
 *
 *	Never include this file directly; use <limits.h> instead.
 */





/* These are the standard-mandated minimum values.  */

/* Minimum number of operations in one list I/O call.  */


/* Minimal number of outstanding asynchronous I/O operations.  */


/* Maximum length of arguments to `execve', including environment.  */


/* Maximum simultaneous processes per real user ID.  */


 

/* Minimal number of timer expiration overruns.  */


/* Maximum length of a host name (not including the terminating null)
   as returned from the GETHOSTNAME function.  */


/* Maximum link count of a file.  */


/* Maximum length of login name.  */


/* Number of bytes in a terminal canonical input queue.  */


/* Number of bytes for which space will be
   available in a terminal input queue.  */


/* Maximum number of message queues open for a process.  */


/* Maximum number of supported message priorities.  */


/* Number of bytes in a filename.  */


/* Number of simultaneous supplementary group IDs per process.  */


 

/* Number of files one process can have open at once.  */


 


/* Number of descriptors that a process may examine with `pselect' or
   `select'.  */


/* Number of bytes in a pathname.  */


/* Number of bytes than can be written atomically to a pipe.  */


/* The number of repeated occurrences of a BRE permitted by the
   REGEXEC and REGCOMP functions when using the interval notation.  */


/* Minimal number of realtime signals reserved for the application.  */


/* Number of semaphores a process can have.  */


/* Maximal value of a semaphore.  */


/* Number of pending realtime signals.  */


/* Largest value of a `ssize_t'.  */


/* Number of streams a process can have open at once.  */


/* The number of bytes in a symbolic link.  */


/* The number of symbolic links that can be traversed in the
   resolution of a pathname in the absence of a loop.  */


/* Number of timer for a process.  */


/* Maximum number of characters in a tty name.  */


/* Maximum length of a timezone name (element of `tzname').  */



/* Maximum number of connections that can be queued on a socket.  */


/* Maximum number of bytes that can be buffered on a socket for send
   or receive.  */


/* Maximum number of elements in an `iovec' array.  */


/* Maximum clock resolution in nanoseconds.  */



/* Get the implementation-specific values for the above.  */
#line 1 "systems/redhat/usr/include/bits/local_lim.h" 1
/* Minimum guaranteed maximum values for system limits.  Linux version.
   Copyright (C) 1993-1998,2000,2002-2004,2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* The kernel header pollutes the namespace with the NR_OPEN symbol
   and defines LINK_MAX although filesystems have different maxima.  A
   similar thing is true for OPEN_MAX: the limit can be changed at
   runtime and therefore the macro must not be defined.  Remove this
   after including the header if necessary.  */












/* The kernel sources contain a file with all the needed information.  */
#line 1 "systems/redhat/usr/include/linux/limits.h" 1




















#line 41 "systems/redhat/usr/include/bits/local_lim.h" 2

/* Have to remove NR_OPEN?  */




/* Have to remove LINK_MAX?  */




/* Have to remove OPEN_MAX?  */




/* Have to remove ARG_MAX?  */




/* The number of data keys per process.  */

/* This is the value this implementation supports.  */


/* Controlling the iterations of destructors for thread-specific data.  */

/* Number of iterations this implementation does.  */


/* The number of threads per process.  */

/* We have no predefined limit on the number of threads.  */


/* Maximum amount by which a process can descrease its asynchronous I/O
   priority level.  */


/* Minimum size for a thread.  We are free to choose a reasonable value.  */


/* Maximum number of timer expiration overruns.  */


/* Maximum tty name length.  */


/* Maximum login name length.  This is arbitrary.  */


/* Maximum host name length.  */


/* Maximum message queue priority level.  */


/* Maximum value the semaphore can have.  */

#line 159 "systems/redhat/usr/include/bits/posix1_lim.h" 2





/* This value is a guaranteed minimum maximum.
   The current maximum can be got from `sysconf'.  */





#line 147 "systems/redhat/usr/include/limits.h" 2


#line 1 "systems/redhat/usr/include/bits/posix2_lim.h" 1
/* Copyright (C) 1991, 1996, 1999, 2000, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; include <limits.h> instead.
 */





/* The maximum `ibase' and `obase' values allowed by the `bc' utility.  */


/* The maximum number of elements allowed in an array by the `bc' utility.  */


/* The maximum `scale' value allowed by the `bc' utility.  */


/* The maximum length of a string constant accepted by the `bc' utility.  */


/* The maximum number of weights that can be assigned to an entry of
   the LC_COLLATE `order' keyword in the locale definition file.  */


/* The maximum number of expressions that can be nested
   within parentheses by the `expr' utility.  */


/* The maximum length, in bytes, of an input line.  */


/* The maximum number of repeated occurrences of a regular expression
   permitted when using the interval notation `\{M,N\}'.  */


/* The maximum number of bytes in a character class name.  We have no
   fixed limit, 2048 is a high number.  */



/* These values are implementation-specific,
   and may vary within the implementation.
   Their precise values can be obtained from sysconf.  */

























/* This value is defined like this in regex.h.  */



#line 151 "systems/redhat/usr/include/limits.h" 2


#line 1 "systems/redhat/usr/include/bits/xopen_lim.h" 1
/* Copyright (C) 1996, 1997, 1999, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <limits.h> instead.
 */

/* Additional definitions from X/Open Portability Guide, Issue 4, Version 2
   System Interfaces and Headers, 4.16 <limits.h>

   Please note only the values which are not greater than the minimum
   stated in the standard document are listed.  The `sysconf' functions
   should be used to obtain the actual value.  */





#line 1 "systems/redhat/usr/include/bits/stdio_lim.h" 1
/* Copyright (C) 1994, 1997, 1998, 1999, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */























#line 36 "systems/redhat/usr/include/bits/xopen_lim.h" 2

/* We do not provide fixed values for

   ARG_MAX	Maximum length of argument to the `exec' function
		including environment data.

   ATEXIT_MAX	Maximum number of functions that may be registered
		with `atexit'.

   CHILD_MAX	Maximum number of simultaneous processes per real
		user ID.

   OPEN_MAX	Maximum number of files that one process can have open
		at anyone time.

   PAGESIZE
   PAGE_SIZE	Size of bytes of a page.

   PASS_MAX	Maximum number of significant bytes in a password.

   We only provide a fixed limit for

   IOV_MAX	Maximum number of `iovec' structures that one process has
		available for use with `readv' or writev'.

   if this is indeed fixed by the underlying system.
*/


/* Maximum number of `iovec' structures that one process has available
   for use with `readv' or writev'.  */



/* Maximum value of `digit' in calls to the `printf' and `scanf'
   functions.  We have no limit, so return a reasonable value.  */


/* Maximum number of bytes in a `LANG' name.  We have no limit.  */


/* Maximum message number.  We have no limit.  */


/* Maximum number of bytes in N-to-1 collation mapping.  We have no
   limit.  */


/* Maximum set number.  We have no limit.  */


/* Maximum number of bytes in a message.  We have no limit.  */


/* Default process priority.  */



/* Number of bits in a word of type `int'.  */



 

 



 

 

 



 

/* Number of bits in a word of type `long int'.  */



 /* Safe assumption.  */


 

 


 


 



#line 155 "systems/redhat/usr/include/limits.h" 2

#line 140 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2


 




 #line 1 "systems/redhat/usr/include/byteswap.h" 1
/* Copyright (C) 1997 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Get the machine specific, optimized definitions.  */
#line 1 "systems/redhat/usr/include/bits/byteswap.h" 1
/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997, 1998, 2000, 2002, 2003, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "systems/redhat/usr/include/bits/byteswap.h" 2

/* Swap bytes in 16 bit value.  */















 




/* Swap bytes in 32 bit value.  */






/* To swap the bytes in a word the i486 processors and up provide the
   `bswap' opcode.  On i386 we have to use three instructions.  */








 













 




/* Swap bytes in 64 bit value.  */



















 















#line 25 "systems/redhat/usr/include/byteswap.h" 2


/* The following definitions must all be macros since otherwise some
   of the possible optimizations are not possible.  */

/* Return a value with all bytes in the 16 bit argument swapped.  */


/* Return a value with all bytes in the 32 bit argument swapped.  */



/* Return a value with all bytes in the 64 bit argument swapped.  */



#line 151 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2
#line 1 "systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/endian.h" 2

/* Definitions for byte order, according to significance of bytes,
   from low addresses to high addresses.  The value is what you get by
   putting '4' in the most significant byte, '3' in the second most
   significant byte, '2' in the second least significant byte, and '1'
   in the least significant byte, and then writing down one digit for
   each byte, starting with the byte at the lowest address at the left,
   and proceeding to the byte with the highest address at the right.  */





/* This file defines `__BYTE_ORDER' for the particular machine.  */
#line 1 "systems/redhat/usr/include/bits/endian.h" 1
/* x86_64 is little-endian.  */





#line 39 "systems/redhat/usr/include/endian.h" 2

/* Some machines may need to use a different endianness for floating point
   values.  */











 


/* Conversion interfaces.  */
#line 1 "systems/redhat/usr/include/bits/byteswap.h" 1
/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997, 1998, 2000, 2002, 2003, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

























 





















 













 
























 















#line 63 "systems/redhat/usr/include/endian.h" 2
















 
















#line 152 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2




 

 

 

 

 

 

 




/* SWAP_LEnn means "convert CPU<->little_endian by swapping bytes" */









 








/* ---- Unaligned access ------------------------------------ */

#line 1 "systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/stdint.h" 2
#line 1 "systems/redhat/usr/include/bits/wchar.h" 1
/* wchar_t type related definitions.
   Copyright (C) 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */








#line 29 "systems/redhat/usr/include/stdint.h" 2
#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "systems/redhat/usr/include/stdint.h" 2

/* Exact integral types.  */

/* Signed.  */

/* There is some amount of overlap with <sys/types.h> as known by inet code */


typedef signed char		int8_t;
typedef short int		int16_t;
typedef int			int32_t;

typedef long int		int64_t;
 



/* Unsigned.  */
typedef unsigned char		uint8_t;
typedef unsigned short int	uint16_t;

typedef unsigned int		uint32_t;



typedef unsigned long int	uint64_t;
 


/* Small types.  */

/* Signed.  */
typedef signed char		int_least8_t;
typedef short int		int_least16_t;
typedef int			int_least32_t;

typedef long int		int_least64_t;
 


/* Unsigned.  */
typedef unsigned char		uint_least8_t;
typedef unsigned short int	uint_least16_t;
typedef unsigned int		uint_least32_t;

typedef unsigned long int	uint_least64_t;
 


/* Fast types.  */

/* Signed.  */
typedef signed char		int_fast8_t;

typedef long int		int_fast16_t;
typedef long int		int_fast32_t;
typedef long int		int_fast64_t;
 




/* Unsigned.  */
typedef unsigned char		uint_fast8_t;

typedef unsigned long int	uint_fast16_t;
typedef unsigned long int	uint_fast32_t;
typedef unsigned long int	uint_fast64_t;
 




/* Types for `void *' pointers.  */


typedef long int		intptr_t;


typedef unsigned long int	uintptr_t;
 





/* Largest integral types.  */

typedef long int		intmax_t;
typedef unsigned long int	uintmax_t;
 




/* The ISO C99 standard specifies that in C++ implementations these
   macros should only be defined if explicitly requested.  */




 


/* Limits of integral types.  */

/* Minimum of signed integral types.  */




/* Maximum of signed integral types.  */





/* Maximum of unsigned integral types.  */






/* Minimum of signed integral types having a minimum size.  */




/* Maximum of signed integral types having a minimum size.  */





/* Maximum of unsigned integral types having a minimum size.  */






/* Minimum of fast signed integral types having a minimum size.  */




 



/* Maximum of fast signed integral types having a minimum size.  */




 




/* Maximum of fast unsigned integral types having a minimum size.  */




 





/* Values to test for integral types holding `void *' pointer.  */




 



/* Minimum for largest signed integral type.  */

/* Maximum for largest signed integral type.  */


/* Maximum for largest unsigned integral type.  */



/* Limits of other integer types.  */

/* Limits of `ptrdiff_t' type.  */



 


/* Limits of `sig_atomic_t'.  */



/* Limit of `size_t' type.  */


 

/* Limits of `wchar_t'.  */

/* These constants might also be defined in <wchar.h>.  */



/* Limits of `wint_t'.  */




/* The ISO C99 standard specifies that in C++ implementations these
   should only be defined if explicitly requested.  */

/* Signed.  */





 

/* Unsigned.  */





 

/* Maximal type.  */



 




#line 208 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2
typedef int      bb__aliased_int      __attribute__((__may_alias__));
typedef long     bb__aliased_long     __attribute__((__may_alias__));
typedef uint16_t bb__aliased_uint16_t __attribute__((__may_alias__));
typedef uint32_t bb__aliased_uint32_t __attribute__((__may_alias__));
typedef uint64_t bb__aliased_uint64_t __attribute__((__may_alias__));

/* NB: unaligned parameter should be a pointer, aligned one -
 * a lvalue. This makes it more likely to not swap them by mistake
 */







/* #elif ... - add your favorite arch today! */
 













/* ---- Size-saving "small" ints (arch-dependent) ----------- */


/* add other arches which benefit from this... */
typedef signed char smallint;
typedef unsigned char smalluint;
 



/* ISO C Standard:  7.16  Boolean type and values  <stdbool.h> */



 /* modern system, so use it */
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdbool.h" 1
/* Copyright (C) 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.16  Boolean type and values  <stdbool.h>
 */









 






/* Signal that all the definitions are present.  */



#line 261 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2

/*----- Kernel versioning ------------------------------------*/





 

/* ---- Miscellaneous --------------------------------------- */


#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 283 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2

/* Define bb_setpgrp */



 

/* fdprintf is more readable, we used it before dprintf was standardized */
#line 1 "systems/redhat/usr/include/unistd.h" 1
/* Copyright (C) 1991-2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.10 Symbolic Constants		<unistd.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/unistd.h" 2



/* These may be used to determine what facilities are present at compile time.
   Their values can be obtained at run time from `sysconf'.  */


/* POSIX Standard approved as ISO/IEC 9945-1 as of September 2008.  */

 

 

 

 


/* These are not #ifdef __USE_POSIX2 because they are
   in the theoretically application-owned namespace.  */



/* The utilities on GNU systems also correspond to this version.  */
 

 

 


/* The utilities on GNU systems also correspond to this version.  */


/* If defined, the implementation supports the
   C Language Bindings Option.  */


/* If defined, the implementation supports the
   C Language Development Utilities Option.  */


/* If defined, the implementation supports the
   Software Development Utilities Option.  */


/* If defined, the implementation supports the
   creation of locales with the localedef utility.  */


/* X/Open version number to which the library conforms.  It is selectable.  */


 
 
 

/* Commands and utilities from XPG4 are available.  */


/* We are compatible with the old published standards as well.  */




/* The X/Open Unix extensions are available.  */


/* Encryption is present.  */


/* The enhanced internationalization capabilities according to XPG4.2
   are present.  */


/* The legacy interfaces are also available.  */



/* Get values of POSIX options:

   If these symbols are defined, the corresponding features are
   always available.  If not, they may be available sometimes.
   The current values can be obtained with `sysconf'.

   _POSIX_JOB_CONTROL		Job control is supported.
   _POSIX_SAVED_IDS		Processes have a saved set-user-ID
				and a saved set-group-ID.
   _POSIX_REALTIME_SIGNALS	Real-time, queued signals are supported.
   _POSIX_PRIORITY_SCHEDULING	Priority scheduling is supported.
   _POSIX_TIMERS		POSIX.4 clocks and timers are supported.
   _POSIX_ASYNCHRONOUS_IO	Asynchronous I/O is supported.
   _POSIX_PRIORITIZED_IO	Prioritized asynchronous I/O is supported.
   _POSIX_SYNCHRONIZED_IO	Synchronizing file data is supported.
   _POSIX_FSYNC			The fsync function is present.
   _POSIX_MAPPED_FILES		Mapping of files to memory is supported.
   _POSIX_MEMLOCK		Locking of all memory is supported.
   _POSIX_MEMLOCK_RANGE		Locking of ranges of memory is supported.
   _POSIX_MEMORY_PROTECTION	Setting of memory protections is supported.
   _POSIX_MESSAGE_PASSING	POSIX.4 message queues are supported.
   _POSIX_SEMAPHORES		POSIX.4 counting semaphores are supported.
   _POSIX_SHARED_MEMORY_OBJECTS	POSIX.4 shared memory objects are supported.
   _POSIX_THREADS		POSIX.1c pthreads are supported.
   _POSIX_THREAD_ATTR_STACKADDR	Thread stack address attribute option supported.
   _POSIX_THREAD_ATTR_STACKSIZE	Thread stack size attribute option supported.
   _POSIX_THREAD_SAFE_FUNCTIONS	Thread-safe functions are supported.
   _POSIX_THREAD_PRIORITY_SCHEDULING
				POSIX.1c thread execution scheduling supported.
   _POSIX_THREAD_PRIO_INHERIT	Thread priority inheritance option supported.
   _POSIX_THREAD_PRIO_PROTECT	Thread priority protection option supported.
   _POSIX_THREAD_PROCESS_SHARED	Process-shared synchronization supported.
   _POSIX_PII			Protocol-independent interfaces are supported.
   _POSIX_PII_XTI		XTI protocol-indep. interfaces are supported.
   _POSIX_PII_SOCKET		Socket protocol-indep. interfaces are supported.
   _POSIX_PII_INTERNET		Internet family of protocols supported.
   _POSIX_PII_INTERNET_STREAM	Connection-mode Internet protocol supported.
   _POSIX_PII_INTERNET_DGRAM	Connectionless Internet protocol supported.
   _POSIX_PII_OSI		ISO/OSI family of protocols supported.
   _POSIX_PII_OSI_COTS		Connection-mode ISO/OSI service supported.
   _POSIX_PII_OSI_CLTS		Connectionless ISO/OSI service supported.
   _POSIX_POLL			Implementation supports `poll' function.
   _POSIX_SELECT		Implementation supports `select' and `pselect'.

   _XOPEN_REALTIME		X/Open realtime support is available.
   _XOPEN_REALTIME_THREADS	X/Open realtime thread support is available.
   _XOPEN_SHM			Shared memory interface according to XPG4.2.

   _XBS5_ILP32_OFF32		Implementation provides environment with 32-bit
				int, long, pointer, and off_t types.
   _XBS5_ILP32_OFFBIG		Implementation provides environment with 32-bit
				int, long, and pointer and off_t with at least
				64 bits.
   _XBS5_LP64_OFF64		Implementation provides environment with 32-bit
				int, and 64-bit long, pointer, and off_t types.
   _XBS5_LPBIG_OFFBIG		Implementation provides environment with at
				least 32 bits int and long, pointer, and off_t
				with at least 64 bits.

   If any of these symbols is defined as -1, the corresponding option is not
   true for any file.  If any is defined as other than -1, the corresponding
   option is true for all files.  If a symbol is not defined at all, the value
   for a specific file can be obtained from `pathconf' and `fpathconf'.

   _POSIX_CHOWN_RESTRICTED	Only the super user can use `chown' to change
				the owner of a file.  `chown' can only be used
				to change the group ID of a file to a group of
				which the calling process is a member.
   _POSIX_NO_TRUNC		Pathname components longer than
				NAME_MAX generate an error.
   _POSIX_VDISABLE		If defined, if the value of an element of the
				`c_cc' member of `struct termios' is
				_POSIX_VDISABLE, no character will have the
				effect associated with that element.
   _POSIX_SYNC_IO		Synchronous I/O may be performed.
   _POSIX_ASYNC_IO		Asynchronous I/O may be performed.
   _POSIX_PRIO_IO		Prioritized Asynchronous I/O may be performed.

   Support for the Large File Support interface is not generally available.
   If it is available the following constants are defined to one.
   _LFS64_LARGEFILE		Low-level I/O supports large files.
   _LFS64_STDIO			Standard I/O supports large files.
   */

#line 1 "systems/redhat/usr/include/bits/posix_opt.h" 1
/* Define POSIX options for Linux.
   Copyright (C) 1996-2004, 2006, 2008, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */




/* Job control is supported.  */


/* Processes have a saved set-user-ID and a saved set-group-ID.  */


/* Priority scheduling is supported.  */


/* Synchronizing file data is supported.  */


/* The fsync function is present.  */


/* Mapping of files to memory is supported.  */


/* Locking of all memory is supported.  */


/* Locking of ranges of memory is supported.  */


/* Setting of memory protections is supported.  */


/* Some filesystems allow all users to change file ownership.  */


/* `c_cc' member of 'struct termios' structure can be disabled by
   using the value _POSIX_VDISABLE.  */


/* Filenames are not silently truncated.  */


/* X/Open realtime support is available.  */


/* X/Open thread realtime support is available.  */


/* XPG4.2 shared memory is supported.  */


/* Tell we have POSIX threads.  */


/* We have the reentrant functions described in POSIX.  */



/* We provide priority scheduling for threads.  */


/* We support user-defined stack sizes.  */


/* We support user-defined stacks.  */


/* We support priority inheritence.  */


/* We support priority protection, though only for non-robust
   mutexes.  */



/* We support priority inheritence for robust mutexes.  */


/* We do not support priority protection for robust mutexes.  */


/* We support POSIX.1b semaphores.  */


/* Real-time signals are supported.  */


/* We support asynchronous I/O.  */


/* Alternative name for Unix98.  */

/* Support for prioritization is also available.  */


/* The LFS support in asynchronous I/O is also available.  */


/* The rest of the LFS is also available.  */




/* POSIX shared memory objects are implemented.  */


/* CPU-time clocks support needs to be checked at runtime.  */


/* Clock support in threads must be also checked at runtime.  */


/* GNU libc provides regular expression handling.  */


/* Reader/Writer locks are available.  */


/* We have a POSIX shell.  */


/* We support the Timeouts option.  */


/* We support spinlocks.  */


/* The `spawn' function family is supported.  */


/* We have POSIX timers.  */


/* The barrier functions are available.  */


/* POSIX message queues are available.  */


/* Thread process-shared synchronization is supported.  */


/* The monotonic clock might be available.  */


/* The clock selection interfaces are available.  */


/* Advisory information interfaces are available.  */


/* IPv6 support is available.  */


/* Raw socket support is available.  */


/* We have at least one terminal.  */


/* Neither process nor thread sporadic server interfaces is available.  */



/* trace.h is not available.  */





/* Typed memory objects are not available.  */


/* Streams are not available.  */



#line 205 "systems/redhat/usr/include/unistd.h" 2

/* Get the environment definitions from Unix98.  */

#line 1 "systems/redhat/usr/include/bits/environments.h" 1
/* Copyright (C) 1999, 2001, 2004, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "systems/redhat/usr/include/bits/environments.h" 2

/* This header should define the following symbols under the described
   situations.  A value `1' means that the model is always supported,
   `-1' means it is never supported.  Undefined means it cannot be
   statically decided.

   _POSIX_V7_ILP32_OFF32   32bit int, long, pointers, and off_t type
   _POSIX_V7_ILP32_OFFBIG  32bit int, long, and pointers and larger off_t type

   _POSIX_V7_LP64_OFF32	   64bit long and pointers and 32bit off_t type
   _POSIX_V7_LPBIG_OFFBIG  64bit long and pointers and large off_t type

   The macros _POSIX_V6_ILP32_OFF32, _POSIX_V6_ILP32_OFFBIG,
   _POSIX_V6_LP64_OFF32, _POSIX_V6_LPBIG_OFFBIG, _XBS5_ILP32_OFF32,
   _XBS5_ILP32_OFFBIG, _XBS5_LP64_OFF32, and _XBS5_LPBIG_OFFBIG were
   used in previous versions of the Unix standard and are available
   only for compatibility.
*/


/* Environments with 32-bit wide pointers are optionally provided.
   Therefore following macros aren't defined:
   # undef _POSIX_V7_ILP32_OFF32
   # undef _POSIX_V7_ILP32_OFFBIG
   # undef _POSIX_V6_ILP32_OFF32
   # undef _POSIX_V6_ILP32_OFFBIG
   # undef _XBS5_ILP32_OFF32
   # undef _XBS5_ILP32_OFFBIG
   and users need to check at runtime.  */

/* We also have no use (for now) for an environment with bigger pointers
   and offsets.  */




/* By default we have 64-bit wide `long int', pointers and `off_t'.  */




 




























#line 209 "systems/redhat/usr/include/unistd.h" 2

/* Standard file descriptors.  */





/* All functions that are not declared anywhere else.  */

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/bits/types.h" 2
#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "systems/redhat/usr/include/bits/types.h" 2

/* Convenience types.  */
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;

/* Fixed-size types, underlying types depend on word size and compiler.  */
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;
 


/* quad_t is also 64 bits.  */

typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
 

 

  



  


/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- "natural" 16-bit type (always short)
	32		-- "natural" 32-bit type (always int)
	64		-- "natural" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */



















 







/* No need to mark the typedef with __extension__.   */

 

#line 1 "systems/redhat/usr/include/bits/typesizes.h" 1
/* bits/typesizes.h -- underlying types for *_t.  Generic version.
   Copyright (C) 2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */

































/* Number of descriptors that can fit in an `fd_set'.  */




#line 133 "systems/redhat/usr/include/bits/types.h" 2


typedef unsigned long int __dev_t;	/* Type of device numbers.  */
typedef unsigned int __uid_t;	/* Type of user identifications.  */
typedef unsigned int __gid_t;	/* Type of group identifications.  */
typedef unsigned long int __ino_t;	/* Type of file serial numbers.  */
typedef unsigned long int __ino64_t;	/* Type of file serial numbers (LFS).*/
typedef unsigned int __mode_t;	/* Type of file attribute bitmasks.  */
typedef unsigned long int __nlink_t;	/* Type of file link counts.  */
typedef long int __off_t;	/* Type of file sizes and offsets.  */
typedef long int __off64_t;	/* Type of file sizes and offsets (LFS).  */
typedef int __pid_t;	/* Type of process identifications.  */
typedef struct { int __val[2]; } __fsid_t;	/* Type of file system IDs.  */
typedef long int __clock_t;	/* Type of CPU usage counts.  */
typedef unsigned long int __rlim_t;	/* Type for resource measurement.  */
typedef unsigned long int __rlim64_t;	/* Type for resource measurement (LFS).  */
typedef unsigned int __id_t;		/* General type for IDs.  */
typedef long int __time_t;	/* Seconds since the Epoch.  */
typedef unsigned int __useconds_t; /* Count of microseconds.  */
typedef long int __suseconds_t; /* Signed count of microseconds.  */

typedef int __daddr_t;	/* The type of a disk address.  */
typedef long int __swblk_t;	/* Type of a swap block maybe?  */
typedef int __key_t;	/* Type of an IPC key.  */

/* Clock ID used in clock and timer functions.  */
typedef int __clockid_t;

/* Timer ID returned by `timer_create'.  */
typedef void * __timer_t;

/* Type to represent block size.  */
typedef long int __blksize_t;

/* Types from the Large File Support interface.  */

/* Type to count number of disk blocks.  */
typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;

/* Type to count file system blocks.  */
typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;

/* Type to count file system nodes.  */
typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;

typedef long int __ssize_t; /* Type of a byte count, or error.  */

/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */
typedef __off64_t __loff_t;	/* Type of file sizes and offsets (LFS).  */
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;

/* Duplicates info from stdint.h but this is used in unistd.h.  */
typedef long int __intptr_t;

/* Duplicate info from sys/socket.h.  */
typedef unsigned int __socklen_t;





#line 220 "systems/redhat/usr/include/unistd.h" 2


typedef __ssize_t ssize_t;




#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





typedef long unsigned int size_t;























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 229 "systems/redhat/usr/include/unistd.h" 2


/* The Single Unix specification says that some more types are
   available here.  */

typedef __gid_t gid_t;



typedef __uid_t uid_t;




typedef __off_t off_t;
 




typedef __off64_t off64_t;



typedef __useconds_t useconds_t;



typedef __pid_t pid_t;











typedef __socklen_t socklen_t;



/* Values for the second argument to access.
   These may be OR'd together.  */





/* Test for access to NAME using the real UID and real GID.  */
extern int access (const char *__name, int __type) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Test for access to NAME using the effective UID and GID
   (as normal file operations use).  */
extern int euidaccess (const char *__name, int __type)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* An alias for `euidaccess', used by some other systems.  */
extern int eaccess (const char *__name, int __type)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Test for access to FILE relative to the directory FD is open on.
   If AT_EACCESS is set in FLAG, then use effective IDs like `eaccess',
   otherwise use real IDs like `access'.  */
extern int faccessat (int __fd, const char *__file, int __type, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Values for the WHENCE argument to lseek.  */






/* Old BSD names for the same constants; just for compatibility.  */




/* Move FD's file position to OFFSET bytes from the
   beginning of the file (if WHENCE is SEEK_SET),
   the current position (if WHENCE is SEEK_CUR),
   or the end of the file (if WHENCE is SEEK_END).
   Return the new file position.  */

extern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__));
 

				 
				 
 



extern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)
     __attribute__ ((__nothrow__));

/* Close the file descriptor FD.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int close (int __fd);

/* Read NBYTES into BUF from FD.  Return the
   number read, -1 for errors or 0 for EOF.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;

/* Write N bytes of BUF to FD.  Return the number written, or -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t write (int __fd, const void *__buf, size_t __n) ;



/* Read NBYTES into BUF from FD at the given position OFFSET without
   changing the file pointer.  Return the number read, -1 for errors
   or 0 for EOF.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes,
		      __off_t __offset) ;

/* Write N bytes of BUF to FD at the given position OFFSET without
   changing the file pointer.  Return the number written, or -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pwrite (int __fd, const void *__buf, size_t __n,
		       __off_t __offset) ;
 

				   
			   

				    
			   
 




/* Read NBYTES into BUF from FD at the given position OFFSET without
   changing the file pointer.  Return the number read, -1 for errors
   or 0 for EOF.  */
extern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,
			__off64_t __offset) ;
/* Write N bytes of BUF to FD at the given position OFFSET without
   changing the file pointer.  Return the number written, or -1.  */
extern ssize_t pwrite64 (int __fd, const void *__buf, size_t __n,
			 __off64_t __offset) ;


/* Create a one-way communication channel (pipe).
   If successful, two file descriptors are stored in PIPEDES;
   bytes written on PIPEDES[1] can be read from PIPEDES[0].
   Returns 0 if successful, -1 if not.  */
extern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__)) ;


/* Same as pipe but apply flags passed in FLAGS to the new file
   descriptors.  */
extern int pipe2 (int __pipedes[2], int __flags) __attribute__ ((__nothrow__)) ;

/* Schedule an alarm.  In SECONDS seconds, the process will get a SIGALRM.
   If SECONDS is zero, any currently scheduled alarm will be cancelled.
   The function returns the number of seconds remaining until the last
   alarm scheduled would have signaled, or zero if there wasn't one.
   There is no return value to indicate an error, but you can set `errno'
   to 0 and check its value after calling `alarm', and this might tell you.
   The signal may come late due to processor scheduling.  */
extern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__));

/* Make the process sleep for SECONDS seconds, or until a signal arrives
   and is not ignored.  The function returns the number of seconds less
   than SECONDS which it actually slept (thus zero if it slept the full time).
   If a signal handler does a `longjmp' or modifies the handling of the
   SIGALRM signal while inside `sleep' call, the handling of the SIGALRM
   signal afterwards is undefined.  There is no return value to indicate
   error, but if `sleep' returns SECONDS, it probably didn't work.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern unsigned int sleep (unsigned int __seconds);


/* Set an alarm to go off (generating a SIGALRM signal) in VALUE
   microseconds.  If INTERVAL is nonzero, when the alarm goes off, the
   timer is reset to go off every INTERVAL microseconds thereafter.
   Returns the number of microseconds remaining before the alarm.  */
extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     __attribute__ ((__nothrow__));

/* Sleep USECONDS microseconds, or until a signal arrives that is not blocked
   or ignored.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int usleep (__useconds_t __useconds);

/* Suspend the process until a signal arrives.
   This always returns -1 and sets `errno' to EINTR.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int pause (void);


/* Change the owner and group of FILE.  */
extern int chown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Change the owner and group of the file that FD is open on.  */
extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__)) ;


/* Change owner and group of FILE, if it is a symbolic
   link the ownership of the symbolic link is changed.  */
extern int lchown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Change the owner and group of FILE relative to the directory FD is open
   on.  */
extern int fchownat (int __fd, const char *__file, __uid_t __owner,
		     __gid_t __group, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Change the process's working directory to PATH.  */
extern int chdir (const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Change the process's working directory to the one FD is open on.  */
extern int fchdir (int __fd) __attribute__ ((__nothrow__)) ;

/* Get the pathname of the current working directory,
   and put it in SIZE bytes of BUF.  Returns NULL if the
   directory couldn't be determined or SIZE was too small.
   If successful, returns BUF.  In GNU, if BUF is NULL,
   an array is allocated with `malloc'; the array is SIZE
   bytes long, unless SIZE == 0, in which case it is as
   big as necessary.  */
extern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__)) ;


/* Return a malloc'd string containing the current directory name.
   If the environment variable `PWD' is set, and its value is correct,
   that value is used.  */
extern char *get_current_dir_name (void) __attribute__ ((__nothrow__));


/* Put the absolute pathname of the current working directory in BUF.
   If successful, return BUF.  If not, put an error message in
   BUF and return NULL.  BUF should be at least PATH_MAX bytes long.  */
extern char *getwd (char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;

/* Duplicate FD, returning a new file descriptor on the same file.  */
extern int dup (int __fd) __attribute__ ((__nothrow__)) ;

/* Duplicate FD to FD2, closing FD2 and making it open on the same file.  */
extern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__));


/* Duplicate FD to FD2, closing FD2 and making it open on the same
   file while setting flags according to FLAGS.  */
extern int dup3 (int __fd, int __fd2, int __flags) __attribute__ ((__nothrow__));

/* NULL-terminated array of "NAME=VALUE" environment variables.  */
extern char **__environ;

extern char **environ;

/* Replace the current process, executing PATH with arguments ARGV and
   environment ENVP.  ARGV and ENVP are terminated by NULL pointers.  */
extern int execve (const char *__path, char *const __argv[],
		   char *const __envp[]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Execute the file FD refers to, overlaying the running program image.
   ARGV and ENVP are passed to the new program, as for `execve'.  */
extern int fexecve (int __fd, char *const __argv[], char *const __envp[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Execute PATH with arguments ARGV and environment from `environ'.  */
extern int execv (const char *__path, char *const __argv[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute PATH with all arguments after PATH until a NULL pointer,
   and the argument after that for environment.  */
extern int execle (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute PATH with all arguments after PATH until
   a NULL pointer and environment from `environ'.  */
extern int execl (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute FILE, searching in the `PATH' environment variable if it contains
   no slashes, with arguments ARGV and environment from `environ'.  */
extern int execvp (const char *__file, char *const __argv[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Execute FILE, searching in the `PATH' environment variable if
   it contains no slashes, with all arguments after FILE until a
   NULL pointer and environment from `environ'.  */
extern int execlp (const char *__file, const char *__arg, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Execute FILE, searching in the `PATH' environment variable if it contains
   no slashes, with arguments ARGV and environment from `environ'.  */
extern int execvpe (const char *__file, char *const __argv[],
		    char *const __envp[])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Add INC to priority of the current process.  */
extern int nice (int __inc) __attribute__ ((__nothrow__)) ;

/* Terminate program execution with the low-order 8 bits of STATUS.  */
extern void _exit (int __status) __attribute__ ((__noreturn__));


/* Get the `_PC_*' symbols for the NAME argument to `pathconf' and `fpathconf';
   the `_SC_*' symbols for the NAME argument to `sysconf';
   and the `_CS_*' symbols for the NAME argument to `confstr'.  */
#line 1 "systems/redhat/usr/include/bits/confname.h" 1
/* `sysconf', `pathconf', and `confstr' NAME values.  Generic version.
   Copyright (C) 1993,1995-1998,2000,2001,2003,2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Values for the NAME argument to `pathconf' and `fpathconf'.  */
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };

/* Values for the argument to `sysconf'.  */
enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,


    /* Values for the argument to `sysconf'
       corresponding to _POSIX2_* symbols.  */
    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,


    /* Values according to POSIX 1003.1c (POSIX threads).  */
    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,

    /* Leave room here, maybe we need a few more cache levels some day.  */

    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };

/* Values for the NAME argument to `confstr'.  */
enum
  {
    _CS_PATH,			/* The default search path.  */


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
#line 608 "systems/redhat/usr/include/unistd.h" 2

/* Get file-specific configuration information about PATH.  */
extern long int pathconf (const char *__path, int __name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Get file-specific configuration about descriptor FD.  */
extern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__));

/* Get the value of the system variable NAME.  */
extern long int sysconf (int __name) __attribute__ ((__nothrow__));


/* Get the value of the string-valued system variable NAME.  */
extern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__));

/* Get the process ID of the calling process.  */
extern __pid_t getpid (void) __attribute__ ((__nothrow__));

/* Get the process ID of the calling process's parent.  */
extern __pid_t getppid (void) __attribute__ ((__nothrow__));

/* Get the process group ID of the calling process.
   This function is different on old BSD. */

extern __pid_t getpgrp (void) __attribute__ ((__nothrow__));
 

 


/* Get the process group ID of process PID.  */
extern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__));

extern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__));

/* Set the process group ID of the process matching PID to PGID.
   If PID is zero, the current process's process group ID is set.
   If PGID is zero, the process ID of the process is used.  */
extern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__));


/* Both System V and BSD have `setpgrp' functions, but with different
   calling conventions.  The BSD function is the same as POSIX.1 `setpgid'
   (above).  The System V function takes no arguments and puts the calling
   process in its on group like `setpgid (0, 0)'.

   New programs should always use `setpgid' instead.

   The default in GNU is to provide the System V function.  The BSD
   function is available under -D_BSD_SOURCE.  */


/* Set the process group ID of the calling process to its own PID.
   This is exactly the same as `setpgid (0, 0)'.  */
extern int setpgrp (void) __attribute__ ((__nothrow__));

 


 



/* Create a new session with the calling process as its leader.
   The process group IDs of the session and the calling process
   are set to the process ID of the calling process, which is returned.  */
extern __pid_t setsid (void) __attribute__ ((__nothrow__));


/* Return the session ID of the given process.  */
extern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__));

/* Get the real user ID of the calling process.  */
extern __uid_t getuid (void) __attribute__ ((__nothrow__));

/* Get the effective user ID of the calling process.  */
extern __uid_t geteuid (void) __attribute__ ((__nothrow__));

/* Get the real group ID of the calling process.  */
extern __gid_t getgid (void) __attribute__ ((__nothrow__));

/* Get the effective group ID of the calling process.  */
extern __gid_t getegid (void) __attribute__ ((__nothrow__));

/* If SIZE is zero, return the number of supplementary groups
   the calling process is in.  Otherwise, fill in the group IDs
   of its supplementary groups in LIST and return the number written.  */
extern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__)) ;


/* Return nonzero iff the calling process is in group GID.  */
extern int group_member (__gid_t __gid) __attribute__ ((__nothrow__));

/* Set the user ID of the calling process to UID.
   If the calling process is the super-user, set the real
   and effective user IDs, and the saved set-user-ID to UID;
   if not, the effective user ID is set to UID.  */
extern int setuid (__uid_t __uid) __attribute__ ((__nothrow__));


/* Set the real user ID of the calling process to RUID,
   and the effective user ID of the calling process to EUID.  */
extern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__));


/* Set the effective user ID of the calling process to UID.  */
extern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__));

/* Set the group ID of the calling process to GID.
   If the calling process is the super-user, set the real
   and effective group IDs, and the saved set-group-ID to GID;
   if not, the effective group ID is set to GID.  */
extern int setgid (__gid_t __gid) __attribute__ ((__nothrow__));


/* Set the real group ID of the calling process to RGID,
   and the effective group ID of the calling process to EGID.  */
extern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__));


/* Set the effective group ID of the calling process to GID.  */
extern int setegid (__gid_t __gid) __attribute__ ((__nothrow__));


/* Fetch the real user ID, effective user ID, and saved-set user ID,
   of the calling process.  */
extern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)
     __attribute__ ((__nothrow__));

/* Fetch the real group ID, effective group ID, and saved-set group ID,
   of the calling process.  */
extern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)
     __attribute__ ((__nothrow__));

/* Set the real user ID, effective user ID, and saved-set user ID,
   of the calling process to RUID, EUID, and SUID, respectively.  */
extern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)
     __attribute__ ((__nothrow__));

/* Set the real group ID, effective group ID, and saved-set group ID,
   of the calling process to RGID, EGID, and SGID, respectively.  */
extern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)
     __attribute__ ((__nothrow__));

/* Clone the calling process, creating an exact copy.
   Return -1 for errors, 0 to the new process,
   and the process ID of the new process to the old process.  */
extern __pid_t fork (void) __attribute__ ((__nothrow__));


/* Clone the calling process, but without copying the whole address space.
   The calling process is suspended until the new process exits or is
   replaced by a call to `execve'.  Return -1 for errors, 0 to the new process,
   and the process ID of the new process to the old process.  */
extern __pid_t vfork (void) __attribute__ ((__nothrow__));

/* Return the pathname of the terminal FD is open on, or NULL on errors.
   The returned storage is good only until the next call to this function.  */
extern char *ttyname (int __fd) __attribute__ ((__nothrow__));

/* Store at most BUFLEN characters of the pathname of the terminal FD is
   open on in BUF.  Return 0 on success, otherwise an error number.  */
extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Return 1 if FD is a valid descriptor associated
   with a terminal, zero if not.  */
extern int isatty (int __fd) __attribute__ ((__nothrow__));


/* Return the index into the active-logins file (utmp) for
   the controlling terminal.  */
extern int ttyslot (void) __attribute__ ((__nothrow__));

/* Make a link to FROM named TO.  */
extern int link (const char *__from, const char *__to)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;


/* Like link but relative paths in TO and FROM are interpreted relative
   to FROMFD and TOFD respectively.  */
extern int linkat (int __fromfd, const char *__from, int __tofd,
		   const char *__to, int __flags)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4))) ;


/* Make a symbolic link to FROM named TO.  */
extern int symlink (const char *__from, const char *__to)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;

/* Read the contents of the symbolic link PATH into no more than
   LEN bytes of BUF.  The contents are not null-terminated.
   Returns the number of characters read, or -1 for errors.  */
extern ssize_t readlink (const char *__restrict __path,
			 char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;


/* Like symlink but a relative path in TO is interpreted relative to TOFD.  */
extern int symlinkat (const char *__from, int __tofd,
		      const char *__to) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

/* Like readlink but a relative PATH is interpreted relative to FD.  */
extern ssize_t readlinkat (int __fd, const char *__restrict __path,
			   char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3))) ;

/* Remove the link NAME.  */
extern int unlink (const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Remove the link NAME relative to FD.  */
extern int unlinkat (int __fd, const char *__name, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Remove the directory PATH.  */
extern int rmdir (const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Return the foreground process group ID of FD.  */
extern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__));

/* Set the foreground process group ID of FD set PGRP_ID.  */
extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__));


/* Return the login name of the user.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern char *getlogin (void);

/* Return at most NAME_LEN characters of the login name of the user in NAME.
   If it cannot be determined or some other error occurred, return the error
   code.  Otherwise return 0.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));


/* Set the login name returned by `getlogin'.  */
extern int setlogin (const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Get definitions and prototypes for functions to process the
   arguments in ARGV (ARGC of them, minus the program name) for
   options given in OPTS.  */

#line 1 "systems/redhat/usr/include/getopt.h" 1
/* Declarations for getopt.
   Copyright (C) 1989-1994,1996-1999,2001,2003,2004,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */





/* If __GNU_LIBRARY__ is not already defined, either we are being used
   standalone, or this is the first header included in the source file.
   If we are being used with glibc, we need to include <features.h>, but
   that does not exist if we are standalone.  So: if __GNU_LIBRARY__ is
   not defined, include <ctype.h>, which will pull in <features.h> for us
   if it's from glibc.  (Why ctype.h?  It's guaranteed to exist and it
   doesn't flood the namespace with stuff the way some other headers do.)  */









 





/* For communication from `getopt' to the caller.
   When `getopt' finds an option that takes an argument,
   the argument value is returned here.
   Also, when `ordering' is RETURN_IN_ORDER,
   each non-option ARGV-element is returned here.  */

extern char *optarg;

/* Index in ARGV of the next element to be scanned.
   This is used for communication to and from the caller
   and for communication between successive calls to `getopt'.

   On entry to `getopt', zero means this is the first call; initialize.

   When `getopt' returns -1, this is the index of the first of the
   non-option elements that the caller should itself scan.

   Otherwise, `optind' communicates from one call to the next
   how much of ARGV has been scanned so far.  */

extern int optind;

/* Callers store zero here to inhibit the error message `getopt' prints
   for unrecognized options.  */

extern int opterr;

/* Set to an option character which was unrecognized.  */

extern int optopt;

























  
  

  
  
  








/* Get definitions and prototypes for functions to process the
   arguments in ARGV (ARGC of them, minus the program name) for
   options given in OPTS.

   Return the option character from OPTS just read.  Return -1 when
   there are no more options.  For unrecognized options, or options
   missing arguments, `optopt' is set to the option letter, and '?' is
   returned.

   The OPTS string is a list of characters which are recognized option
   letters, optionally followed by colons, specifying that that letter
   takes an argument, to be placed in `optarg'.

   If a letter in OPTS is followed by two colons, its argument is
   optional.  This behavior is specific to the GNU `getopt'.

   The argument `--' causes premature termination of argument
   scanning, explicitly telling `getopt' that there are no more
   options.

   If OPTS begins with `--', then non-option arguments are treated as
   arguments to the option '\0'.  This behavior is specific to the GNU
   `getopt'.  */


/* Many other libraries have conflicting prototypes for getopt, with
   differences in the consts, in stdlib.h.  To avoid compilation
   errors, only prototype getopt for the GNU C library.  */
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
       __attribute__ ((__nothrow__));






  
				      
			     
 
			   



 



			
		        
       

			     
		             
       





/* Make sure we later can get all the definitions and declarations.  */



#line 892 "systems/redhat/usr/include/unistd.h" 2


/* Put the name of the current host in no more than LEN bytes of NAME.
   The result is null-terminated if LEN is large enough for the full
   name and the terminator.  */
extern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set the name of the current host to NAME, which is LEN bytes long.
   This call is restricted to the super-user.  */
extern int sethostname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

/* Set the current machine's Internet number to ID.
   This call is restricted to the super-user.  */
extern int sethostid (long int __id) __attribute__ ((__nothrow__)) ;


/* Get and set the NIS (aka YP) domain name, if any.
   Called just like `gethostname' and `sethostname'.
   The NIS domain name is usually the empty string when not using NIS.  */
extern int getdomainname (char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
extern int setdomainname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Revoke access permissions to all processes currently communicating
   with the control terminal, and then send a SIGHUP signal to the process
   group of the control terminal.  */
extern int vhangup (void) __attribute__ ((__nothrow__));

/* Revoke the access of all descriptors currently open on FILE.  */
extern int revoke (const char *__file) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Enable statistical profiling, writing samples of the PC into at most
   SIZE bytes of SAMPLE_BUFFER; every processor clock tick while profiling
   is enabled, the system examines the user PC and increments
   SAMPLE_BUFFER[((PC - OFFSET) / 2) * SCALE / 65536].  If SCALE is zero,
   disable profiling.  Returns zero on success, -1 on error.  */
extern int profil (unsigned short int *__sample_buffer, size_t __size,
		   size_t __offset, unsigned int __scale)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Turn accounting on if NAME is an existing file.  The system will then write
   a record for each process as it terminates, to this file.  If NAME is NULL,
   turn accounting off.  This call is restricted to the super-user.  */
extern int acct (const char *__name) __attribute__ ((__nothrow__));


/* Successive calls return the shells listed in `/etc/shells'.  */
extern char *getusershell (void) __attribute__ ((__nothrow__));
extern void endusershell (void) __attribute__ ((__nothrow__)); /* Discard cached info.  */
extern void setusershell (void) __attribute__ ((__nothrow__)); /* Rewind and re-read the file.  */


/* Put the program in the background, and dissociate from the controlling
   terminal.  If NOCHDIR is zero, do `chdir ("/")'.  If NOCLOSE is zero,
   redirects stdin, stdout, and stderr to /dev/null.  */
extern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__)) ;


/* Make PATH be the root directory (the starting point for absolute paths).
   This call is restricted to the super-user.  */
extern int chroot (const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

/* Prompt with PROMPT and read a string from the terminal without echoing.
   Uses /dev/tty if possible; otherwise stderr and stdin.  */
extern char *getpass (const char *__prompt) __attribute__ ((__nonnull__ (1)));


/* Make all changes done to FD actually appear on disk.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int fsync (int __fd);


/* Return identifier for the current host.  */
extern long int gethostid (void);

/* Make all changes done to all files actually appear on disk.  */
extern void sync (void) __attribute__ ((__nothrow__));



/* Return the number of bytes in a page.  This is the system's page size,
   which is not necessarily the same as the hardware page size.  */
extern int getpagesize (void)  __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* Return the maximum number of file descriptors
   the current process could possibly have.  */
extern int getdtablesize (void) __attribute__ ((__nothrow__));



/* Truncate FILE to LENGTH bytes.  */

extern int truncate (const char *__file, __off_t __length)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
 

			   
			   
 



extern int truncate64 (const char *__file, __off64_t __length)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

/* Truncate the file FD is open on to LENGTH bytes.  */

extern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__)) ;
 

			   
 



extern int ftruncate64 (int __fd, __off64_t __length) __attribute__ ((__nothrow__)) ;



/* Set the end of accessible data space (aka "the break") to ADDR.
   Returns zero on success and -1 for errors (with errno set).  */
extern int brk (void *__addr) __attribute__ ((__nothrow__)) ;

/* Increase or decrease the end of accessible data space by DELTA bytes.
   If successful, returns the address the previous end of data space
   (i.e. the beginning of the new space, if DELTA > 0);
   returns (void *) -1 for errors (with errno set).  */
extern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__));


/* Invoke `system call' number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall' sets `errno' for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe', `fork', and `getppid' typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */
extern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__));



/* NOTE: These declarations also appear in <fcntl.h>; be sure to keep both
   files consistent.  Some systems have them there and some here, and some
   software depends on the macros being defined without including both.  */

/* `lockf' is a simpler interface to the locking facilities of `fcntl'.
   LEN is always relative to the current file position.
   The CMD argument is one of the following.

   This function is a cancellation point and therefore not marked with
   __THROW.  */







extern int lockf (int __fd, int __cmd, __off_t __len) ;
 

		       
 



extern int lockf64 (int __fd, int __cmd, __off64_t __len) ;



/* Evaluate EXPRESSION, and repeat as long as it returns -1 with `errno'
   set to EINTR.  */









/* Synchronize at least the data part of a file with the underlying
   media.  */
extern int fdatasync (int __fildes);

/* XPG4.2 specifies that prototypes for the encryption functions must
   be defined here.  */

/* Encrypt at most 8 characters from KEY using salt to perturb DES.  */
extern char *crypt (const char *__key, const char *__salt)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Encrypt data in BLOCK in place if EDFLAG is zero; otherwise decrypt
   block in place.  */
extern void encrypt (char *__block, int __edflag) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Swab pairs bytes in the first N bytes of the area pointed to by
   FROM and copy the result to TO.  The value of TO must not be in the
   range [FROM - N + 1, FROM - 1].  If N is odd the first byte in FROM
   is without partner.  */
extern void swab (const void *__restrict __from, void *__restrict __to,
		  ssize_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* The Single Unix specification demands this prototype to be here.
   It is also found in <stdio.h>.  */

/* Return the name of the controlling terminal.  */
extern char *ctermid (char *__s) __attribute__ ((__nothrow__));

/* Define some macros helping to catch buffer overflows.  */






#line 295 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/platform.h" 2


/* Useful for defeating gcc's alignment of "char message[]"-like data */

    /* on s390[x], non-word-aligned data accesses require larger code */



 




/*
 * For 0.9.29 and svn, __ARCH_USE_MMU__ indicates no-mmu reliably.
 * For earlier versions there is no reliable way to check if we are building
 * for a mmu-less system.
 */
#if definedEx(CONFIG_NOMMU)



#endif
#if !definedEx(CONFIG_NOMMU)



#endif

























/* ---- Who misses what? ------------------------------------ */

/* Assume all these functions and header files exist by default.
 * Platforms where it is not true will #undef them below.
 */



















































/* These BSD-derived OSes share many similarities */


















































/*
 * Now, define prototypes for all the functions defined in platform.c
 * These must come after all the HAVE_* macros are defined (or not)
 */










































#line 15 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2

#line 1 "systems/redhat/usr/include/ctype.h" 1
/* Copyright (C) 1991,92,93,95,96,97,98,99,2001,2002,2004,2007,2008,2009
   	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard 7.4: Character handling	<ctype.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/ctype.h" 2
#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 30 "systems/redhat/usr/include/ctype.h" 2




/* These are all the characteristics of characters.
   If there get to be more than 16 distinct characteristics,
   many things must be changed that use `unsigned short int's.

   The characteristics are stored always in network byte order (big
   endian).  We define the bit value interpretations here dependent on the
   machine's byte order.  */

#line 1 "systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 43 "systems/redhat/usr/include/ctype.h" 2


 

enum
{
  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),	/* UPPERCASE.  */
  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),	/* lowercase.  */
  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),	/* Alphabetic.  */
  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),	/* Numeric.  */
  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),	/* Hexadecimal numeric.  */
  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),	/* Whitespace.  */
  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),	/* Printing.  */
  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),	/* Graphical.  */
  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),	/* Blank (usually SPC and TAB).  */
  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),	/* Control character.  */
  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),	/* Punctuation.  */
  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))	/* Alphanumeric.  */
};

/* These are defined in ctype-info.c.
   The declarations here must match those in localeinfo.h.

   In the thread-specific locale model (see `uselocale' in <locale.h>)
   we cannot use global variables for these as was done in the past.
   Instead, the following accessor functions return the address of
   each variable, which is local to the current thread if multithreaded.

   These point into arrays of 384, so they can be indexed by any `unsigned
   char' value [0,255]; by EOF (-1); or by any `signed char' value
   [-128,-1).  ISO C requires that the ctype functions work for `unsigned
   char' values and for EOF; we also support negative `signed char' values
   for broken old programs.  The case conversion arrays are of `int's
   rather than `unsigned char's because tolower (EOF) must be EOF, which
   doesn't fit into an `unsigned char'.  But today more important is that
   the arrays are also used for multi-byte character sets.  */
extern const unsigned short int **__ctype_b_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((const));
extern const __int32_t **__ctype_tolower_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((const));
extern const __int32_t **__ctype_toupper_loc (void)
     __attribute__ ((__nothrow__)) __attribute__ ((const));











/* The following names are all functions:
     int isCHARACTERISTIC(int c);
   which return nonzero iff C has CHARACTERISTIC.
   For the meaning of the characteristic names, see the `enum' above.  */
extern int isalnum (int) __attribute__ ((__nothrow__));
extern int isalpha (int) __attribute__ ((__nothrow__));
extern int iscntrl (int) __attribute__ ((__nothrow__));
extern int isdigit (int) __attribute__ ((__nothrow__));
extern int islower (int) __attribute__ ((__nothrow__));
extern int isgraph (int) __attribute__ ((__nothrow__));
extern int isprint (int) __attribute__ ((__nothrow__));
extern int ispunct (int) __attribute__ ((__nothrow__));
extern int isspace (int) __attribute__ ((__nothrow__));
extern int isupper (int) __attribute__ ((__nothrow__));
extern int isxdigit (int) __attribute__ ((__nothrow__));


/* Return the lowercase version of C.  */
extern int tolower (int __c) __attribute__ ((__nothrow__));

/* Return the uppercase version of C.  */
extern int toupper (int __c) __attribute__ ((__nothrow__));




/* ISO C99 introduced one new function.  */



extern int isblank (int) __attribute__ ((__nothrow__));




/* Test C for a set of character classes according to MASK.  */
extern int isctype (int __c, int __mask) __attribute__ ((__nothrow__));


/* Return nonzero iff C is in the ASCII set
   (i.e., is no more than 7 bits wide).  */
extern int isascii (int __c) __attribute__ ((__nothrow__));

/* Return the part of C that is in the ASCII set
   (i.e., the low-order 7 bits of C).  */
extern int toascii (int __c) __attribute__ ((__nothrow__));

/* These are the same as `toupper' and `tolower' except that they do not
   check the argument for being in the range of a `char'.  */
extern int _toupper (int) __attribute__ ((__nothrow__));
extern int _tolower (int) __attribute__ ((__nothrow__));

/* This code is needed for the optimized mapping functions.  */





































  





  















/* The concept of one static locale per category is not very well
   thought out.  Many applications will need to process its data using
   information from several different locales.  Another application is
   the implementation of the internationalization handling in the
   upcoming ISO C++ standard library.  To support this another set of
   the functions using locale data exist which have an additional
   argument.

   Attention: all these functions are *not* standardized in any form.
   This is a proof-of-concept implementation.  */

/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  */
#line 1 "systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  The file and
   this data structure is not standardized.  Don't rely on it.  It can
   go away without warning.  */
typedef struct __locale_struct
{
  /* Note: LC_ALL is not a valid index into this array.  */
  struct __locale_data *__locales[13]; /* 13 = __LC_LAST. */

  /* To increase the speed of this solution we add some special members.  */
  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;

  /* Note: LC_ALL is not a valid index into this array.  */
  const char *__names[13];
} *__locale_t;

/* POSIX 2008 makes locale_t official.  */
typedef __locale_t locale_t;


#line 235 "systems/redhat/usr/include/ctype.h" 2

/* These definitions are similar to the ones above but all functions
   take as an argument a handle for the locale which shall be used.  */






/* The following names are all functions:
     int isCHARACTERISTIC(int c, locale_t *locale);
   which return nonzero iff C has CHARACTERISTIC.
   For the meaning of the characteristic names, see the `enum' above.  */
extern int isalnum_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isalpha_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int iscntrl_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isdigit_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int islower_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isgraph_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isprint_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int ispunct_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isspace_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isupper_l (int, __locale_t) __attribute__ ((__nothrow__));
extern int isxdigit_l (int, __locale_t) __attribute__ ((__nothrow__));

extern int isblank_l (int, __locale_t) __attribute__ ((__nothrow__));


/* Return the lowercase version of C in locale L.  */
extern int __tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));
extern int tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));

/* Return the uppercase version of C.  */
extern int __toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));
extern int toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));



















































#line 17 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/dirent.h" 1
/* Copyright (C) 1991-2000,2003-2005,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 5.1.2 Directory Operations	<dirent.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/dirent.h" 2



#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 32 "systems/redhat/usr/include/dirent.h" 2




typedef __ino_t ino_t;
 




typedef __ino64_t ino64_t;



/* This file defines `struct dirent'.

   It defines the macro `_DIRENT_HAVE_D_NAMLEN' iff there is a `d_namlen'
   member that gives the length of `d_name'.

   It defines the macro `_DIRENT_HAVE_D_RECLEN' iff there is a `d_reclen'
   member that gives the size of the entire directory entry.

   It defines the macro `_DIRENT_HAVE_D_OFF' iff there is a `d_off'
   member that gives the file offset of the next directory entry.

   It defines the macro `_DIRENT_HAVE_D_TYPE' iff there is a `d_type'
   member that gives the type of the file.
 */

#line 1 "systems/redhat/usr/include/bits/dirent.h" 1
/* Copyright (C) 1996, 1997 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




struct dirent
  {

    __ino_t d_ino;
    __off_t d_off;
     
    

    unsigned short int d_reclen;
    unsigned char d_type;
    char d_name[256];		/* We must not include limits.h! */
  };


struct dirent64
  {
    __ino64_t d_ino;
    __off64_t d_off;
    unsigned short int d_reclen;
    unsigned char d_type;
    char d_name[256];		/* We must not include limits.h! */
  };







#line 64 "systems/redhat/usr/include/dirent.h" 2




/* These macros extract size information from a `struct dirent *'.
   They may evaluate their argument multiple times, so it must not
   have side effects.  Each of these may involve a relatively costly
   call to `strlen' on some systems, so these values should be cached.

   _D_EXACT_NAMLEN (DP)	returns the length of DP->d_name, not including
   its terminating null character.

   _D_ALLOC_NAMLEN (DP)	returns a size at least (_D_EXACT_NAMLEN (DP) + 1);
   that is, the allocation size needed to hold the DP->d_name string.
   Use this macro when you don't need the exact length, just an upper bound.
   This macro is less likely to require calling `strlen' than _D_EXACT_NAMLEN.
   */




 


 




/* File types for `d_type'.  */
enum
  {
    DT_UNKNOWN = 0,

    DT_FIFO = 1,

    DT_CHR = 2,

    DT_DIR = 4,

    DT_BLK = 6,

    DT_REG = 8,

    DT_LNK = 10,

    DT_SOCK = 12,

    DT_WHT = 14

  };

/* Convert between stat structure types and directory types.  */



/* This is the data type of directory stream objects.
   The actual structure is opaque to users.  */
typedef struct __dirstream DIR;

/* Open a directory stream on NAME.
   Return a DIR stream on the directory, or NULL if it could not be opened.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern DIR *opendir (const char *__name) __attribute__ ((__nonnull__ (1)));


/* Same as opendir, but open the stream on the file descriptor FD.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern DIR *fdopendir (int __fd);

/* Close the directory stream DIRP.
   Return 0 if successful, -1 if not.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int closedir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));

/* Read a directory entry from DIRP.  Return a pointer to a `struct
   dirent' describing the entry, or NULL for EOF or error.  The
   storage returned may be overwritten by a later readdir call on the
   same DIR stream.

   If the Large File Support API is selected we have to use the
   appropriate interface.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern struct dirent *readdir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));
 

     
 



extern struct dirent64 *readdir64 (DIR *__dirp) __attribute__ ((__nonnull__ (1)));


/* Reentrant version of `readdir'.  Return in RESULT a pointer to the
   next entry.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int readdir_r (DIR *__restrict __dirp,
		      struct dirent *__restrict __entry,
		      struct dirent **__restrict __result)
     __attribute__ ((__nonnull__ (1, 2, 3)));
 

		       
			
			
		       
 



extern int readdir64_r (DIR *__restrict __dirp,
			struct dirent64 *__restrict __entry,
			struct dirent64 **__restrict __result)
     __attribute__ ((__nonnull__ (1, 2, 3)));


/* Rewind DIRP to the beginning of the directory.  */
extern void rewinddir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 214 "systems/redhat/usr/include/dirent.h" 2

/* Seek to position POS on DIRP.  */
extern void seekdir (DIR *__dirp, long int __pos) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return the current position of DIRP.  */
extern long int telldir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Return the file descriptor used by DIRP.  */
extern int dirfd (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






/* Get the definitions of the POSIX.1 limits.  */
#line 1 "systems/redhat/usr/include/bits/posix1_lim.h" 1
/* Copyright (C) 1991-1993,96,98,2000-2003,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.9.2 Minimum Values	Added to <limits.h>
 *
 *	Never include this file directly; use <limits.h> instead.
 */



















 

































 




 















































































#line 235 "systems/redhat/usr/include/dirent.h" 2

/* `MAXNAMLEN' is the BSD name for what POSIX calls `NAME_MAX'.  */


 




#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 247 "systems/redhat/usr/include/dirent.h" 2

/* Scan the directory DIR, calling SELECTOR on each directory entry.
   Entries for which SELECT returns nonzero are individually malloc'd,
   sorted using qsort with CMP, and collected in a malloc'd array in
   *NAMELIST.  Returns the number of entries selected, or -1 on error.  */

extern int scandir (const char *__restrict __dir,
		    struct dirent ***__restrict __namelist,
		    int (*__selector) (const struct dirent *),
		    int (*__cmp) (const struct dirent **,
				  const struct dirent **))
     __attribute__ ((__nonnull__ (1, 2)));
 

		       
			
			
			
				      
		       
 



/* This function is like `scandir' but it uses the 64bit dirent structure.
   Please note that the CMP function must now work with struct dirent64 **.  */
extern int scandir64 (const char *__restrict __dir,
		      struct dirent64 ***__restrict __namelist,
		      int (*__selector) (const struct dirent64 *),
		      int (*__cmp) (const struct dirent64 **,
				    const struct dirent64 **))
     __attribute__ ((__nonnull__ (1, 2)));

/* Function to compare two `struct dirent's alphabetically.  */

extern int alphasort (const struct dirent **__e1,
		      const struct dirent **__e2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
 

			   
			    
			   
 



extern int alphasort64 (const struct dirent64 **__e1,
			const struct dirent64 **__e2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



/* Read directory entries from FD into BUF, reading at most NBYTES.
   Reading starts at offset *BASEP, and *BASEP is updated with the new
   position after reading.  Returns the number of bytes read; zero when at
   end of directory; or -1 for errors.  */

extern __ssize_t getdirentries (int __fd, char *__restrict __buf,
				size_t __nbytes,
				__off_t *__restrict __basep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));
 

				 
				  
				  
				 
 



extern __ssize_t getdirentries64 (int __fd, char *__restrict __buf,
				  size_t __nbytes,
				  __off64_t *__restrict __basep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));



/* Function to compare two `struct dirent's by name & version.  */

extern int versionsort (const struct dirent **__e1,
			const struct dirent **__e2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
 

			   
			    
			   
     
 



extern int versionsort64 (const struct dirent64 **__e1,
			  const struct dirent64 **__e2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





#line 18 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/errno.h" 1
/* Copyright (C) 1991,92,93,94,95,96,97,2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.5 Errors	<errno.h>
 */


/* The includer defined __need_Emath if he wants only the definitions
   of EDOM and ERANGE, and not everything else.  */


#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 31 "systems/redhat/usr/include/errno.h" 2



/* Get the error number constants from the system-specific file.
   This file will test __need_Emath and _ERRNO_H.  */
#line 1 "systems/redhat/usr/include/bits/errno.h" 1
/* Error constants.  Linux specific version.
   Copyright (C) 1996-1999, 2005, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */





#line 1 "systems/redhat/usr/include/linux/errno.h" 1



#line 1 "systems/redhat/usr/include/asm/errno.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/errno.h" 1



#line 1 "systems/redhat/usr/include/asm-generic/errno-base.h" 1







































#line 6 "systems/redhat/usr/include/asm-generic/errno.h" 2




































































































/* for robust mutexes */






#line 3 "systems/redhat/usr/include/asm/errno.h" 2
#line 6 "systems/redhat/usr/include/linux/errno.h" 2



#line 27 "systems/redhat/usr/include/bits/errno.h" 2

/* Linux has no ENOTSUP error code.  */


/* Older Linux versions also had no ECANCELED error code.  */



/* Support for error codes to support robust mutexes was added later, too.  */








/* Function to get address of global `errno' variable.  */
extern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* When using threads, errno is a per-thread value.  */












#line 38 "systems/redhat/usr/include/errno.h" 2



/* Declare the `errno' variable, unless it's defined as a macro by
   bits/errno.h.  This is the case in GNU, where it is a per-thread
   variable.  This redeclaration using the macro still works, but it
   will be a function declaration without a prototype and may trigger
   a -Wstrict-prototypes warning.  */




/* The full and simple forms of the name with which the program was
   invoked.  These variables are set up automatically at startup based on
   the value of ARGV[0] (this works only if you use GNU ld).  */
extern char *program_invocation_name, *program_invocation_short_name;





/* The Hurd <bits/errno.h> defines `error_t' as an enumerated type so
   that printing `error_t' values in the debugger shows the names.  We
   might need this definition sometimes even if this file was included
   before.  */


typedef int error_t;




#line 19 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/fcntl.h" 1
/* Copyright (C) 1991,1992,1994-2001,2003,2004,2005,2006,2007,2009,2010
	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 6.5 File Control Operations	<fcntl.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/fcntl.h" 2

/* This must be early so <bits/fcntl.h> can define types winningly.  */


/* Get the definitions of O_*, F_*, FD_*: all the
   numbers and flag bits for `open', `fcntl', et al.  */
#line 1 "systems/redhat/usr/include/bits/fcntl.h" 1
/* O_*, F_*, FD_* bit values for Linux/x86-64.
   Copyright (C) 2001,2002,2004,2006,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/sys/types.h" 2



#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 32 "systems/redhat/usr/include/sys/types.h" 2



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;



typedef __loff_t loff_t;




 








typedef __dev_t dev_t;







typedef __mode_t mode_t;



typedef __nlink_t nlink_t;









 












typedef __id_t id_t;








typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;




typedef __key_t key_t;








#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */





























#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 58 "systems/redhat/usr/include/time.h" 2


/* Returned by `clock'.  */
typedef __clock_t clock_t;










#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 74 "systems/redhat/usr/include/time.h" 2


/* Returned by `time'.  */
typedef __time_t time_t;










#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 91 "systems/redhat/usr/include/time.h" 2

/* Clock ID used in clock and timer functions.  */
typedef __clockid_t clockid_t;







#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 103 "systems/redhat/usr/include/time.h" 2

/* Timer ID returned by `timer_create'.  */
typedef __timer_t timer_t;













  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 135 "systems/redhat/usr/include/sys/types.h" 2







typedef __suseconds_t suseconds_t;




#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 149 "systems/redhat/usr/include/sys/types.h" 2


/* Old compatibility names for C types.  */
typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;

/* These size-specific names are used by some of the inet code.  */










 








 



 /* For GCC 2.7 and later, we can use specific type-size attributes.  */












typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));


/* Some code from BIND tests this macro to see if the types above are
   defined.  */





/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */
#line 1 "systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 219 "systems/redhat/usr/include/sys/types.h" 2

/* It also defines `fd_set' and the FD_* macros for `select'.  */
#line 1 "systems/redhat/usr/include/sys/select.h" 1
/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2003, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 27 "systems/redhat/usr/include/sys/select.h" 2

/* Get definition of needed basic types.  */
#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 30 "systems/redhat/usr/include/sys/select.h" 2

/* Get __FD_* definitions.  */
#line 1 "systems/redhat/usr/include/bits/select.h" 1
/* Copyright (C) 1997,1998,1999,2001,2008,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "systems/redhat/usr/include/bits/select.h" 2





 












 














#line 33 "systems/redhat/usr/include/sys/select.h" 2

/* Get __sigset_t.  */
#line 1 "systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




typedef int __sig_atomic_t;

/* A `sigset_t' has a bit for each signal.  */


typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 36 "systems/redhat/usr/include/sys/select.h" 2



typedef __sigset_t sigset_t;

/* Get definition of timer specification structures.  */


#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */


















































































#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 118 "systems/redhat/usr/include/time.h" 2

/* POSIX.1b structure for a time value.  This is like a `struct timeval' but
   has nanoseconds instead of microseconds.  */
struct timespec
  {
    __time_t tv_sec;		/* Seconds.  */
    long int tv_nsec;		/* Nanoseconds.  */
  };










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 46 "systems/redhat/usr/include/sys/select.h" 2

#line 1 "systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */













































#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 73 "systems/redhat/usr/include/bits/time.h" 2

/* A time value that is accurate to the nearest
   microsecond but also has a range of years.  */
struct timeval
  {
    __time_t tv_sec;		/* Seconds.  */
    __suseconds_t tv_usec;	/* Microseconds.  */
  };


#line 48 "systems/redhat/usr/include/sys/select.h" 2





/* The fd_set member is required to be an array of longs.  */
typedef long int __fd_mask;

/* Some versions of <linux/posix_types.h> define these macros.  */



/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */




/* fd_set for select and pselect.  */
typedef struct
  {
    /* XPG4.2 requires this member name.  Otherwise avoid the name
       from the global namespace.  */

    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];

     


  } fd_set;

/* Maximum number of file descriptors in `fd_set'.  */



/* Sometimes the fd_set member is assumed to have this type.  */
typedef __fd_mask fd_mask;

/* Number of bits per word of `fd_set' (some code assumes this is 32).  */


/* Access macros for `fd_set'.  */








/* Check the first NFDS descriptors each in READFDS (if not NULL) for read
   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS
   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out
   after waiting the interval specified therein.  Returns the number of ready
   descriptors, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int select (int __nfds, fd_set *__restrict __readfds,
		   fd_set *__restrict __writefds,
		   fd_set *__restrict __exceptfds,
		   struct timeval *__restrict __timeout);


/* Same as above only that the TIMEOUT value is given with higher
   resolution and a sigmask which is been set temporarily.  This version
   should be used.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int pselect (int __nfds, fd_set *__restrict __readfds,
		    fd_set *__restrict __writefds,
		    fd_set *__restrict __exceptfds,
		    const struct timespec *__restrict __timeout,
		    const __sigset_t *__restrict __sigmask);




#line 222 "systems/redhat/usr/include/sys/types.h" 2

/* BSD defines these symbols, so we follow.  */
#line 1 "systems/redhat/usr/include/sys/sysmacros.h" 1
/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996, 1997, 1999, 2003, 2004, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "systems/redhat/usr/include/sys/sysmacros.h" 2

/* If the compiler does not know long long it is out of luck.  We are
   not going to hack weird hacks to support the dev_t representation
   they need.  */

__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
					       unsigned int __minor)
     __attribute__ ((__nothrow__));





  





  





  
	  
	  


/* Access the functions with their traditional names.  */





#line 225 "systems/redhat/usr/include/sys/types.h" 2


typedef __blksize_t blksize_t;


/* Types from the Large File Support interface.  */


typedef __blkcnt_t blkcnt_t;	 /* Type to count number of disk blocks.  */



typedef __fsblkcnt_t fsblkcnt_t; /* Type to count file system blocks.  */



typedef __fsfilcnt_t fsfilcnt_t; /* Type to count file system inodes.  */


 













typedef __blkcnt64_t blkcnt64_t;     /* Type to count number of disk blocks. */
typedef __fsblkcnt64_t fsblkcnt64_t; /* Type to count file system blocks.  */
typedef __fsfilcnt64_t fsfilcnt64_t; /* Type to count file system inodes.  */

/* Now add the thread types.  */

#line 1 "systems/redhat/usr/include/bits/pthreadtypes.h" 1
/* Copyright (C) 2002,2003,2004,2005,2006,2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@redhat.com>, 2002.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 25 "systems/redhat/usr/include/bits/pthreadtypes.h" 2











 









/* Thread identifiers.  The structure of the attribute type is not
   exposed on purpose.  */
typedef unsigned long int pthread_t;


typedef union
{
  char __size[56];
  long int __align;
} pthread_attr_t;



typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
 

  


/* Data structures for mutex handling.  The structure of the attribute
   type is not exposed on purpose.  */
typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;

    unsigned int __nusers;

    /* KIND must stay at this position in the structure to maintain
       binary compatibility.  */
    int __kind;

    int __spins;
    __pthread_list_t __list;

     
    
    
      
      
    

  } __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;


/* Data structure for conditional variable handling.  The structure of
   the attribute type is not exposed on purpose.  */
typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;


/* Keys for thread-specific data */
typedef unsigned int pthread_key_t;


/* Once-only execution */
typedef int pthread_once_t;



/* Data structure for read-write lock variable handling.  The
   structure of the attribute type is not exposed on purpose.  */
typedef union
{

  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
    int __writer;
    int __shared;
    unsigned long int __pad1;
    unsigned long int __pad2;
    /* FLAGS must stay at this position in the structure to maintain
       binary compatibility.  */
    unsigned int __flags;
  } __data;
   
  
    
    
    
    
    
    
    

    
    
    
    
    
  

  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;


/* POSIX spinlock data type.  */
typedef volatile int pthread_spinlock_t;


/* POSIX barriers data type.  The structure of the type is
   deliberately not exposed.  */
typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;






#line 273 "systems/redhat/usr/include/sys/types.h" 2




#line 27 "systems/redhat/usr/include/bits/fcntl.h" 2
#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 28 "systems/redhat/usr/include/bits/fcntl.h" 2

#line 1 "systems/redhat/usr/include/bits/uio.h" 1
/* Copyright (C) 1996, 1997, 2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 28 "systems/redhat/usr/include/bits/uio.h" 2


/* We should normally use the Linux kernel header file to define this
   type and macros but this calls for trouble because of the header
   includes other kernel headers.  */

/* Size of object which can be written atomically.

   This macro has different values in different kernel versions.  The
   latest versions of the kernel use 1024 and this is good choice.  Since
   the C library implementation of readv/writev is able to emulate the
   functionality even if the currently running kernel does not support
   this large value the readv/writev call will not fail because of this.  */



/* Structure for scatter/gather I/O.  */
struct iovec
  {
    void *iov_base;	/* Pointer to data.  */
    size_t iov_len;	/* Length of data.  */
  };


#line 30 "systems/redhat/usr/include/bits/fcntl.h" 2

/* open/fcntl - O_SYNC is only implemented on blocks devices and on files
   located on a few file systems.  */
























/* For now Linux has synchronisity options for data and read operations.
   We define the symbols here but let them do the same as O_SYNC since
   this is a superset.	*/







 


/* Values for the second argument to `fcntl'.  */









/* Not necessary, we always have 64-bit offsets.  */



 



 

























/* For F_[GET|SET]FD.  */


/* For posix fcntl() and `l_type' field of a `struct flock' for lockf().  */




/* For old implementation of bsd flock().  */




/* Operations for bsd flock(), also used by the kernel implementation.	*/












/* Types of directory notifications that may be requested with F_NOTIFY.  */








struct flock
  {
    short int l_type;	/* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.	*/
    short int l_whence;	/* Where `l_start' is relative to (like `lseek').  */

    __off_t l_start;	/* Offset where the lock begins.  */
    __off_t l_len;	/* Size of the locked area; zero means until EOF.  */
     
    

    __pid_t l_pid;	/* Process holding the lock.  */
  };


struct flock64
  {
    short int l_type;	/* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.	*/
    short int l_whence;	/* Where `l_start' is relative to (like `lseek').  */
    __off64_t l_start;	/* Offset where the lock begins.  */
    __off64_t l_len;	/* Size of the locked area; zero means until EOF.  */
    __pid_t l_pid;	/* Process holding the lock.  */
  };


/* Owner types.  */
enum __pid_type
  {
    F_OWNER_TID = 0,		/* Kernel thread.  */
    F_OWNER_PID,		/* Process.  */
    F_OWNER_PGRP,		/* Process group.  */
    F_OWNER_GID = F_OWNER_PGRP	/* Alternative, obsolete name.  */
  };

/* Structure to use with F_GETOWN_EX and F_SETOWN_EX.  */
struct f_owner_ex
  {
    enum __pid_type type;	/* Owner type of ID.  */
    __pid_t pid;		/* ID of owner.  */
  };

/* Define some more compatibility macros to be backward compatible with
   BSD systems which did not managed to hide these kernel macros.  */







/* Advise to `posix_fadvise'.  */









/* Flags for SYNC_FILE_RANGE.  */




/* Flags for SPLICE and VMSPLICE.  */








/* Provide kernel hint to read ahead.  */
extern ssize_t readahead (int __fd, __off64_t __offset, size_t __count)
    __attribute__ ((__nothrow__));


/* Selective file content synch'ing.  */
extern int sync_file_range (int __fd, __off64_t __offset, __off64_t __count,
			    unsigned int __flags);


/* Splice address range into a pipe.  */
extern ssize_t vmsplice (int __fdout, const struct iovec *__iov,
			 size_t __count, unsigned int __flags);

/* Splice two files together.  */
extern ssize_t splice (int __fdin, __off64_t *__offin, int __fdout,
		       __off64_t *__offout, size_t __len,
		       unsigned int __flags);

/* In-kernel implementation of tee for pipe buffers.  */
extern ssize_t tee (int __fdin, int __fdout, size_t __len,
		    unsigned int __flags);

/* Reserve storage for the data of the file associated with FD.  */

extern int fallocate (int __fd, int __mode, __off_t __offset, __off_t __len);
 

				   
		       
 



extern int fallocate64 (int __fd, int __mode, __off64_t __offset,
			__off64_t __len);



#line 36 "systems/redhat/usr/include/fcntl.h" 2

/* For XPG all symbols from <sys/stat.h> should also be available.  */

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 40 "systems/redhat/usr/include/fcntl.h" 2

#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 42 "systems/redhat/usr/include/fcntl.h" 2
#line 1 "systems/redhat/usr/include/bits/stat.h" 1
/* Copyright (C) 1999-2003,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







/* Versions of the `struct stat' data structure.  */










 

/* x86-64 versions of the `xmknod' interface.  */




struct stat
  {
    __dev_t st_dev;		/* Device.  */

    


    __ino_t st_ino;		/* File serial number.	*/
     


    
    
     __nlink_t st_nlink;		/* Link count.  */
    __mode_t st_mode;		/* File mode.  */

    __uid_t st_uid;		/* User ID of the file's owner.	*/
    __gid_t st_gid;		/* Group ID of the file's group.*/

    int __pad0;

    __dev_t st_rdev;		/* Device number, if device.  */

    


    __off_t st_size;			/* Size of file, in bytes.  */
     

    __blksize_t st_blksize;	/* Optimal block size for I/O.  */

    __blkcnt_t st_blocks;		/* Number 512-byte blocks allocated. */
     


    /* Nanosecond resolution timestamps are stored in a format
       equivalent to 'struct timespec'.  This is the type used
       whenever possible but the Unix namespace rules do not allow the
       identifier 'timespec' to appear in the <sys/stat.h> header.
       Therefore we have to handle the use of this header in strictly
       standard-compliant sources special.  */
    struct timespec st_atim;		/* Time of last access.  */
    struct timespec st_mtim;		/* Time of last modification.  */
    struct timespec st_ctim;		/* Time of last status change.  */



     
    
    
    
    
    


    long int __unused[3];
 
    
    
     


  };


/* Note stat64 has the same shape as stat for x86-64.  */
struct stat64
  {
    __dev_t st_dev;		/* Device.  */

    __ino64_t st_ino;		/* File serial number.  */
    __nlink_t st_nlink;		/* Link count.  */
    __mode_t st_mode;		/* File mode.  */
     
    
    
    

    __uid_t st_uid;		/* User ID of the file's owner.	*/
    __gid_t st_gid;		/* Group ID of the file's group.*/

    int __pad0;
    __dev_t st_rdev;		/* Device number, if device.  */
    __off_t st_size;		/* Size of file, in bytes.  */
     
    
    

    __blksize_t st_blksize;	/* Optimal block size for I/O.  */
    __blkcnt64_t st_blocks;	/* Nr. 512-byte blocks allocated.  */

    /* Nanosecond resolution timestamps are stored in a format
       equivalent to 'struct timespec'.  This is the type used
       whenever possible but the Unix namespace rules do not allow the
       identifier 'timespec' to appear in the <sys/stat.h> header.
       Therefore we have to handle the use of this header in strictly
       standard-compliant sources special.  */
    struct timespec st_atim;		/* Time of last access.  */
    struct timespec st_mtim;		/* Time of last modification.  */
    struct timespec st_ctim;		/* Time of last status change.  */



     
    
    
    
    
    


    long int __unused[3];
     

  };

/* Tell code we have these members.  */


/* Nanosecond resolution time values are supported.  */


/* Encoding of the file mode.  */



/* File types.  */








/* POSIX.1b objects.  Note that these macros always evaluate to zero.  But
   they do it by enforcing the correct use of the macros.  */




/* Protection bits.  */













#line 43 "systems/redhat/usr/include/fcntl.h" 2















/* Protection bits.  */





/* Save swapped text after use (sticky bit).  This is pretty well obsolete.  */





/* Read, write, and execute by owner.  */





/* Read, write, and execute by group.  */





/* Read, write, and execute by others.  */












/* XPG wants the following symbols.   <stdio.h> has the same definitions.  */












/* Do the file control operation described by CMD on FD.
   The remaining arguments are interpreted depending on CMD.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int fcntl (int __fd, int __cmd, ...);

/* Open FILE and return a new file descriptor for it, or -1 on error.
   OFLAG determines the type of access used.  If O_CREAT is on OFLAG,
   the third argument is taken as a `mode_t', the mode of the created file.

   This function is a cancellation point and therefore not marked with
   __THROW.  */

extern int open (const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));
 

     
 



extern int open64 (const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));


/* Similar to `open' but a relative path name is interpreted relative to
   the directory for which FD is a descriptor.

   NOTE: some other `openat' implementation support additional functionality
   through this interface, especially using the O_XATTR flag.  This is not
   yet supported here.

   This function is a cancellation point and therefore not marked with
   __THROW.  */

extern int openat (int __fd, const char *__file, int __oflag, ...)
     __attribute__ ((__nonnull__ (2)));
 

				
 



extern int openat64 (int __fd, const char *__file, int __oflag, ...)
     __attribute__ ((__nonnull__ (2)));


/* Create and open FILE, with mode MODE.  This takes an `int' MODE
   argument because that is what `mode_t' will be widened to.

   This function is a cancellation point and therefore not marked with
   __THROW.  */

extern int creat (const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));
 

		       
 



extern int creat64 (const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));

















 

 







/* Advice the system about the expected behaviour of the application with
   respect to the file associated with FD.  */

extern int posix_fadvise (int __fd, __off_t __offset, __off_t __len,
			  int __advise) __attribute__ ((__nothrow__));
  

					   
			   
 



extern int posix_fadvise64 (int __fd, __off64_t __offset, __off64_t __len,
			    int __advise) __attribute__ ((__nothrow__));

/* Reserve storage for the data of the file associated with FD.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */

extern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);
  

					 
		       
 



extern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);


/* Define some inlines helping to catch common problems.  */






#line 20 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/inttypes.h" 1
/* Copyright (C) 1997-2001, 2004, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.8 Format conversion of integer types	<inttypes.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/inttypes.h" 2
/* Get the type definitions.  */
#line 1 "systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




















 












 










 








 










 










 











 









 










 













































 








 









 










 


















 









 





















 







 





 




#line 30 "systems/redhat/usr/include/inttypes.h" 2

/* Get a definition for wchar_t.  But we must not define wchar_t itself.  */



 typedef int __gwchar_t;
 





/* The ISO C99 standard specifies that these macros must only be
   defined if explicitly requested.  */




 


/* Macros for printing format specifiers.  */

/* Decimal notation.  */































/* Octal notation.  */















/* Unsigned integers.  */















/* lowercase hexadecimal notation.  */















/* UPPERCASE hexadecimal notation.  */
















/* Macros for printing `intmax_t' and `uintmax_t'.  */








/* Macros for printing `intptr_t' and `uintptr_t'.  */








/* Macros for scanning format specifiers.  */

/* Signed decimal notation.  */















/* Signed decimal notation.  */















/* Unsigned decimal notation.  */















/* Octal notation.  */















/* Hexadecimal notation.  */
















/* Macros for scanning `intmax_t' and `uintmax_t'.  */






/* Macros for scaning `intptr_t' and `uintptr_t'.  */










/* We have to define the `uintmax_t' type using `ldiv_t'.  */
typedef struct
  {
    long int quot;		/* Quotient.  */
    long int rem;		/* Remainder.  */
  } imaxdiv_t;

 

  
    
    
  


/* Compute absolute value of N.  */
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Return the `imaxdiv_t' representation of the value of NUMER over DENOM. */
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Like `strtol' but convert to `intmax_t'.  */
extern intmax_t strtoimax (const char *__restrict __nptr,
			   char **__restrict __endptr, int __base) __attribute__ ((__nothrow__));

/* Like `strtoul' but convert to `uintmax_t'.  */
extern uintmax_t strtoumax (const char *__restrict __nptr,
			    char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__));

/* Like `wcstol' but convert to `intmax_t'.  */
extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
			   __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__));

/* Like `wcstoul' but convert to `uintmax_t'.  */
extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
			    __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__));




				   
				   
  



		  

  



					     
					     
					     
  



		  

  



				   
				   
  



		  

  



					     
					     
					     
					     
  



		  

  


 

					 
					 
  



		  

  




						   
						   
						   
						   
						   
  



		  

  




					 
					 
					 
  



		  

  





						   
						   
						   
						   
						   
  



		  

  







#line 21 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/netdb.h" 1
  /* Copyright (C) 1996-2004, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/* All data returned by the network data base library are supplied in
   host order and returned in network order (suitable for use in
   system calls).  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/netdb.h" 2

#line 1 "systems/redhat/usr/include/netinet/in.h" 1
/* Copyright (C) 1991-2001, 2003, 2004, 2006, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/netinet/in.h" 2
#line 1 "systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




















 












 










 








 










 










 











 









 










 













































 








 









 










 


















 









 





















 







 





 




#line 26 "systems/redhat/usr/include/netinet/in.h" 2
#line 1 "systems/redhat/usr/include/sys/socket.h" 1
/* Declarations of socket constants, types, and functions.
   Copyright (C) 1991,92,1994-2001,2003,2005,2007,2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "systems/redhat/usr/include/sys/socket.h" 2



#line 1 "systems/redhat/usr/include/sys/uio.h" 1
/* Copyright (C) 1991,1992,1996-1999,2003,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/sys/uio.h" 2

#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 26 "systems/redhat/usr/include/sys/uio.h" 2



/* This file defines `struct iovec'.  */
#line 1 "systems/redhat/usr/include/bits/uio.h" 1
/* Copyright (C) 1996, 1997, 2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























  
    
    
  


#line 31 "systems/redhat/usr/include/sys/uio.h" 2


/* Read data from file descriptor FD, and put the result in the
   buffers described by IOVEC, which is a vector of COUNT 'struct iovec's.
   The buffers are filled in the order specified.
   Operates just like 'read' (see <unistd.h>) except that data are
   put in IOVEC instead of a contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)
  ;

/* Write data pointed by the buffers described by IOVEC, which
   is a vector of COUNT 'struct iovec's, to file descriptor FD.
   The data is written in the order specified.
   Operates just like 'write' (see <unistd.h>) except that the data
   are taken from IOVEC instead of a contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)
  ;




/* Read data from file descriptor FD at the given position OFFSET
   without change the file pointer, and put the result in the buffers
   described by IOVEC, which is a vector of COUNT 'struct iovec's.
   The buffers are filled in the order specified.  Operates just like
   'pread' (see <unistd.h>) except that data are put in IOVEC instead
   of a contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,
		       __off_t __offset) ;

/* Write data pointed by the buffers described by IOVEC, which is a
   vector of COUNT 'struct iovec's, to file descriptor FD at the given
   position OFFSET without change the file pointer.  The data is
   written in the order specified.  Operates just like 'pwrite' (see
   <unistd.h>) except that the data are taken from IOVEC instead of a
   contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,
			__off_t __offset) ;
 

				    
			   

				     
			   
 




/* Read data from file descriptor FD at the given position OFFSET
   without change the file pointer, and put the result in the buffers
   described by IOVEC, which is a vector of COUNT 'struct iovec's.
   The buffers are filled in the order specified.  Operates just like
   'pread' (see <unistd.h>) except that data are put in IOVEC instead
   of a contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,
			 __off64_t __offset) ;

/* Write data pointed by the buffers described by IOVEC, which is a
   vector of COUNT 'struct iovec's, to file descriptor FD at the given
   position OFFSET without change the file pointer.  The data is
   written in the order specified.  Operates just like 'pwrite' (see
   <unistd.h>) except that the data are taken from IOVEC instead of a
   contiguous buffer.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,
			  __off64_t __offset) ;





#line 30 "systems/redhat/usr/include/sys/socket.h" 2

#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 32 "systems/redhat/usr/include/sys/socket.h" 2

/* Get the __sigset_t definition.  */
#line 1 "systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
    
  


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 35 "systems/redhat/usr/include/sys/socket.h" 2

/* This operating system-specific header file defines the SOCK_*, PF_*,
   AF_*, MSG_*, SOL_*, and SO_* constants, and the `struct sockaddr',
   `struct msghdr', and `struct linger' types.  */
#line 1 "systems/redhat/usr/include/bits/socket.h" 1
/* System-specific socket constants and types.  Linux version.
   Copyright (C) 1991, 1992, 1994-2001, 2004, 2006, 2007, 2008, 2009, 2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */








#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 31 "systems/redhat/usr/include/bits/socket.h" 2

#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 33 "systems/redhat/usr/include/bits/socket.h" 2

/* Type for length arguments in socket calls.  */




/* Types of sockets.  */
enum __socket_type
{
  SOCK_STREAM = 1,		/* Sequenced, reliable, connection-based
				   byte streams.  */

  SOCK_DGRAM = 2,		/* Connectionless, unreliable datagrams
				   of fixed maximum length.  */

  SOCK_RAW = 3,			/* Raw protocol interface.  */

  SOCK_RDM = 4,			/* Reliably-delivered messages.  */

  SOCK_SEQPACKET = 5,		/* Sequenced, reliable, connection-based,
				   datagrams of fixed maximum length.  */

  SOCK_DCCP = 6,		/* Datagram Congestion Control Protocol.  */

  SOCK_PACKET = 10,		/* Linux specific way of getting packets
				   at the dev level.  For writing rarp and
				   other similar things on the user level. */


  /* Flags to be ORed into the type parameter of socket and socketpair and
     used for the flags parameter of paccept.  */

  SOCK_CLOEXEC = 02000000,	/* Atomically set close-on-exec flag for the
				   new descriptor(s).  */

  SOCK_NONBLOCK = 04000		/* Atomically mark descriptor(s) as
				   non-blocking.  */

};

/* Protocol families.  */








































/* Address families.  */








































/* Socket level values.  Others are defined in the appropriate headers.

   XXX These definitions also should go into the appropriate headers as
   far as they are available.  */








/* Maximum queue length specifiable by listen.  */


/* Get the definition of the macro to define the common sockaddr members.  */
#line 1 "systems/redhat/usr/include/bits/sockaddr.h" 1
/* Definition of `struct sockaddr_*' common members.  Generic/4.2 BSD version.
   Copyright (C) 1995,1996,1997,1998,2000,2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/socket.h> instead.
 */





/* POSIX.1g specifies this type name for the `sa_family' member.  */
typedef unsigned short int sa_family_t;

/* This macro is used to declare the initial common members
   of the data types used for socket addresses, `struct sockaddr',
   `struct sockaddr_in', `struct sockaddr_un', etc.  */







#line 173 "systems/redhat/usr/include/bits/socket.h" 2

/* Structure describing a generic socket address.  */
struct sockaddr
  {
    sa_family_t sa_family;	/* Common data: address family and length.  */
    char sa_data[14];		/* Address data.  */
  };


/* Structure large enough to hold any socket address (with the historical
   exception of AF_UNIX).  We reserve 128 bytes.  */




struct sockaddr_storage
  {
    sa_family_t ss_family;	/* Address family, etc.  */
    unsigned long int __ss_align;	/* Force desired alignment.  */
    char __ss_padding[(128 - (2 * sizeof (unsigned long int)))];
  };


/* Bits in the FLAGS argument to `send', `recv', et al.  */
enum
  {
    MSG_OOB		= 0x01,	/* Process out-of-band data.  */

    MSG_PEEK		= 0x02,	/* Peek at incoming messages.  */

    MSG_DONTROUTE	= 0x04,	/* Don't use local routing.  */


    /* DECnet uses a different name.  */
    MSG_TRYHARD		= MSG_DONTROUTE,


    MSG_CTRUNC		= 0x08,	/* Control data lost before delivery.  */

    MSG_PROXY		= 0x10,	/* Supply or ask second address.  */

    MSG_TRUNC		= 0x20,

    MSG_DONTWAIT	= 0x40, /* Nonblocking IO.  */

    MSG_EOR		= 0x80, /* End of record.  */

    MSG_WAITALL		= 0x100, /* Wait for a full request.  */

    MSG_FIN		= 0x200,

    MSG_SYN		= 0x400,

    MSG_CONFIRM		= 0x800, /* Confirm path validity.  */

    MSG_RST		= 0x1000,

    MSG_ERRQUEUE	= 0x2000, /* Fetch message from error queue.  */

    MSG_NOSIGNAL	= 0x4000, /* Do not generate SIGPIPE.  */

    MSG_MORE		= 0x8000,  /* Sender will send more.  */

    MSG_WAITFORONE	= 0x10000, /* Wait for at least one packet to return.*/


    MSG_CMSG_CLOEXEC	= 0x40000000	/* Set close_on_exit for file
					   descriptor received through
					   SCM_RIGHTS.  */

  };


/* Structure describing messages sent by
   `sendmsg' and received by `recvmsg'.  */
struct msghdr
  {
    void *msg_name;		/* Address to send to/receive from.  */
    socklen_t msg_namelen;	/* Length of address data.  */

    struct iovec *msg_iov;	/* Vector of data to send/receive into.  */
    size_t msg_iovlen;		/* Number of elements in the vector.  */

    void *msg_control;		/* Ancillary data (eg BSD filedesc passing). */
    size_t msg_controllen;	/* Ancillary data buffer length.
				   !! The type should be socklen_t but the
				   definition of the kernel is incompatible
				   with this.  */

    int msg_flags;		/* Flags on received message.  */
  };


/* For `recvmmsg'.  */
struct mmsghdr
  {
    struct msghdr msg_hdr;	/* Actual message header.  */
    unsigned int msg_len;	/* Number of received bytes for the entry.  */
  };

/* Structure used for storage of ancillary data object information.  */
struct cmsghdr
  {
    size_t cmsg_len;		/* Length of data in cmsg_data plus length
				   of cmsghdr structure.
				   !! The type should be socklen_t but the
				   definition of the kernel is incompatible
				   with this.  */
    int cmsg_level;		/* Originating protocol.  */
    int cmsg_type;		/* Protocol specific type.  */

    __extension__ unsigned char __cmsg_data []; /* Ancillary data.  */

  };

/* Ancillary data object manipulation macros.  */


 











extern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,
				      struct cmsghdr *__cmsg) __attribute__ ((__nothrow__));







  
    
    

  
			       
  
					
      
	  
    
    
  


/* Socket level message types.  This must match the definitions in
   <linux/socket.h>.  */
enum
  {
    SCM_RIGHTS = 0x01		/* Transfer file descriptors.  */


    , SCM_CREDENTIALS = 0x02	/* Credentials passing.  */


  };


/* User visible structure for SCM_CREDENTIALS message */
struct ucred
{
  pid_t pid;			/* PID of sending process.  */
  uid_t uid;			/* UID of sending process.  */
  gid_t gid;			/* GID of sending process.  */
};

/* Ugly workaround for unclean kernel headers.  */























/* Get socket manipulation related informations from kernel headers.  */
#line 1 "systems/redhat/usr/include/asm/socket.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/socket.h" 1



#line 1 "systems/redhat/usr/include/asm/sockios.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/sockios.h" 1



/* Socket-level I/O control calls. */









#line 3 "systems/redhat/usr/include/asm/sockios.h" 2
#line 6 "systems/redhat/usr/include/asm-generic/socket.h" 2

/* For setsockopt(2) */


















/* To add :#define SO_REUSEPORT 15 */









/* Security levels - as per NRL IPv6 - don't actually do anything */






/* Socket filtering */
























#line 3 "systems/redhat/usr/include/asm/socket.h" 2
#line 379 "systems/redhat/usr/include/bits/socket.h" 2































/* Structure used to manipulate the SO_LINGER option.  */
struct linger
  {
    int l_onoff;		/* Nonzero to linger on close.  */
    int l_linger;		/* Time to linger.  */
  };




/* Receive a message as described by MESSAGE from socket FD.
   Returns the number of bytes read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int recvmmsg (int __fd, struct mmsghdr *__vmessages,
		     unsigned int __vlen, int __flags,
		     const struct timespec *__tmo);




#line 42 "systems/redhat/usr/include/sys/socket.h" 2


/* This is the 4.3 BSD `struct sockaddr' format, which is used as wire
   format in the grotty old 4.3 `talk' protocol.  */
struct osockaddr
  {
    unsigned short int sa_family;
    unsigned char sa_data[14];
  };

/* The following constants should be used for the second parameter of
   `shutdown'.  */
enum
{
  SHUT_RD = 0,		/* No more receptions.  */

  SHUT_WR,		/* No more transmissions.  */

  SHUT_RDWR		/* No more receptions or transmissions.  */

};

/* This is the type we use for generic socket address arguments.

   With GCC 2.7 and later, the funky union causes redeclarations or
   uses with any of the listed types to be allowed without complaint.
   G++ 2.7 does not support transparent unions so there we want the
   old-style declaration, too.  */



 /* Add more `struct sockaddr_AF' types here as necessary.
   These are all the ones I found on NetBSD and Linux.  */
















typedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;
	      } __SOCKADDR_ARG __attribute__ ((__transparent_union__));


typedef union { const struct sockaddr *__restrict __sockaddr__; const struct sockaddr_at *__restrict __sockaddr_at__; const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; const struct sockaddr_dl *__restrict __sockaddr_dl__; const struct sockaddr_eon *__restrict __sockaddr_eon__; const struct sockaddr_in *__restrict __sockaddr_in__; const struct sockaddr_in6 *__restrict __sockaddr_in6__; const struct sockaddr_inarp *__restrict __sockaddr_inarp__; const struct sockaddr_ipx *__restrict __sockaddr_ipx__; const struct sockaddr_iso *__restrict __sockaddr_iso__; const struct sockaddr_ns *__restrict __sockaddr_ns__; const struct sockaddr_un *__restrict __sockaddr_un__; const struct sockaddr_x25 *__restrict __sockaddr_x25__;
	      } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));


/* Create a new socket of type TYPE in domain DOMAIN, using
   protocol PROTOCOL.  If PROTOCOL is zero, one is chosen automatically.
   Returns a file descriptor for the new socket, or -1 for errors.  */
extern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__));

/* Create two new sockets, of type TYPE in domain DOMAIN and using
   protocol PROTOCOL, which are connected to each other, and put file
   descriptors for them in FDS[0] and FDS[1].  If PROTOCOL is zero,
   one will be chosen automatically.  Returns 0 on success, -1 for errors.  */
extern int socketpair (int __domain, int __type, int __protocol,
		       int __fds[2]) __attribute__ ((__nothrow__));

/* Give the socket FD the local address ADDR (which is LEN bytes long).  */
extern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)
     __attribute__ ((__nothrow__));

/* Put the local address of FD into *ADDR and its length in *LEN.  */
extern int getsockname (int __fd, __SOCKADDR_ARG __addr,
			socklen_t *__restrict __len) __attribute__ ((__nothrow__));

/* Open a connection on socket FD to peer at ADDR (which LEN bytes long).
   For connectionless socket types, just set the default address to send to
   and the only address from which to accept transmissions.
   Return 0 on success, -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);

/* Put the address of the peer connected to socket FD into *ADDR
   (which is *LEN bytes long), and its actual length into *LEN.  */
extern int getpeername (int __fd, __SOCKADDR_ARG __addr,
			socklen_t *__restrict __len) __attribute__ ((__nothrow__));


/* Send N bytes of BUF to socket FD.  Returns the number sent or -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t send (int __fd, const void *__buf, size_t __n, int __flags);

/* Read N bytes into BUF from socket FD.
   Returns the number read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);

/* Send N bytes of BUF on socket FD to peer at address ADDR (which is
   ADDR_LEN bytes long).  Returns the number sent, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t sendto (int __fd, const void *__buf, size_t __n,
		       int __flags, __CONST_SOCKADDR_ARG __addr,
		       socklen_t __addr_len);

/* Read N bytes into BUF through socket FD.
   If ADDR is not NULL, fill in *ADDR_LEN bytes of it with tha address of
   the sender, and store the actual size of the address in *ADDR_LEN.
   Returns the number of bytes read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,
			 int __flags, __SOCKADDR_ARG __addr,
			 socklen_t *__restrict __addr_len);


/* Send a message described MESSAGE on socket FD.
   Returns the number of bytes sent, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t sendmsg (int __fd, const struct msghdr *__message,
			int __flags);

/* Receive a message as described by MESSAGE from socket FD.
   Returns the number of bytes read or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);


/* Put the current value for socket FD's option OPTNAME at protocol level LEVEL
   into OPTVAL (which is *OPTLEN bytes long), and set *OPTLEN to the value's
   actual length.  Returns 0 on success, -1 for errors.  */
extern int getsockopt (int __fd, int __level, int __optname,
		       void *__restrict __optval,
		       socklen_t *__restrict __optlen) __attribute__ ((__nothrow__));

/* Set socket FD's option OPTNAME at protocol level LEVEL
   to *OPTVAL (which is OPTLEN bytes long).
   Returns 0 on success, -1 for errors.  */
extern int setsockopt (int __fd, int __level, int __optname,
		       const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__));


/* Prepare to accept connections on socket FD.
   N connection requests will be queued before further requests are refused.
   Returns 0 on success, -1 for errors.  */
extern int listen (int __fd, int __n) __attribute__ ((__nothrow__));

/* Await a connection on socket FD.
   When a connection arrives, open a new socket to communicate with it,
   set *ADDR (which is *ADDR_LEN bytes long) to the address of the connecting
   peer and *ADDR_LEN to the address's actual length, and return the
   new socket's descriptor, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int accept (int __fd, __SOCKADDR_ARG __addr,
		   socklen_t *__restrict __addr_len);


/* Similar to 'accept' but takes an additional parameter to specify flags.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int accept4 (int __fd, __SOCKADDR_ARG __addr,
		    socklen_t *__restrict __addr_len, int __flags);

/* Shut down all or part of the connection open on socket FD.
   HOW determines what to shut down:
     SHUT_RD   = No more receptions;
     SHUT_WR   = No more transmissions;
     SHUT_RDWR = No more receptions or transmissions.
   Returns 0 on success, -1 for errors.  */
extern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__));



/* Determine wheter socket is at a out-of-band mark.  */
extern int sockatmark (int __fd) __attribute__ ((__nothrow__));


/* FDTYPE is S_IFSOCK or another S_IF* macro defined in <sys/stat.h>;
   returns 1 if FD is open on an object of the indicated type, 0 if not,
   or -1 for errors (setting errno).  */
extern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__));

/* Define some macros helping to catch buffer overflows.  */






#line 27 "systems/redhat/usr/include/netinet/in.h" 2
#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 28 "systems/redhat/usr/include/netinet/in.h" 2




/* Standard well-defined IP protocols.  */
enum
  {
    IPPROTO_IP = 0,	   /* Dummy protocol for TCP.  */

    IPPROTO_HOPOPTS = 0,   /* IPv6 Hop-by-Hop options.  */

    IPPROTO_ICMP = 1,	   /* Internet Control Message Protocol.  */

    IPPROTO_IGMP = 2,	   /* Internet Group Management Protocol. */

    IPPROTO_IPIP = 4,	   /* IPIP tunnels (older KA9Q tunnels use 94).  */

    IPPROTO_TCP = 6,	   /* Transmission Control Protocol.  */

    IPPROTO_EGP = 8,	   /* Exterior Gateway Protocol.  */

    IPPROTO_PUP = 12,	   /* PUP protocol.  */

    IPPROTO_UDP = 17,	   /* User Datagram Protocol.  */

    IPPROTO_IDP = 22,	   /* XNS IDP protocol.  */

    IPPROTO_TP = 29,	   /* SO Transport Protocol Class 4.  */

    IPPROTO_DCCP = 33,	   /* Datagram Congestion Control Protocol.  */

    IPPROTO_IPV6 = 41,     /* IPv6 header.  */

    IPPROTO_ROUTING = 43,  /* IPv6 routing header.  */

    IPPROTO_FRAGMENT = 44, /* IPv6 fragmentation header.  */

    IPPROTO_RSVP = 46,	   /* Reservation Protocol.  */

    IPPROTO_GRE = 47,	   /* General Routing Encapsulation.  */

    IPPROTO_ESP = 50,      /* encapsulating security payload.  */

    IPPROTO_AH = 51,       /* authentication header.  */

    IPPROTO_ICMPV6 = 58,   /* ICMPv6.  */

    IPPROTO_NONE = 59,     /* IPv6 no next header.  */

    IPPROTO_DSTOPTS = 60,  /* IPv6 destination options.  */

    IPPROTO_MTP = 92,	   /* Multicast Transport Protocol.  */

    IPPROTO_ENCAP = 98,	   /* Encapsulation Header.  */

    IPPROTO_PIM = 103,	   /* Protocol Independent Multicast.  */

    IPPROTO_COMP = 108,	   /* Compression Header Protocol.  */

    IPPROTO_SCTP = 132,	   /* Stream Control Transmission Protocol.  */

    IPPROTO_UDPLITE = 136, /* UDP-Lite protocol.  */

    IPPROTO_RAW = 255,	   /* Raw IP packets.  */

    IPPROTO_MAX
  };


/* Type to represent a port.  */
typedef uint16_t in_port_t;

/* Standard well-known ports.  */
enum
  {
    IPPORT_ECHO = 7,		/* Echo service.  */
    IPPORT_DISCARD = 9,		/* Discard transmissions service.  */
    IPPORT_SYSTAT = 11,		/* System status service.  */
    IPPORT_DAYTIME = 13,	/* Time of day service.  */
    IPPORT_NETSTAT = 15,	/* Network status service.  */
    IPPORT_FTP = 21,		/* File Transfer Protocol.  */
    IPPORT_TELNET = 23,		/* Telnet protocol.  */
    IPPORT_SMTP = 25,		/* Simple Mail Transfer Protocol.  */
    IPPORT_TIMESERVER = 37,	/* Timeserver service.  */
    IPPORT_NAMESERVER = 42,	/* Domain Name Service.  */
    IPPORT_WHOIS = 43,		/* Internet Whois service.  */
    IPPORT_MTP = 57,

    IPPORT_TFTP = 69,		/* Trivial File Transfer Protocol.  */
    IPPORT_RJE = 77,
    IPPORT_FINGER = 79,		/* Finger service.  */
    IPPORT_TTYLINK = 87,
    IPPORT_SUPDUP = 95,		/* SUPDUP protocol.  */


    IPPORT_EXECSERVER = 512,	/* execd service.  */
    IPPORT_LOGINSERVER = 513,	/* rlogind service.  */
    IPPORT_CMDSERVER = 514,
    IPPORT_EFSSERVER = 520,

    /* UDP ports.  */
    IPPORT_BIFFUDP = 512,
    IPPORT_WHOSERVER = 513,
    IPPORT_ROUTESERVER = 520,

    /* Ports less than this value are reserved for privileged processes.  */
    IPPORT_RESERVED = 1024,

    /* Ports greater this value are reserved for (non-privileged) servers.  */
    IPPORT_USERRESERVED = 5000
  };


/* Internet address.  */
typedef uint32_t in_addr_t;
struct in_addr
  {
    in_addr_t s_addr;
  };


/* Definitions of the bits in an Internet address integer.

   On subnets, host and network parts are found according to
   the subnet mask, not these masks.  */
























/* Address to accept any incoming messages.  */

/* Address to send to all hosts.  */

/* Address indicating an error return.  */


/* Network number for local host loopback.  */

/* Address to loopback in software to local host.  */



/* Defines for Multicast INADDR.  */






/* IPv6 address */
struct in6_addr
  {
    union
      {
	uint8_t	__u6_addr8[16];

	uint16_t __u6_addr16[8];
	uint32_t __u6_addr32[4];

      } __in6_u;





  };

extern const struct in6_addr in6addr_any;        /* :: */
extern const struct in6_addr in6addr_loopback;   /* ::1 */







/* Structure describing an Internet socket address.  */
struct sockaddr_in
  {
    sa_family_t sin_family;
    in_port_t sin_port;			/* Port number.  */
    struct in_addr sin_addr;		/* Internet address.  */

    /* Pad to size of `struct sockaddr'.  */
    unsigned char sin_zero[sizeof (struct sockaddr) -
			   (sizeof (unsigned short int)) -
			   sizeof (in_port_t) -
			   sizeof (struct in_addr)];
  };

/* Ditto, for IPv6.  */
struct sockaddr_in6
  {
    sa_family_t sin6_family;
    in_port_t sin6_port;	/* Transport layer port # */
    uint32_t sin6_flowinfo;	/* IPv6 flow information */
    struct in6_addr sin6_addr;	/* IPv6 address */
    uint32_t sin6_scope_id;	/* IPv6 scope-id */
  };



/* IPv4 multicast request.  */
struct ip_mreq
  {
    /* IP multicast address of group.  */
    struct in_addr imr_multiaddr;

    /* Local IP address of interface.  */
    struct in_addr imr_interface;
  };

struct ip_mreq_source
  {
    /* IP multicast address of group.  */
    struct in_addr imr_multiaddr;

    /* IP address of source.  */
    struct in_addr imr_interface;

    /* IP address of interface.  */
    struct in_addr imr_sourceaddr;
  };

/* Likewise, for IPv6.  */
struct ipv6_mreq
  {
    /* IPv6 multicast address of group */
    struct in6_addr ipv6mr_multiaddr;

    /* local interface */
    unsigned int ipv6mr_interface;
  };



/* Multicast group request.  */
struct group_req
  {
    /* Interface index.  */
    uint32_t gr_interface;

    /* Group address.  */
    struct sockaddr_storage gr_group;
  };

struct group_source_req
  {
    /* Interface index.  */
    uint32_t gsr_interface;

    /* Group address.  */
    struct sockaddr_storage gsr_group;

    /* Source address.  */
    struct sockaddr_storage gsr_source;
  };


/* Full-state filter operations.  */
struct ip_msfilter
  {
    /* IP multicast address of group.  */
    struct in_addr imsf_multiaddr;

    /* Local IP address of interface.  */
    struct in_addr imsf_interface;

    /* Filter mode.  */
    uint32_t imsf_fmode;

    /* Number of source addresses.  */
    uint32_t imsf_numsrc;
    /* Source addresses.  */
    struct in_addr imsf_slist[1];
  };





struct group_filter
  {
    /* Interface index.  */
    uint32_t gf_interface;

    /* Group address.  */
    struct sockaddr_storage gf_group;

    /* Filter mode.  */
    uint32_t gf_fmode;

    /* Number of source addresses.  */
    uint32_t gf_numsrc;
    /* Source addresses.  */
    struct sockaddr_storage gf_slist[1];
};






/* Get system-specific definitions.  */
#line 1 "systems/redhat/usr/include/bits/in.h" 1
/* Copyright (C) 1991-1999, 2000, 2004, 2008, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/* Linux version.  */




/* Options for use with `getsockopt' and `setsockopt' at the IP level.
   The first word in the comment at the right is the data type used;
   "bool" means a boolean value stored in an `int'.  */





/* For BSD compatibility.  */







































/* TProxy original addresses */






/* IP_MTU_DISCOVER arguments.  */





/* To select the IP level.  */







/* Structure used to describe IP options for IP_OPTIONS and IP_RETOPTS.
   The `ip_dst' field is used for the first-hop gateway when using a
   source route (this gets put into the header proper).  */
struct ip_opts
  {
    struct in_addr ip_dst;	/* First hop; zero without source route.  */
    char ip_opts[40];		/* Actually variable in size.  */
  };

/* Like `struct ip_mreq' but including interface specification by index.  */
struct ip_mreqn
  {
    struct in_addr imr_multiaddr;	/* IP multicast address of group */
    struct in_addr imr_address;		/* local IP address of interface */
    int	imr_ifindex;			/* Interface index */
  };

/* Structure used for IP_PKTINFO.  */
struct in_pktinfo
  {
    int ipi_ifindex;			/* Interface index  */
    struct in_addr ipi_spec_dst;	/* Routing destination address  */
    struct in_addr ipi_addr;		/* Header destination address  */
  };

/* Options for use with `getsockopt' and `setsockopt' at the IPv6 level.
   The first word in the comment at the right is the data type used;
   "bool" means a boolean value stored in an `int'.  */












































/* Obsolete synonyms for the above.  */





/* IPV6_MTU_DISCOVER values.  */





/* Socket level values for IPv6.  */



/* Routing header options for IPv6.  */




#line 358 "systems/redhat/usr/include/netinet/in.h" 2

/* Functions to convert between host and network byte order.

   Please note that these functions normally take `unsigned long int' or
   `unsigned short int' values as arguments and also return them.  But
   this was a short-sighted decision since on different systems the types
   may have different representations but the values are always the same.  */

extern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t ntohs (uint16_t __netshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint32_t htonl (uint32_t __hostlong)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));
extern uint16_t htons (uint16_t __hostshort)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));

#line 1 "systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 375 "systems/redhat/usr/include/netinet/in.h" 2

/* Get machine dependent optimized versions of byte swapping functions.  */
#line 1 "systems/redhat/usr/include/bits/byteswap.h" 1
/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997, 1998, 2000, 2002, 2003, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

























 





















 













 
























 















#line 378 "systems/redhat/usr/include/netinet/in.h" 2












 















































/* Bind socket to a privileged IP port.  */
extern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__));

/* The IPv6 version of this function.  */
extern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)
     __attribute__ ((__nothrow__));























/* IPv6 packet information.  */
struct in6_pktinfo
  {
    struct in6_addr ipi6_addr;	/* src/dst IPv6 address */
    unsigned int ipi6_ifindex;	/* send/recv interface index */
  };

/* IPv6 MTU information.  */
struct ip6_mtuinfo
  {
    struct sockaddr_in6 ip6m_addr; /* dst address including zone ID */
    uint32_t ip6m_mtu;		   /* path MTU in host byte order */
  };


/* Obsolete hop-by-hop and Destination Options Processing (RFC 2292).  */
extern int inet6_option_space (int __nbytes)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,
			      int __type) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_append (struct cmsghdr *__cmsg,
				const uint8_t *__typep, int __multx,
				int __plusy) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,
				    int __multx, int __plusy)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_next (const struct cmsghdr *__cmsg,
			      uint8_t **__tptrp)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));
extern int inet6_option_find (const struct cmsghdr *__cmsg,
			      uint8_t **__tptrp, int __type)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));


/* Hop-by-Hop and Destination Options Processing (RFC 3542).  */
extern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__));
extern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,
			     uint8_t __type, socklen_t __len, uint8_t __align,
			     void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)
     __attribute__ ((__nothrow__));
extern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,
			      socklen_t __vallen) __attribute__ ((__nothrow__));
extern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,
			   uint8_t *__typep, socklen_t *__lenp,
			   void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,
			   uint8_t __type, socklen_t *__lenp,
			   void **__databufp) __attribute__ ((__nothrow__));
extern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,
			      socklen_t __vallen) __attribute__ ((__nothrow__));


/* Routing Header Option (RFC 3542).  */
extern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__));
extern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,
			     int __segments) __attribute__ ((__nothrow__));
extern int inet6_rth_add (void *__bp, const struct in6_addr *__addr) __attribute__ ((__nothrow__));
extern int inet6_rth_reverse (const void *__in, void *__out) __attribute__ ((__nothrow__));
extern int inet6_rth_segments (const void *__bp) __attribute__ ((__nothrow__));
extern struct in6_addr *inet6_rth_getaddr (const void *__bp, int __index)
     __attribute__ ((__nothrow__));


/* Multicast source filter support.  */

/* Get IPv4 source filter.  */
extern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,
				struct in_addr __group, uint32_t *__fmode,
				uint32_t *__numsrc, struct in_addr *__slist)
     __attribute__ ((__nothrow__));

/* Set IPv4 source filter.  */
extern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,
				struct in_addr __group, uint32_t __fmode,
				uint32_t __numsrc,
				const struct in_addr *__slist)
     __attribute__ ((__nothrow__));


/* Get source filter.  */
extern int getsourcefilter (int __s, uint32_t __interface_addr,
			    const struct sockaddr *__group,
			    socklen_t __grouplen, uint32_t *__fmode,
			    uint32_t *__numsrc,
			    struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));

/* Set source filter.  */
extern int setsourcefilter (int __s, uint32_t __interface_addr,
			    const struct sockaddr *__group,
			    socklen_t __grouplen, uint32_t __fmode,
			    uint32_t __numsrc,
			    const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));




#line 30 "systems/redhat/usr/include/netdb.h" 2
#line 1 "systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




















 












 










 








 










 










 











 









 










 













































 








 









 










 


















 









 





















 







 





 




#line 31 "systems/redhat/usr/include/netdb.h" 2

/* This is necessary to make this include file properly replace the
   Sun version.  */
#line 1 "systems/redhat/usr/include/rpc/netdb.h" 1
/* @(#)netdb.h	2.1 88/07/29 3.9 RPCSRC */
/*
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of Sun Microsystems, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*	@(#)rpc.h 1.8 87/07/24 SMI	*/

/* Cleaned up for GNU C library roland@gnu.ai.mit.edu:
   added multiple inclusion protection and use of <sys/cdefs.h>.
   In GNU this file is #include'd by <netdb.h>.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 41 "systems/redhat/usr/include/rpc/netdb.h" 2


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 44 "systems/redhat/usr/include/rpc/netdb.h" 2



struct rpcent
{
  char *r_name;		/* Name of server for this rpc program.  */
  char **r_aliases;	/* Alias list.  */
  int r_number;		/* RPC program number.  */
};

extern void setrpcent (int __stayopen) __attribute__ ((__nothrow__));
extern void endrpcent (void) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcbyname (const char *__name) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__));
extern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__));


extern int getrpcbyname_r (const char *__name, struct rpcent *__result_buf,
			   char *__buffer, size_t __buflen,
			   struct rpcent **__result) __attribute__ ((__nothrow__));

extern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,
			     char *__buffer, size_t __buflen,
			     struct rpcent **__result) __attribute__ ((__nothrow__));

extern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,
			size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__));




#line 35 "systems/redhat/usr/include/netdb.h" 2



#line 1 "systems/redhat/usr/include/bits/siginfo.h" 1
/* siginfo_t, sigevent and constants.  Linux version.
   Copyright (C) 1997-2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 27 "systems/redhat/usr/include/bits/siginfo.h" 2




/* Type for data associated with a signal.  */
typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;







 


  
    
    
    

    
      
	

	 
	
	  
	    
	    
	  

	
	
	  
	    
	    
	    
	  

	
	
	  
	    
	    
	    
	  

	
	
	  
	    
	    
	    
	    
	    
	  

	
	
	  
	    
	  

	
	
	  
	    
	    
	  
      
  






















  

  

  

  

  

  

  

  

  







  

  

  

  

  

  

  

  






  

  

  

  

  

  

  

  






  

  






  

  

  






  

  






  

  

  

  

  

  






  

  

  

  

  

  








/* Structure to transport application-defined values with signals.  */



 

typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
	int _pad[((64 / sizeof (int)) - 4)];

	/* When SIGEV_SIGNAL and SIGEV_THREAD_ID set, LWP ID of the
	   thread to receive the signal.  */
	__pid_t _tid;

	struct
	  {
	    void (*_function) (sigval_t);	/* Function to start.  */
	    void *_attribute;			/* Really pthread_attr_t.  */
	  } _sigev_thread;
      } _sigev_un;
  } sigevent_t;

/* POSIX names to access some of the members.  */



/* `sigev_notify' values.  */
enum
{
  SIGEV_SIGNAL = 0,		/* Notify via signal.  */

  SIGEV_NONE,			/* Other notification: meaningless.  */

  SIGEV_THREAD,			/* Deliver via thread creation.  */


  SIGEV_THREAD_ID = 4		/* Send signal to specific thread.  */

};


#line 40 "systems/redhat/usr/include/netdb.h" 2

#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 42 "systems/redhat/usr/include/netdb.h" 2

#line 1 "systems/redhat/usr/include/bits/netdb.h" 1
/* Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Description of data base entry for a single network.  NOTE: here a
   poor assumption is made.  The network number is expected to fit
   into an unsigned long int variable.  */
struct netent
{
  char *n_name;			/* Official name of network.  */
  char **n_aliases;		/* Alias list.  */
  int n_addrtype;		/* Net address type.  */
  uint32_t n_net;		/* Network number.  */
};
#line 45 "systems/redhat/usr/include/netdb.h" 2

/* Absolute file name for network data base files.  */











/* Error status for non-reentrant lookup functions.
   We use a macro to access always the thread-specific `h_errno' variable.  */


/* Function to get address of global `h_errno' variable.  */
extern int *__h_errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* Possible values left in `h_errno'.  */











/* Highest reserved Internet port number.  */



/* Scope delimiter for getaddrinfo(), getnameinfo().  */



/* Print error indicated by `h_errno' variable on standard error.  STR
   if non-null is printed before the error string.  */
extern void herror (const char *__str) __attribute__ ((__nothrow__));

/* Return string associated with error ERR_NUM.  */
extern const char *hstrerror (int __err_num) __attribute__ ((__nothrow__));

/* Description of data base entry for a single host.  */
struct hostent
{
  char *h_name;			/* Official name of host.  */
  char **h_aliases;		/* Alias list.  */
  int h_addrtype;		/* Host address type.  */
  int h_length;			/* Length of address.  */
  char **h_addr_list;		/* List of addresses from name server.  */



};

/* Open host data base files and mark them as staying open even after
   a later search if STAY_OPEN is non-zero.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void sethostent (int __stay_open);

/* Close host data base files and clear `stay open' flag.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endhostent (void);

/* Get next entry from host data base file.  Open data base if
   necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct hostent *gethostent (void);

/* Return entry from host data base which address match ADDR with
   length LEN and type TYPE.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct hostent *gethostbyaddr (const void *__addr, __socklen_t __len,
				      int __type);

/* Return entry from host data base for host with NAME.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct hostent *gethostbyname (const char *__name);


/* Return entry from host data base for host with NAME.  AF must be
   set to the address type which is `AF_INET' for IPv4 or `AF_INET6'
   for IPv6.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct hostent *gethostbyname2 (const char *__name, int __af);

/* Reentrant versions of the functions above.  The additional
   arguments specify a buffer of BUFLEN starting at BUF.  The last
   argument is a pointer to a variable which gets the value which
   would be stored in the global variable `herrno' by the
   non-reentrant functions.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int gethostent_r (struct hostent *__restrict __result_buf,
			 char *__restrict __buf, size_t __buflen,
			 struct hostent **__restrict __result,
			 int *__restrict __h_errnop);

extern int gethostbyaddr_r (const void *__restrict __addr, __socklen_t __len,
			    int __type,
			    struct hostent *__restrict __result_buf,
			    char *__restrict __buf, size_t __buflen,
			    struct hostent **__restrict __result,
			    int *__restrict __h_errnop);

extern int gethostbyname_r (const char *__restrict __name,
			    struct hostent *__restrict __result_buf,
			    char *__restrict __buf, size_t __buflen,
			    struct hostent **__restrict __result,
			    int *__restrict __h_errnop);

extern int gethostbyname2_r (const char *__restrict __name, int __af,
			     struct hostent *__restrict __result_buf,
			     char *__restrict __buf, size_t __buflen,
			     struct hostent **__restrict __result,
			     int *__restrict __h_errnop);

/* Open network data base files and mark them as staying open even
   after a later search if STAY_OPEN is non-zero.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void setnetent (int __stay_open);

/* Close network data base files and clear `stay open' flag.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endnetent (void);

/* Get next entry from network data base file.  Open data base if
   necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct netent *getnetent (void);

/* Return entry from network data base which address match NET and
   type TYPE.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct netent *getnetbyaddr (uint32_t __net, int __type);

/* Return entry from network data base for network with NAME.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct netent *getnetbyname (const char *__name);


/* Reentrant versions of the functions above.  The additional
   arguments specify a buffer of BUFLEN starting at BUF.  The last
   argument is a pointer to a variable which gets the value which
   would be stored in the global variable `herrno' by the
   non-reentrant functions.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int getnetent_r (struct netent *__restrict __result_buf,
			char *__restrict __buf, size_t __buflen,
			struct netent **__restrict __result,
			int *__restrict __h_errnop);

extern int getnetbyaddr_r (uint32_t __net, int __type,
			   struct netent *__restrict __result_buf,
			   char *__restrict __buf, size_t __buflen,
			   struct netent **__restrict __result,
			   int *__restrict __h_errnop);

extern int getnetbyname_r (const char *__restrict __name,
			   struct netent *__restrict __result_buf,
			   char *__restrict __buf, size_t __buflen,
			   struct netent **__restrict __result,
			   int *__restrict __h_errnop);

/* Description of data base entry for a single service.  */
struct servent
{
  char *s_name;			/* Official service name.  */
  char **s_aliases;		/* Alias list.  */
  int s_port;			/* Port number.  */
  char *s_proto;		/* Protocol to use.  */
};

/* Open service data base files and mark them as staying open even
   after a later search if STAY_OPEN is non-zero.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void setservent (int __stay_open);

/* Close service data base files and clear `stay open' flag.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endservent (void);

/* Get next entry from service data base file.  Open data base if
   necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct servent *getservent (void);

/* Return entry from network data base for network with NAME and
   protocol PROTO.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct servent *getservbyname (const char *__name,
				      const char *__proto);

/* Return entry from service data base which matches port PORT and
   protocol PROTO.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct servent *getservbyport (int __port, const char *__proto);



/* Reentrant versions of the functions above.  The additional
   arguments specify a buffer of BUFLEN starting at BUF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int getservent_r (struct servent *__restrict __result_buf,
			 char *__restrict __buf, size_t __buflen,
			 struct servent **__restrict __result);

extern int getservbyname_r (const char *__restrict __name,
			    const char *__restrict __proto,
			    struct servent *__restrict __result_buf,
			    char *__restrict __buf, size_t __buflen,
			    struct servent **__restrict __result);

extern int getservbyport_r (int __port, const char *__restrict __proto,
			    struct servent *__restrict __result_buf,
			    char *__restrict __buf, size_t __buflen,
			    struct servent **__restrict __result);

/* Description of data base entry for a single service.  */
struct protoent
{
  char *p_name;			/* Official protocol name.  */
  char **p_aliases;		/* Alias list.  */
  int p_proto;			/* Protocol number.  */
};

/* Open protocol data base files and mark them as staying open even
   after a later search if STAY_OPEN is non-zero.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void setprotoent (int __stay_open);

/* Close protocol data base files and clear `stay open' flag.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endprotoent (void);

/* Get next entry from protocol data base file.  Open data base if
   necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct protoent *getprotoent (void);

/* Return entry from protocol data base for network with NAME.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct protoent *getprotobyname (const char *__name);

/* Return entry from protocol data base which number is PROTO.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct protoent *getprotobynumber (int __proto);



/* Reentrant versions of the functions above.  The additional
   arguments specify a buffer of BUFLEN starting at BUF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int getprotoent_r (struct protoent *__restrict __result_buf,
			  char *__restrict __buf, size_t __buflen,
			  struct protoent **__restrict __result);

extern int getprotobyname_r (const char *__restrict __name,
			     struct protoent *__restrict __result_buf,
			     char *__restrict __buf, size_t __buflen,
			     struct protoent **__restrict __result);

extern int getprotobynumber_r (int __proto,
			       struct protoent *__restrict __result_buf,
			       char *__restrict __buf, size_t __buflen,
			       struct protoent **__restrict __result);


/* Establish network group NETGROUP for enumeration.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int setnetgrent (const char *__netgroup);

/* Free all space allocated by previous `setnetgrent' call.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern void endnetgrent (void);

/* Get next member of netgroup established by last `setnetgrent' call
   and return pointers to elements in HOSTP, USERP, and DOMAINP.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getnetgrent (char **__restrict __hostp,
			char **__restrict __userp,
			char **__restrict __domainp);


/* Test whether NETGROUP contains the triple (HOST,USER,DOMAIN).

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int innetgr (const char *__netgroup, const char *__host,
		    const char *__user, const char *__domain);

/* Reentrant version of `getnetgrent' where result is placed in BUFFER.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getnetgrent_r (char **__restrict __hostp,
			  char **__restrict __userp,
			  char **__restrict __domainp,
			  char *__restrict __buffer, size_t __buflen);


/* Call `rshd' at port RPORT on remote machine *AHOST to execute CMD.
   The local user is LOCUSER, on the remote machine the command is
   executed as REMUSER.  In *FD2P the descriptor to the socket for the
   connection is returned.  The caller must have the right to use a
   reserved port.  When the function returns *AHOST contains the
   official host name.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rcmd (char **__restrict __ahost, unsigned short int __rport,
		 const char *__restrict __locuser,
		 const char *__restrict __remuser,
		 const char *__restrict __cmd, int *__restrict __fd2p);

/* This is the equivalent function where the protocol can be selected
   and which therefore can be used for IPv6.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,
		    const char *__restrict __locuser,
		    const char *__restrict __remuser,
		    const char *__restrict __cmd, int *__restrict __fd2p,
		    sa_family_t __af);

/* Call `rexecd' at port RPORT on remote machine *AHOST to execute
   CMD.  The process runs at the remote machine using the ID of user
   NAME whose cleartext password is PASSWD.  In *FD2P the descriptor
   to the socket for the connection is returned.  When the function
   returns *AHOST contains the official host name.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rexec (char **__restrict __ahost, int __rport,
		  const char *__restrict __name,
		  const char *__restrict __pass,
		  const char *__restrict __cmd, int *__restrict __fd2p);

/* This is the equivalent function where the protocol can be selected
   and which therefore can be used for IPv6.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rexec_af (char **__restrict __ahost, int __rport,
		     const char *__restrict __name,
		     const char *__restrict __pass,
		     const char *__restrict __cmd, int *__restrict __fd2p,
		     sa_family_t __af);

/* Check whether user REMUSER on system RHOST is allowed to login as LOCUSER.
   If SUSER is not zero the user tries to become superuser.  Return 0 if
   it is possible.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int ruserok (const char *__rhost, int __suser,
		    const char *__remuser, const char *__locuser);

/* This is the equivalent function where the protocol can be selected
   and which therefore can be used for IPv6.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int ruserok_af (const char *__rhost, int __suser,
		       const char *__remuser, const char *__locuser,
		       sa_family_t __af);

/* Check whether user REMUSER on system indicated by IPv4 address
   RADDR is allowed to login as LOCUSER.  Non-IPv4 (e.g., IPv6) are
   not supported.  If SUSER is not zero the user tries to become
   superuser.  Return 0 if it is possible.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int iruserok (uint32_t __raddr, int __suser,
		     const char *__remuser, const char *__locuser);

/* This is the equivalent function where the pfamiliy if the address
   pointed to by RADDR is determined by the value of AF.  It therefore
   can be used for IPv6

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int iruserok_af (const void *__raddr, int __suser,
			const char *__remuser, const char *__locuser,
			sa_family_t __af);

/* Try to allocate reserved port, returning a descriptor for a socket opened
   at this port or -1 if unsuccessful.  The search for an available port
   will start at ALPORT and continues with lower numbers.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rresvport (int *__alport);

/* This is the equivalent function where the protocol can be selected
   and which therefore can be used for IPv6.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int rresvport_af (int *__alport, sa_family_t __af);

/* Extension from POSIX.1g.  */

/* Structure to contain information about address of a service provider.  */
struct addrinfo
{
  int ai_flags;			/* Input flags.  */
  int ai_family;		/* Protocol family for socket.  */
  int ai_socktype;		/* Socket type.  */
  int ai_protocol;		/* Protocol for socket.  */
  socklen_t ai_addrlen;		/* Length of socket address.  */
  struct sockaddr *ai_addr;	/* Socket address for socket.  */
  char *ai_canonname;		/* Canonical name for service location.  */
  struct addrinfo *ai_next;	/* Pointer to next in list.  */
};


/* Structure used as control block for asynchronous lookup.  */
struct gaicb
{
  const char *ar_name;		/* Name to look up.  */
  const char *ar_service;	/* Service name.  */
  const struct addrinfo *ar_request; /* Additional request specification.  */
  struct addrinfo *ar_result;	/* Pointer to result.  */
  /* The following are internal elements.  */
  int __return;
  int __unused[5];
};

/* Lookup mode.  */



/* Possible values for `ai_flags' field in `addrinfo' structure.  */














/* Error values for `getaddrinfo' function.  */


































/* Translate name of a service location and/or a service name to set of
   socket addresses.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getaddrinfo (const char *__restrict __name,
			const char *__restrict __service,
			const struct addrinfo *__restrict __req,
			struct addrinfo **__restrict __pai);

/* Free `addrinfo' structure AI including associated storage.  */
extern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__));

/* Convert error return from getaddrinfo() to a string.  */
extern const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__));

/* Translate a socket address to a location and service name.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getnameinfo (const struct sockaddr *__restrict __sa,
			socklen_t __salen, char *__restrict __host,
			socklen_t __hostlen, char *__restrict __serv,
			socklen_t __servlen, unsigned int __flags);


/* Enqueue ENT requests from the LIST.  If MODE is GAI_WAIT wait until all
   requests are handled.  If WAIT is GAI_NOWAIT return immediately after
   queueing the requests and signal completion according to SIG.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],
			  int __ent, struct sigevent *__restrict __sig);

/* Suspend execution of the thread until at least one of the ENT requests
   in LIST is handled.  If TIMEOUT is not a null pointer it specifies the
   longest time the function keeps waiting before returning with an error.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int gai_suspend (const struct gaicb *const __list[], int __ent,
			const struct timespec *__timeout);

/* Get the error status of the request REQ.  */
extern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__));

/* Cancel the requests associated with GAICBP.  */
extern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__));




#line 22 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/setjmp.h" 1
/* Copyright (C) 1991-1999,2001,2002,2007,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.13 Nonlocal jumps	<setjmp.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/setjmp.h" 2



#line 1 "systems/redhat/usr/include/bits/setjmp.h" 1
/* Copyright (C) 2001,2002,2003,2005,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/* Define the machine-dependent type `jmp_buf'.  x86-64 version.  */






#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 29 "systems/redhat/usr/include/bits/setjmp.h" 2



typedef long int __jmp_buf[8];
 



#line 32 "systems/redhat/usr/include/setjmp.h" 2
#line 1 "systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
    
  


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 33 "systems/redhat/usr/include/setjmp.h" 2


/* Calling environment, plus possibly a saved signal mask.  */
struct __jmp_buf_tag
  {
    /* NOTE: The machine-dependent definitions of `__sigsetjmp'
       assume that a `jmp_buf' begins with a `__jmp_buf' and that
       `__mask_was_saved' follows it.  Do not move these members
       or add others before it.  */
    __jmp_buf __jmpbuf;		/* Calling environment.  */
    int __mask_was_saved;	/* Saved the signal mask?  */
    __sigset_t __saved_mask;	/* Saved signal mask.  */
  };




typedef struct __jmp_buf_tag jmp_buf[1];

/* Store the calling environment in ENV, also saving the signal mask.
   Return 0.  */
extern int setjmp (jmp_buf __env) __attribute__ ((__nothrow__));



/* Store the calling environment in ENV, also saving the
   signal mask if SAVEMASK is nonzero.  Return 0.
   This is the internal name for `sigsetjmp'.  */
extern int __sigsetjmp (struct __jmp_buf_tag __env[1], int __savemask) __attribute__ ((__nothrow__));


/* Store the calling environment in ENV, not saving the signal mask.
   Return 0.  */
extern int _setjmp (struct __jmp_buf_tag __env[1]) __attribute__ ((__nothrow__));

/* Do not save the signal mask.  This is equivalent to the `_setjmp'
   BSD function.  */

 






/* Jump to the environment saved in ENV, making the
   `setjmp' call there return VAL, or 1 if VAL is 0.  */
extern void longjmp (struct __jmp_buf_tag __env[1], int __val)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));




/* Same.  Usually `_longjmp' is used with `_setjmp', which does not save
   the signal mask.  But it is how ENV was saved that determines whether
   `longjmp' restores the mask; `_longjmp' is just an alias.  */
extern void _longjmp (struct __jmp_buf_tag __env[1], int __val)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


/* Use the same type for `jmp_buf' and `sigjmp_buf'.
   The `__mask_was_saved' flag determines whether
   or not `longjmp' will restore the signal mask.  */
typedef struct __jmp_buf_tag sigjmp_buf[1];

/* Store the calling environment in ENV, also saving the
   signal mask if SAVEMASK is nonzero.  Return 0.  */


/* Jump to the environment saved in ENV, making the
   sigsetjmp call there return VAL, or 1 if VAL is 0.
   Restore the signal mask if that sigsetjmp call saved it.
   This is just an alias `longjmp'.  */
extern void siglongjmp (sigjmp_buf __env, int __val)
     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));

/* Define helper functions to catch unsafe code.  */






#line 23 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/signal.h" 1
/* Copyright (C) 1991-2004, 2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.14 Signal handling <signal.h>
 */





#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 31 "systems/redhat/usr/include/signal.h" 2



#line 1 "systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
    
  


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */







/* Return a mask that includes the bit for SIG only.  */



/* Return the word index for SIG.  */















/* The POSIX does not specify for handling the whole signal set in one
   command.  This is often wanted and so we define three more functions
   here.  */



























/* These functions needn't check for a bogus signal number -- error
   checking is done in the non __ versions.  */

extern int __sigismember (const __sigset_t *, int);
extern int __sigaddset (__sigset_t *, int);
extern int __sigdelset (__sigset_t *, int);


















#line 35 "systems/redhat/usr/include/signal.h" 2

/* An integral type that can be modified atomically, without the
   possibility of a signal arriving in the middle of the operation.  */




typedef __sig_atomic_t sig_atomic_t;












#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 59 "systems/redhat/usr/include/signal.h" 2
#line 1 "systems/redhat/usr/include/bits/signum.h" 1
/* Signal number definitions.  Linux version.
   Copyright (C) 1995,1996,1997,1998,1999,2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


/* Fake signal functions.  */







/* Signals.  */









































/* These are the hard limits of the kernel.  These values should not be
   used directly at user level.  */




#line 60 "systems/redhat/usr/include/signal.h" 2














/* We need `struct timespec' later on.  */

#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 78 "systems/redhat/usr/include/signal.h" 2

/* Get the `siginfo_t' type plus the needed symbols.  */
#line 1 "systems/redhat/usr/include/bits/siginfo.h" 1
/* siginfo_t, sigevent and constants.  Linux version.
   Copyright (C) 1997-2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 27 "systems/redhat/usr/include/bits/siginfo.h" 2






  
    
    
  







 

typedef struct siginfo
  {
    int si_signo;		/* Signal number.  */
    int si_errno;		/* If non-zero, an errno value associated with
				   this signal, as defined in <errno.h>.  */
    int si_code;		/* Signal code.  */

    union
      {
	int _pad[((128 / sizeof (int)) - 4)];

	 /* kill().  */
	struct
	  {
	    __pid_t si_pid;	/* Sending process ID.  */
	    __uid_t si_uid;	/* Real user ID of sending process.  */
	  } _kill;

	/* POSIX.1b timers.  */
	struct
	  {
	    int si_tid;		/* Timer ID.  */
	    int si_overrun;	/* Overrun count.  */
	    sigval_t si_sigval;	/* Signal value.  */
	  } _timer;

	/* POSIX.1b signals.  */
	struct
	  {
	    __pid_t si_pid;	/* Sending process ID.  */
	    __uid_t si_uid;	/* Real user ID of sending process.  */
	    sigval_t si_sigval;	/* Signal value.  */
	  } _rt;

	/* SIGCHLD.  */
	struct
	  {
	    __pid_t si_pid;	/* Which child.  */
	    __uid_t si_uid;	/* Real user ID of sending process.  */
	    int si_status;	/* Exit value or signal.  */
	    __clock_t si_utime;
	    __clock_t si_stime;
	  } _sigchld;

	/* SIGILL, SIGFPE, SIGSEGV, SIGBUS.  */
	struct
	  {
	    void *si_addr;	/* Faulting insn/memory ref.  */
	  } _sigfault;

	/* SIGPOLL.  */
	struct
	  {
	    long int si_band;	/* Band event for SIGPOLL.  */
	    int si_fd;
	  } _sigpoll;
      } _sifields;
  } siginfo_t;


/* X/Open requires some more fields with fixed names.  */















/* Values for `si_code'.  Positive values are reserved for kernel-generated
   signals.  */
enum
{
  SI_ASYNCNL = -60,		/* Sent by asynch name lookup completion.  */

  SI_TKILL = -6,		/* Sent by tkill.  */

  SI_SIGIO,			/* Sent by queued SIGIO. */

  SI_ASYNCIO,			/* Sent by AIO completion.  */

  SI_MESGQ,			/* Sent by real time mesq state change.  */

  SI_TIMER,			/* Sent by timer expiration.  */

  SI_QUEUE,			/* Sent by sigqueue.  */

  SI_USER,			/* Sent by kill, sigsend, raise.  */

  SI_KERNEL = 0x80		/* Send by kernel.  */

};


/* `si_code' values for SIGILL signal.  */
enum
{
  ILL_ILLOPC = 1,		/* Illegal opcode.  */

  ILL_ILLOPN,			/* Illegal operand.  */

  ILL_ILLADR,			/* Illegal addressing mode.  */

  ILL_ILLTRP,			/* Illegal trap. */

  ILL_PRVOPC,			/* Privileged opcode.  */

  ILL_PRVREG,			/* Privileged register.  */

  ILL_COPROC,			/* Coprocessor error.  */

  ILL_BADSTK			/* Internal stack error.  */

};

/* `si_code' values for SIGFPE signal.  */
enum
{
  FPE_INTDIV = 1,		/* Integer divide by zero.  */

  FPE_INTOVF,			/* Integer overflow.  */

  FPE_FLTDIV,			/* Floating point divide by zero.  */

  FPE_FLTOVF,			/* Floating point overflow.  */

  FPE_FLTUND,			/* Floating point underflow.  */

  FPE_FLTRES,			/* Floating point inexact result.  */

  FPE_FLTINV,			/* Floating point invalid operation.  */

  FPE_FLTSUB			/* Subscript out of range.  */

};

/* `si_code' values for SIGSEGV signal.  */
enum
{
  SEGV_MAPERR = 1,		/* Address not mapped to object.  */

  SEGV_ACCERR			/* Invalid permissions for mapped object.  */

};

/* `si_code' values for SIGBUS signal.  */
enum
{
  BUS_ADRALN = 1,		/* Invalid address alignment.  */

  BUS_ADRERR,			/* Non-existant physical address.  */

  BUS_OBJERR			/* Object specific hardware error.  */

};

/* `si_code' values for SIGTRAP signal.  */
enum
{
  TRAP_BRKPT = 1,		/* Process breakpoint.  */

  TRAP_TRACE			/* Process trace trap.  */

};

/* `si_code' values for SIGCHLD signal.  */
enum
{
  CLD_EXITED = 1,		/* Child has exited.  */

  CLD_KILLED,			/* Child was killed.  */

  CLD_DUMPED,			/* Child terminated abnormally.  */

  CLD_TRAPPED,			/* Traced child has trapped.  */

  CLD_STOPPED,			/* Child has stopped.  */

  CLD_CONTINUED			/* Stopped child has continued.  */

};

/* `si_code' values for SIGPOLL signal.  */
enum
{
  POLL_IN = 1,			/* Data input available.  */

  POLL_OUT,			/* Output buffers available.  */

  POLL_MSG,			/* Input message available.   */

  POLL_ERR,			/* I/O error.  */

  POLL_PRI,			/* High priority input available.  */

  POLL_HUP			/* Device disconnected.  */

};










 


  
    
    
    

    
      
	

	

	

	
	  
	    
	    
	  
      
  








  

  

  


  




#line 81 "systems/redhat/usr/include/signal.h" 2

/* Type of a signal handler.  */
typedef void (*__sighandler_t) (int);

/* The X/Open definition of `signal' specifies the SVID semantic.  Use
   the additional function `sysv_signal' when X/Open compatibility is
   requested.  */
extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__));

extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__));

/* Set the handler for the signal SIG to HANDLER, returning the old
   handler, or SIG_ERR on error.
   By default `signal' has the BSD semantic.  */


extern __sighandler_t signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__));
 


				      
				      
 





/* The X/Open definition of `signal' conflicts with the BSD version.
   So they defined another function `bsd_signal'.  */
extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__));

/* Send signal SIG to process number PID.  If PID is zero,
   send SIG to all processes in the current process's process group.
   If PID is < -1, send SIG to all processes in process group - PID.  */

extern int kill (__pid_t __pid, int __sig) __attribute__ ((__nothrow__));


/* Send SIG to all processes in process group PGRP.
   If PGRP is zero, send SIG to all processes in
   the current process's process group.  */
extern int killpg (__pid_t __pgrp, int __sig) __attribute__ ((__nothrow__));


/* Raise signal SIG, i.e., send SIG to yourself.  */
extern int raise (int __sig) __attribute__ ((__nothrow__));



/* SVID names for the same things.  */
extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__));
extern int gsignal (int __sig) __attribute__ ((__nothrow__));


/* Print a message describing the meaning of the given signal number.  */
extern void psignal (int __sig, const char *__s);


/* Print a message describing the meaning of the given signal information.  */
extern void psiginfo (const siginfo_t *__pinfo, const char *__s);

/* The `sigpause' function has two different interfaces.  The original
   BSD definition defines the argument as a mask of the signal, while
   the more modern interface in X/Open defines it as the signal
   number.  We go with the BSD version unless the user explicitly
   selects the X/Open version.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int __sigpause (int __sig_or_mask, int __is_sig);





 

extern int sigpause (int __sig) __asm__ ("__xpg_sigpause");
 





/* None of the following functions should be used anymore.  They are here
   only for compatibility.  A single word (`int') is not guaranteed to be
   enough to hold a complete signal mask and therefore these functions
   simply do not work in many situations.  Use `sigprocmask' instead.  */

/* Compute mask for signal SIG.  */


/* Block signals in MASK, returning the old mask.  */
extern int sigblock (int __mask) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));

/* Set the mask of blocked signals to MASK, returning the old mask.  */
extern int sigsetmask (int __mask) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));

/* Return currently selected signal mask.  */
extern int siggetmask (void) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));





typedef __sighandler_t sighandler_t;

/* 4.4 BSD uses the name `sig_t' for this.  */

typedef __sighandler_t sig_t;


/* Clear all signals from SET.  */
extern int sigemptyset (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Set all signals in SET.  */
extern int sigfillset (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Add SIGNO to SET.  */
extern int sigaddset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Remove SIGNO from SET.  */
extern int sigdelset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return 1 if SIGNO is in SET, 0 if not.  */
extern int sigismember (const sigset_t *__set, int __signo)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Return non-empty value is SET is not empty.  */
extern int sigisemptyset (const sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Build new signal set by combining the two inputs set using logical AND.  */
extern int sigandset (sigset_t *__set, const sigset_t *__left,
		      const sigset_t *__right) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));

/* Build new signal set by combining the two inputs set using logical OR.  */
extern int sigorset (sigset_t *__set, const sigset_t *__left,
		     const sigset_t *__right) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));

/* Get the system-specific definitions of `struct sigaction'
   and the `SA_*' and `SIG_*'. constants.  */
#line 1 "systems/redhat/usr/include/bits/sigaction.h" 1
/* The proper definitions for Linux's sigaction.
   Copyright (C) 1993-1999, 2000, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Structure describing the action to be taken when a signal arrives.  */
struct sigaction
  {
    /* Signal handler.  */

    union
      {
	/* Used if SA_SIGINFO is not set.  */
	__sighandler_t sa_handler;
	/* Used if SA_SIGINFO is set.  */
	void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;


     

    /* Additional set of signals to be blocked.  */
    __sigset_t sa_mask;

    /* Special flags.  */
    int sa_flags;

    /* Restore handler.  */
    void (*sa_restorer) (void);
  };

/* Bits in `sa_flags'.  */














/* Some aliases for the SA_ constants.  */




/* Values for the HOW argument to `sigprocmask'.  */



#line 254 "systems/redhat/usr/include/signal.h" 2

/* Get and/or change the set of blocked signals.  */
extern int sigprocmask (int __how, const sigset_t *__restrict __set,
			sigset_t *__restrict __oset) __attribute__ ((__nothrow__));

/* Change the set of blocked signals to SET,
   wait until a signal arrives, and restore the set of blocked signals.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int sigsuspend (const sigset_t *__set) __attribute__ ((__nonnull__ (1)));

/* Get and/or set the action for signal SIG.  */
extern int sigaction (int __sig, const struct sigaction *__restrict __act,
		      struct sigaction *__restrict __oact) __attribute__ ((__nothrow__));

/* Put in SET all signals that are blocked and waiting to be delivered.  */
extern int sigpending (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Select any of pending signals from SET or wait for any to arrive.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int sigwait (const sigset_t *__restrict __set, int *__restrict __sig)
     __attribute__ ((__nonnull__ (1, 2)));


/* Select any of pending signals from SET and place information in INFO.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int sigwaitinfo (const sigset_t *__restrict __set,
			siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));

/* Select any of pending signals from SET and place information in INFO.
   Wait the time specified by TIMEOUT if no signal is pending.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int sigtimedwait (const sigset_t *__restrict __set,
			 siginfo_t *__restrict __info,
			 const struct timespec *__restrict __timeout)
     __attribute__ ((__nonnull__ (1)));

/* Send signal SIG to the process PID.  Associate data in VAL with the
   signal.  */
extern int sigqueue (__pid_t __pid, int __sig, const union sigval __val)
     __attribute__ ((__nothrow__));



/* Names of the signals.  This variable exists only for compatibility.
   Use `strsignal' instead (see <string.h>).  */
extern const char *const _sys_siglist[65];
extern const char *const sys_siglist[65];

/* Structure passed to `sigvec'.  */
struct sigvec
  {
    __sighandler_t sv_handler;	/* Signal handler.  */
    int sv_mask;		/* Mask of signals to be blocked.  */

    int sv_flags;		/* Flags (see below).  */

  };

/* Bits in `sv_flags'.  */





/* If VEC is non-NULL, set the handler for SIG to the `sv_handler' member
   of VEC.  The signals in `sv_mask' will be blocked while the handler runs.
   If the SV_RESETHAND bit is set in `sv_flags', the handler for SIG will be
   reset to SIG_DFL before `sv_handler' is entered.  If OVEC is non-NULL,
   it is filled in with the old information for SIG.  */
extern int sigvec (int __sig, const struct sigvec *__vec,
		   struct sigvec *__ovec) __attribute__ ((__nothrow__));


/* Get machine-dependent `struct sigcontext' and signal subcodes.  */
#line 1 "systems/redhat/usr/include/bits/sigcontext.h" 1
/* Copyright (C) 2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 28 "systems/redhat/usr/include/bits/sigcontext.h" 2

struct _fpreg
{
  unsigned short significand[4];
  unsigned short exponent;
};

struct _fpxreg
{
  unsigned short significand[4];
  unsigned short exponent;
  unsigned short padding[3];
};

struct _xmmreg
{
  __uint32_t	element[4];
};






  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  











  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


 struct _fpstate
{
  /* FPU environment matching the 64-bit FXSAVE layout.  */
  __uint16_t		cwd;
  __uint16_t		swd;
  __uint16_t		ftw;
  __uint16_t		fop;
  __uint64_t		rip;
  __uint64_t		rdp;
  __uint32_t		mxcsr;
  __uint32_t		mxcr_mask;
  struct _fpxreg	_st[8];
  struct _xmmreg	_xmm[16];
  __uint32_t		padding[24];
};

struct sigcontext
{
  unsigned long r8;
  unsigned long r9;
  unsigned long r10;
  unsigned long r11;
  unsigned long r12;
  unsigned long r13;
  unsigned long r14;
  unsigned long r15;
  unsigned long rdi;
  unsigned long rsi;
  unsigned long rbp;
  unsigned long rbx;
  unsigned long rdx;
  unsigned long rax;
  unsigned long rcx;
  unsigned long rsp;
  unsigned long rip;
  unsigned long eflags;
  unsigned short cs;
  unsigned short gs;
  unsigned short fs;
  unsigned short __pad0;
  unsigned long err;
  unsigned long trapno;
  unsigned long oldmask;
  unsigned long cr2;
  struct _fpstate * fpstate;
  unsigned long __reserved1 [8];
};



#line 341 "systems/redhat/usr/include/signal.h" 2

/* Restore the state saved in SCP.  */
extern int sigreturn (struct sigcontext *__scp) __attribute__ ((__nothrow__));




#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 351 "systems/redhat/usr/include/signal.h" 2

/* If INTERRUPT is nonzero, make signal SIG interrupt system calls
   (causing them to fail with EINTR); if INTERRUPT is zero, make system
   calls be restarted after signal SIG.  */
extern int siginterrupt (int __sig, int __interrupt) __attribute__ ((__nothrow__));

#line 1 "systems/redhat/usr/include/bits/sigstack.h" 1
/* sigstack, sigaltstack definitions.
   Copyright (C) 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Structure describing a signal stack (obsolete).  */
struct sigstack
  {
    void *ss_sp;		/* Signal stack pointer.  */
    int ss_onstack;		/* Nonzero if executing on this stack.  */
  };


/* Possible values for `ss_flags.'.  */
enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};

/* Minimum stack size for a signal handler.  */


/* System default stack size.  */



/* Alternate, preferred interface.  */
typedef struct sigaltstack
  {
    void *ss_sp;
    int ss_flags;
    size_t ss_size;
  } stack_t;
#line 358 "systems/redhat/usr/include/signal.h" 2

/* This will define `ucontext_t' and `mcontext_t'.  */
#line 1 "systems/redhat/usr/include/sys/ucontext.h" 1
/* Copyright (C) 2001, 2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/sys/ucontext.h" 2
#line 1 "systems/redhat/usr/include/signal.h" 1
/* Copyright (C) 1991-2004, 2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.14 Signal handling <signal.h>
 */




























































     


     







     
 


				      
				      
 








     





















     
























 


 















































     







		      



		     







			










		      










     







			







			 
			 
     




     










  
    
    

    

  













		   



























     




			



































#line 25 "systems/redhat/usr/include/sys/ucontext.h" 2
#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 26 "systems/redhat/usr/include/sys/ucontext.h" 2

/* We need the signal context definitions even if they are not used
   included in <signal.h>.  */
#line 1 "systems/redhat/usr/include/bits/sigcontext.h" 1
/* Copyright (C) 2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */











  
  




  
  
  




  







  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  











  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


 

  
  
  
  
  
  
  
  
  
  
  
  




  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  




#line 30 "systems/redhat/usr/include/sys/ucontext.h" 2


/* Type for general register.  */
typedef long int greg_t;

/* Number of general registers.  */


/* Container for all general registers.  */
typedef greg_t gregset_t[23];


/* Number of each register in the `gregset_t' array.  */
enum
{
  REG_R8 = 0,

  REG_R9,

  REG_R10,

  REG_R11,

  REG_R12,

  REG_R13,

  REG_R14,

  REG_R15,

  REG_RDI,

  REG_RSI,

  REG_RBP,

  REG_RBX,

  REG_RDX,

  REG_RAX,

  REG_RCX,

  REG_RSP,

  REG_RIP,

  REG_EFL,

  REG_CSGSFS,		/* Actually short cs, gs, fs, __pad0.  */

  REG_ERR,

  REG_TRAPNO,

  REG_OLDMASK,

  REG_CR2

};

struct _libc_fpxreg
{
  unsigned short int significand[4];
  unsigned short int exponent;
  unsigned short int padding[3];
};

struct _libc_xmmreg
{
  __uint32_t	element[4];
};

struct _libc_fpstate
{
  /* 64-bit FXSAVE format.  */
  __uint16_t		cwd;
  __uint16_t		swd;
  __uint16_t		ftw;
  __uint16_t		fop;
  __uint64_t		rip;
  __uint64_t		rdp;
  __uint32_t		mxcsr;
  __uint32_t		mxcr_mask;
  struct _libc_fpxreg	_st[8];
  struct _libc_xmmreg	_xmm[16];
  __uint32_t		padding[24];
};

/* Structure to describe FPU registers.  */
typedef struct _libc_fpstate *fpregset_t;

/* Context to describe whole processor state.  */
typedef struct
  {
    gregset_t gregs;
    /* Note that fpregs is a pointer.  */
    fpregset_t fpregs;
    unsigned long __reserved1 [8];
} mcontext_t;

/* Userlevel context.  */
typedef struct ucontext
  {
    unsigned long int uc_flags;
    struct ucontext *uc_link;
    stack_t uc_stack;
    mcontext_t uc_mcontext;
    __sigset_t uc_sigmask;
    struct _libc_fpstate __fpregs_mem;
  } ucontext_t;

 












  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  

  






  
  




  
  
  
  
  
  
  
  
  







  
    
    

    
    
    
  



  
    
    
    
    
    
    
  



#line 361 "systems/redhat/usr/include/signal.h" 2

/* Run signals handlers on the stack specified by SS (if not NULL).
   If OSS is not NULL, it is filled in with the old signal stack status.
   This interface is obsolete and on many platform not implemented.  */
extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)
     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));

/* Alternate signal handler stack interface.
   This interface should always be preferred over `sigstack'.  */
extern int sigaltstack (const struct sigaltstack *__restrict __ss,
			struct sigaltstack *__restrict __oss) __attribute__ ((__nothrow__));



/* Simplified interface for signal management.  */

/* Add SIG to the calling process' signal mask.  */
extern int sighold (int __sig) __attribute__ ((__nothrow__));

/* Remove SIG from the calling process' signal mask.  */
extern int sigrelse (int __sig) __attribute__ ((__nothrow__));

/* Set the disposition of SIG to SIG_IGN.  */
extern int sigignore (int __sig) __attribute__ ((__nothrow__));

/* Set the disposition of SIG.  */
extern __sighandler_t sigset (int __sig, __sighandler_t __disp) __attribute__ ((__nothrow__));


/* Some of the functions for handling signals in threaded programs must
   be defined here.  */
#line 1 "systems/redhat/usr/include/bits/pthreadtypes.h" 1
/* Copyright (C) 2002,2003,2004,2005,2006,2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@redhat.com>, 2002.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */
















 
















  
  






  
  

 

  






  
  
    
    
    

    

    

    

    
    

     
    
    
      
      
    

  
  
  




  
  







  
  
    
    
    
    
    
    
    
    
  
  
  




  
  

















  
  
    
    
    
    
    
    
    
    
    
    
    

    
  
   
  
    
    
    
    
    
    
    

    
    
    
    
    
  

  
  




  
  











  
  




  
  







#line 396 "systems/redhat/usr/include/signal.h" 2
#line 1 "systems/redhat/usr/include/bits/sigthread.h" 1
/* Signal handling function for threaded programs.
   Copyright (C) 1998, 1999, 2000, 2002, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of the
   License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */







/* Functions for handling signals. */

/* Modify the signal mask for the calling thread.  The arguments have
   the same meaning as for sigprocmask(2). */
extern int pthread_sigmask (int __how,
			    const __sigset_t *__restrict __newmask,
			    __sigset_t *__restrict __oldmask)__attribute__ ((__nothrow__));

/* Send signal SIGNO to the given thread. */
extern int pthread_kill (pthread_t __threadid, int __signo) __attribute__ ((__nothrow__));


/* Queue signal and data to a thread.  */
extern int pthread_sigqueue (pthread_t __threadid, int __signo,
			     const union sigval __value) __attribute__ ((__nothrow__));


#line 397 "systems/redhat/usr/include/signal.h" 2

/* The following functions are used internally in the C library and in
   other code which need deep insights.  */

/* Return number of available real-time signal with highest priority.  */
extern int __libc_current_sigrtmin (void) __attribute__ ((__nothrow__));
/* Return number of available real-time signal with lowest priority.  */
extern int __libc_current_sigrtmax (void) __attribute__ ((__nothrow__));





#line 24 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2






#line 1 "systems/redhat/usr/include/stdint.h" 1
/* Copyright (C) 1997,1998,1999,2000,2001,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99: 7.18 Integer types <stdint.h>
 */




















 












 










 








 










 










 











 









 










 













































 








 









 










 


















 









 





















 







 





 




#line 31 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 30 "systems/redhat/usr/include/stdio.h" 2





#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 36 "systems/redhat/usr/include/stdio.h" 2

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 38 "systems/redhat/usr/include/stdio.h" 2




/* Define outside of namespace so the C++ is happy.  */
struct _IO_FILE;


/* The opaque type of streams.  This is the definition used elsewhere.  */
typedef struct _IO_FILE FILE;










/* The opaque type of streams.  This is the definition used elsewhere.  */
typedef struct _IO_FILE __FILE;









#line 1 "systems/redhat/usr/include/libio.h" 1
/* Copyright (C) 1991-1995,1997-2006,2007,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Written by Per Bothner <bothner@cygnus.com>.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.

   As a special exception, if you link the code in this file with
   files compiled with a GNU compiler to produce an executable,
   that does not cause the resulting executable to be covered by
   the GNU Lesser General Public License.  This exception does not
   however invalidate any other reasons why the executable file
   might be covered by the GNU Lesser General Public License.
   This exception applies to code released by its copyright holders
   in files containing the exception.  */




#line 1 "systems/redhat/usr/include/_G_config.h" 1
/* This file is needed by libio to define various configuration parameters.
   These are always the same in the GNU C library.  */




/* Define types for libio in terms of the standard internal type names.  */

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 11 "systems/redhat/usr/include/_G_config.h" 2





#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 17 "systems/redhat/usr/include/_G_config.h" 2




#line 1 "systems/redhat/usr/include/wchar.h" 1
/* Copyright (C) 1995-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *      ISO C99 Standard: 7.24
 *	Extended multibyte and wide character utilities	<wchar.h>
 */






































 














/* Conversion state information.  */
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;
     

    char __wchb[4];
  } __value;		/* Value so far.  */
} __mbstate_t;




/* The rest of the file is only used if used if __need_mbstate_t is not
   defined.  */





































			


			 
     



			


			 
     



     


     








			






			 


			  









		       









		      





			 








     

     
 
     




     

     
 
     







     





     



     



     

				       
     
 
     




     

				      
     
 
     



			
			









     

				      
     
 
     





     





     

				       
     
 
     



		    
     



			 




     









			  
     

















		       
		       



		       



			

		      












	  





	  



	       

	  





			 
			 




			 
			 







			  
			  




			  
			  
			  














		      






		     

			    






			




				  
     








			      
     





					
					







			     
     





				       
				       




















			  
			  


				    
				    



				
				



					  
					  
     


			
     


		       
     


			      
			      









     




















		     
     





     


		     
     






		      
		      
     





		     
     



		      
		      
     







		    
     





     


		    
     







				 
		       
     

		       
     

				     
				     
     
 
			     


			     
     














		     
		     
     





		    
     


		     
		     
     




				  
				  
     

				 
     

				      
				      
     
 
			      
			      

			     

			      
			      










































			






		   























































				 








			    






			
			








			  
			  
			  






















/* Undefine all __need_* constants in case we are included to get those
   constants but the whole file was already read.  */


#line 22 "systems/redhat/usr/include/_G_config.h" 2

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;












  
  
  
    
    
  


typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));




/* These library features are always available in the GNU C library.  */




















/* This is defined by <bits/stat.h> if `st_blksize' exists.  */




/* These are the vtbl details for ELF.  */









 


#line 34 "systems/redhat/usr/include/libio.h" 2
/* ALL of these should be defined in _G_config.h */

















/* This define avoids name pollution if we're using GNU stdarg.h */

#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */









/* Define __gnuc_va_list.  */



typedef __builtin_va_list __gnuc_va_list;

/* Define the standard macros for the user,
   if this invocation was from the user program.  */







































 





































#line 55 "systems/redhat/usr/include/libio.h" 2








 


 




/* For backward compatibility */


















 

 












/* Magic numbers and bits for the _flags field.
   The magic numbers use the high-order bits of _flags;
   the remaining bits are available for variable flags.
   Note: The magic numbers must all be negative if stdio
   emulation is desired. */






























/* These are "formatting flags" matching the iostream fmtflags enum values. */



















struct _IO_jump_t;  struct _IO_FILE;

/* Handle lock.  */



 

 typedef void _IO_lock_t;

/* A streammarker remembers a position in a buffer. */

struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;
  /* If _pos >= 0
 it points to _buf->Gbase()+_pos. FIXME comment */
  /* if _pos < 0, it points to _buf->eBptr()+_pos. FIXME comment */
  int _pos;

    
    
  
    
    
    
    
    

};

/* This is the structure from the libstdc++ codecvt class.  */
enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};






  
  
					     
					     
					     
					     
					     
  
						 
						 
  
					    
					    
					    
					    
  
  
  
			      
  

  
  





  
  
  
  
  
  
  
  
  
  
  
  

  
  
  

  

  


struct _IO_FILE {
  int _flags;		/* High-order word is _IO_MAGIC; rest is flags. */


  /* The following pointers correspond to the C++ streambuf protocol. */
  /* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */
  char* _IO_read_ptr;	/* Current read pointer */
  char* _IO_read_end;	/* End of get area. */
  char* _IO_read_base;	/* Start of putback+get area. */
  char* _IO_write_base;	/* Start of put area. */
  char* _IO_write_ptr;	/* Current put pointer. */
  char* _IO_write_end;	/* End of put area. */
  char* _IO_buf_base;	/* Start of reserve area. */
  char* _IO_buf_end;	/* End of reserve area. */
  /* The following fields are used to support backing up and undo. */
  char *_IO_save_base; /* Pointer to start of non-current get area. */
  char *_IO_backup_base;  /* Pointer to first valid character of backup area */
  char *_IO_save_end; /* Pointer to end of non-current get area. */

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;

  
   int _flags2;

  __off_t _old_offset; /* This used to be _offset but it's too small.  */


  /* 1+column number of pbase(); 0 is unknown. */
  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  /*  char* _save_gptr;  char* _save_egptr; */

  _IO_lock_t *_lock;





  


  __off64_t _offset;

  
  
  
  
  
  
   void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;
  /* Make sure we don't get into trouble again.  */
  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;

struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;




 



/* Functions to do I/O and file management for a stream.  */

/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.
   Return number of bytes read.  */
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);

/* Write N bytes pointed to by BUF to COOKIE.  Write all N bytes
   unless there is an error.  Return number of bytes written, or -1 if
   there is an error without writing anything.  If the file has been
   opened for append (__mode.__append set), then set the file pointer
   to the end of the file and then do the write; if not, just write at
   the current file pointer.  */
typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
				 size_t __n);

/* Move COOKIE's file position to *POS bytes from the
   beginning of the file (if W is SEEK_SET),
   the current position (if W is SEEK_CUR),
   or the end of the file (if W is SEEK_END).
   Set *POS to the new file position.
   Returns zero if successful, nonzero if not.  */
typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);

/* Close COOKIE.  */
typedef int __io_close_fn (void *__cookie);



/* User-visible names for the above.  */
typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;

/* The structure with the cookie function pointers.  */
typedef struct
{
  __io_read_fn *read;		/* Read bytes.  */
  __io_write_fn *write;		/* Write bytes.  */
  __io_seek_fn *seek;		/* Seek/tell file position.  */
  __io_close_fn *close;		/* Close file.  */
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;

/* Initialize one of those.  */
extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
			     void *__cookie, _IO_cookie_io_functions_t __fns);




extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);







 





























extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));

extern int _IO_peekc_locked (_IO_FILE *__fp);

/* This one is for Emacs. */



extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));







 






extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
			__gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
			 __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));






































			 

			  










#line 77 "systems/redhat/usr/include/stdio.h" 2




typedef __gnuc_va_list va_list;


 






 












/* The type of the second argument to `fgetpos' and `fsetpos'.  */


typedef _G_fpos_t fpos_t;
 



typedef _G_fpos64_t fpos64_t;

/* The possibilities for the third argument to `setvbuf'.  */





/* Default buffer size.  */



/* End of file character.
   Some things throughout the library rely on this being -1.  */



/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */






/* Default path prefix for `tempnam' and `tmpnam'.  */


/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
   		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */
#line 1 "systems/redhat/usr/include/bits/stdio_lim.h" 1
/* Copyright (C) 1994, 1997, 1998, 1999, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */























#line 163 "systems/redhat/usr/include/stdio.h" 2


/* Standard streams.  */
extern struct _IO_FILE *stdin;		/* Standard input stream.  */
extern struct _IO_FILE *stdout;		/* Standard output stream.  */
extern struct _IO_FILE *stderr;		/* Standard error output stream.  */

/* C89/C99 say they're macros.  Make them happy.  */





/* Remove file FILENAME.  */
extern int remove (const char *__filename) __attribute__ ((__nothrow__));
/* Rename file OLD to NEW.  */
extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__));



/* Rename file OLD relative to OLDFD to NEW relative to NEWFD.  */
extern int renameat (int __oldfd, const char *__old, int __newfd,
		     const char *__new) __attribute__ ((__nothrow__));


/* Create a temporary file and open it read/write.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */

extern FILE *tmpfile (void) ;
 

 



extern FILE *tmpfile64 (void) ;

/* Generate a temporary filename.  */
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__)) ;



/* This is the reentrant variant of `tmpnam'.  The only difference is
   that it does not allow S to be NULL.  */
extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__)) ;


/* Generate a unique temporary filename using up to five characters of PFX
   if it is not NULL.  The directory to put this file in is searched for
   as follows: First the environment variable "TMPDIR" is checked.
   If it contains the name of a writable directory, that directory is used.
   If not and if DIR is not NULL, that value is checked.  If that fails,
   P_tmpdir is tried and finally "/tmp".  The storage for the filename
   is allocated by `malloc'.  */
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;


/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fclose (FILE *__stream);
/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fflush (FILE *__stream);



/* Faster versions when locking is not required.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fflush_unlocked (FILE *__stream);


/* Close all streams.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fcloseall (void);



/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *fopen (const char *__restrict __filename,
		    const char *__restrict __modes) ;
/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *freopen (const char *__restrict __filename,
		      const char *__restrict __modes,
		      FILE *__restrict __stream) ;
 

				 
  

				   
				   
  
 





extern FILE *fopen64 (const char *__restrict __filename,
		      const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
			const char *__restrict __modes,
			FILE *__restrict __stream) ;


/* Create a new stream that refers to an existing system file descriptor.  */
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__)) ;


/* Create a new stream that refers to the given magic cookie,
   and uses the given functions for input and output.  */
extern FILE *fopencookie (void *__restrict __magic_cookie,
			  const char *__restrict __modes,
			  _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__)) ;


/* Create a new stream that refers to a memory buffer.  */
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__)) ;

/* Open a stream that writes into a malloc'd buffer that is expanded as
   necessary.  *BUFLOC and *SIZELOC are updated with the buffer's location
   and the number of characters written on fflush or fclose.  */
extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__)) ;


/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */
extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));
/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */
extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
		    int __modes, size_t __n) __attribute__ ((__nothrow__));



/* If BUF is NULL, make STREAM unbuffered.
   Else make it use SIZE bytes of BUF for buffering.  */
extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
		       size_t __size) __attribute__ ((__nothrow__));

/* Make STREAM line-buffered.  */
extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));


/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fprintf (FILE *__restrict __stream,
		    const char *__restrict __format, ...);
/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int printf (const char *__restrict __format, ...);
/* Write formatted output to S.  */
extern int sprintf (char *__restrict __s,
		    const char *__restrict __format, ...) __attribute__ ((__nothrow__));

/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
		     __gnuc_va_list __arg);
/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);
/* Write formatted output to S from argument list ARG.  */
extern int vsprintf (char *__restrict __s, const char *__restrict __format,
		     __gnuc_va_list __arg) __attribute__ ((__nothrow__));




/* Maximum chars of output to write in MAXLEN.  */
extern int snprintf (char *__restrict __s, size_t __maxlen,
		     const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
		      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));



/* Write formatted output to a string dynamically allocated with `malloc'.
   Store the address of the string in *PTR.  */
extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
		      __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
		       const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
		     const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) ;


/* Write formatted output to a file descriptor.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int vdprintf (int __fd, const char *__restrict __fmt,
		     __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));


/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fscanf (FILE *__restrict __stream,
		   const char *__restrict __format, ...) ;
/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int scanf (const char *__restrict __format, ...) ;
/* Read formatted input from S.  */
extern int sscanf (const char *__restrict __s,
		   const char *__restrict __format, ...) __attribute__ ((__nothrow__));







				
		       

		       

				    
			   
 
			    


			    









/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
		    __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;

/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;

/* Read formatted input from S into argument list ARG.  */
extern int vsscanf (const char *__restrict __s,
		    const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     








/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);

/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getchar (void);


/* The C standard explicitly says this is a macro, so we always do the
   optimization for it.  */



/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);


/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fgetc_unlocked (FILE *__stream);


/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);

/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int putchar (int __c);


/* The C standard explicitly says this can be a macro,
   so we always do the optimization for it.  */



/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fputc_unlocked (int __c, FILE *__stream);


/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */
extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);


/* Get a word (int) from STREAM.  */
extern int getw (FILE *__stream);

/* Write a word (int) to STREAM.  */
extern int putw (int __w, FILE *__stream);


/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;

/* Get a newline-terminated string from stdin, removing the newline.
   DO NOT USE THIS FUNCTION!!  There is no limit on how much it will read.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern char *gets (char *__s) ;



/* This function does the same as `fgets' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern char *fgets_unlocked (char *__restrict __s, int __n,
			     FILE *__restrict __stream) ;


/* Read up to (and including) a DELIMITER from STREAM into *LINEPTR
   (and null-terminate it). *LINEPTR is a pointer returned from malloc (or
   NULL), pointing to *N characters of space.  It is realloc'd as
   necessary.  Returns the number of characters read (not including the
   null terminator), or -1 on error or EOF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern __ssize_t __getdelim (char **__restrict __lineptr,
			       size_t *__restrict __n, int __delimiter,
			       FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
			     size_t *__restrict __n, int __delimiter,
			     FILE *__restrict __stream) ;

/* Like `getdelim', but reads up to a newline.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern __ssize_t getline (char **__restrict __lineptr,
			    size_t *__restrict __n,
			    FILE *__restrict __stream) ;


/* Write a string to STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int fputs (const char *__restrict __s, FILE *__restrict __stream);

/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int puts (const char *__s);


/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern int ungetc (int __c, FILE *__stream);


/* Read chunks of generic data from STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern size_t fread (void *__restrict __ptr, size_t __size,
		     size_t __n, FILE *__restrict __stream) ;
/* Write chunks of generic data to STREAM.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern size_t fwrite (const void *__restrict __ptr, size_t __size,
		      size_t __n, FILE *__restrict __s) ;



/* This function does the same as `fputs' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fputs_unlocked (const char *__restrict __s,
			   FILE *__restrict __stream);


/* Faster versions when locking is not necessary.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
			      size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
			       size_t __n, FILE *__restrict __stream) ;


/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fseek (FILE *__stream, long int __off, int __whence);
/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern long int ftell (FILE *__stream) ;
/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void rewind (FILE *__stream);


/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */



/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fseeko (FILE *__stream, __off_t __off, int __whence);
/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern __off_t ftello (FILE *__stream) ;
 

		       
		       

 






/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);
/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int fsetpos (FILE *__stream, const fpos_t *__pos);
 

				 

		       
 






extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);


/* Clear the error and EOF indicators for STREAM.  */
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));
/* Return the EOF indicator for STREAM.  */
extern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;
/* Return the error indicator for STREAM.  */
extern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;



/* Faster versions when locking is not required.  */
extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void perror (const char *__s);


/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */
#line 1 "systems/redhat/usr/include/bits/sys_errlist.h" 1
/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.
   Copyright (C) 2002 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */


extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];

#line 850 "systems/redhat/usr/include/stdio.h" 2



/* Return the system file descriptor for STREAM.  */
extern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Faster version when locking is not required.  */
extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;


/* Create a new stream connected to a pipe running the given command.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern FILE *popen (const char *__command, const char *__modes) ;

/* Close a stream opened by popen and return the status of its child.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int pclose (FILE *__stream);


/* Return the name of the controlling terminal.  */
extern char *ctermid (char *__s) __attribute__ ((__nothrow__));


/* Return the name of the current user.  */
extern char *cuserid (char *__s);


struct obstack;			/* See <obstack.h>.  */

/* Write formatted output to an obstack.  */
extern int obstack_printf (struct obstack *__restrict __obstack,
			   const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
			    const char *__restrict __format,
			    __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));


/* These are defined in POSIX.1:1996.  */

/* Acquire ownership of STREAM.  */
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));

/* Try to acquire ownership of STREAM but do not block if it is not
   possible.  */
extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;

/* Relinquish the ownership granted for STREAM.  */
extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));








/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */













#line 32 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/stdlib.h" 1
/* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */


#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 27 "systems/redhat/usr/include/stdlib.h" 2

/* Get size_t, wchar_t and NULL from <stddef.h>.  */





#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */


































/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, "Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type." */

















/* FreeBSD 5 can't be handled well using "traditional" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */














typedef int wchar_t;































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 35 "systems/redhat/usr/include/stdlib.h" 2







/* XPG requires a few symbols from <sys/wait.h> being defined.  */
#line 1 "systems/redhat/usr/include/bits/waitflags.h" 1
/* Definitions of flag bits for `waitpid' et al.
   Copyright (C) 1992,1996,1997,2000,2004,2005 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Bits in the third argument to `waitpid'.  */



/* Bits in the fourth argument to `waitid'.  */








#line 44 "systems/redhat/usr/include/stdlib.h" 2
#line 1 "systems/redhat/usr/include/bits/waitstatus.h" 1
/* Definitions of status bits for `wait' et al.
   Copyright (C) 1992,1994,1996,1997,2000,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Everything extant so far uses these same bits.  */


/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */


/* If WIFSIGNALED(STATUS), the terminating signal.  */


/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */


/* Nonzero if STATUS indicates normal termination.  */


/* Nonzero if STATUS indicates termination by a signal.  */



/* Nonzero if STATUS indicates the child is stopped.  */


/* Nonzero if STATUS indicates the child continued after a stop.  We only
   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */



/* Nonzero if STATUS indicates the child dumped core.  */


/* Macros for constructing status values.  */







#line 1 "systems/redhat/usr/include/endian.h" 1
/* Copyright (C) 1992, 1996, 1997, 2000, 2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


































 




















 
















#line 67 "systems/redhat/usr/include/bits/waitstatus.h" 2

union wait
  {
    int w_status;
    struct
      {

	unsigned int __w_termsig:7; /* Terminating signal.  */
	unsigned int __w_coredump:1; /* Set if dumped core.  */
	unsigned int __w_retcode:8; /* Return code if exited normally.  */
	unsigned int:16;


	
	
	
	

      } __wait_terminated;
    struct
      {

	unsigned int __w_stopval:8; /* W_STOPPED if stopped.  */
	unsigned int __w_stopsig:8; /* Stopping signal.  */
	unsigned int:16;


	
	
	

      } __wait_stopped;
  };








#line 45 "systems/redhat/usr/include/stdlib.h" 2


/* Lots of hair to allow traditional BSD use of `union wait'
   as well as POSIX.1 use of `int' for the status word.  */





 

/* This is the type of the argument to `wait'.  The funky union
   causes redeclarations with either `int *' or `union wait *' to be
   allowed without complaint.  __WAIT_STATUS_DEFN is the type used in
   the actual function definitions.  */




 /* This works in GCC 2.6.1 and later.  */
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));


 




/* Define the macros <sys/wait.h> also would define this way.  */











/* Returned by `div'.  */
typedef struct
  {
    int quot;			/* Quotient.  */
    int rem;			/* Remainder.  */
  } div_t;

/* Returned by `ldiv'.  */

typedef struct
  {
    long int quot;		/* Quotient.  */
    long int rem;		/* Remainder.  */
  } ldiv_t;






/* Returned by `lldiv'.  */
__extension__ typedef struct
  {
    long long int quot;		/* Quotient.  */
    long long int rem;		/* Remainder.  */
  } lldiv_t;



/* The largest number rand will return (same as INT_MAX).  */



/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */




/* Maximum length of a multibyte character in the current locale.  */

extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;



/* Convert a string to a floating-point number.  */
extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an integer.  */
extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to a long integer.  */
extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




/* Convert a string to a long long integer.  */
__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a floating-point number.  */
extern double strtod (const char *__restrict __nptr,
		      char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;




/* Likewise for `float' and `long double' sizes of floating-point numbers.  */
extern float strtof (const char *__restrict __nptr,
		     char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (const char *__restrict __nptr,
			    char **__restrict __endptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a long integer.  */
extern long int strtol (const char *__restrict __nptr,
			char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned long integer.  */
extern unsigned long int strtoul (const char *__restrict __nptr,
				  char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoq (const char *__restrict __nptr,
			     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
				       char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* Convert a string to a quadword integer.  */
__extension__
extern long long int strtoll (const char *__restrict __nptr,
			      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;
/* Convert a string to an unsigned quadword integer.  */
__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
					char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;



/* The concept of one static locale per category is not very well
   thought out.  Many applications will need to process its data using
   information from several different locales.  Another problem is
   the implementation of the internationalization handling in the
   ISO C++ standard library.  To support this another set of
   the functions using locale data exist which take an additional
   argument.

   Attention: even though several *_l interfaces are part of POSIX:2008,
   these are not.  */

/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  */
#line 1 "systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 238 "systems/redhat/usr/include/stdlib.h" 2

/* Special versions of the functions above which take the locale to
   use as an additional parameter.  */
extern long int strtol_l (const char *__restrict __nptr,
			  char **__restrict __endptr, int __base,
			  __locale_t __loc) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern unsigned long int strtoul_l (const char *__restrict __nptr,
				    char **__restrict __endptr,
				    int __base, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
				char **__restrict __endptr, int __base,
				__locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
					  char **__restrict __endptr,
					  int __base, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern double strtod_l (const char *__restrict __nptr,
			char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern float strtof_l (const char *__restrict __nptr,
		       char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern long double strtold_l (const char *__restrict __nptr,
			      char **__restrict __endptr,
			      __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;






  




  




  








  





/* Convert N to base 64 using the digits "./0-9A-Za-z", least-significant
   digit first.  Returns a pointer to static storage overwritten by the
   next call.  */
extern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;

/* Read a number from a string S in base 64 as above.  */
extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 322 "systems/redhat/usr/include/stdlib.h" 2

/* These are the functions that actually do things.  The `random', `srandom',
   `initstate' and `setstate' functions are those from BSD Unices.
   The `rand' and `srand' functions are required by the ANSI standard.
   We provide both interfaces to the same random number generator.  */
/* Return a random long integer between 0 and RAND_MAX inclusive.  */
extern long int random (void) __attribute__ ((__nothrow__));

/* Seed the random number generator with the given number.  */
extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));

/* Initialize the random number generator to use state buffer STATEBUF,
   of length STATELEN, and seed it with SEED.  Optimal lengths are 8, 16,
   32, 64, 128 and 256, the bigger the better; values less than 8 will
   cause an error and values greater than 256 will be rounded down.  */
extern char *initstate (unsigned int __seed, char *__statebuf,
			size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Switch the random number generator to state buffer STATEBUF,
   which should have been previously initialized by `initstate'.  */
extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



/* Reentrant versions of the `random' family of functions.
   These functions all use the following data structure to contain
   state, rather than global state variables.  */

struct random_data
  {
    int32_t *fptr;		/* Front pointer.  */
    int32_t *rptr;		/* Rear pointer.  */
    int32_t *state;		/* Array of state values.  */
    int rand_type;		/* Type of random number generator.  */
    int rand_deg;		/* Degree of random number generator.  */
    int rand_sep;		/* Distance between front and rear.  */
    int32_t *end_ptr;		/* Pointer behind state table.  */
  };

extern int random_r (struct random_data *__restrict __buf,
		     int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
			size_t __statelen,
			struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
		       struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));



/* Return a random integer between 0 and RAND_MAX inclusive.  */
extern int rand (void) __attribute__ ((__nothrow__));
/* Seed the random number generator with the given number.  */
extern void srand (unsigned int __seed) __attribute__ ((__nothrow__));



/* Reentrant interface according to POSIX.1.  */
extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));


/* System V style 48-bit random number generator functions.  */

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern double drand48 (void) __attribute__ ((__nothrow__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return non-negative, long integer in [0,2^31).  */
extern long int lrand48 (void) __attribute__ ((__nothrow__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Return signed, long integers in [-2^31,2^31).  */
extern long int mrand48 (void) __attribute__ ((__nothrow__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Seed random number generator.  */
extern void srand48 (long int __seedval) __attribute__ ((__nothrow__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Data structure for communication with thread safe versions.  This
   type is to be regarded as opaque.  It's only exported because users
   have to allocate objects of this type.  */
struct drand48_data
  {
    unsigned short int __x[3];	/* Current state.  */
    unsigned short int __old_x[3]; /* Old state.  */
    unsigned short int __c;	/* Additive const. in congruential formula.  */
    unsigned short int __init;	/* Flag for initializing.  */
    unsigned long long int __a;	/* Factor in congruential formula.  */
  };

/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */
extern int drand48_r (struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return non-negative, long integer in [0,2^31).  */
extern int lrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return signed, long integers in [-2^31,2^31).  */
extern int mrand48_r (struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
		      struct drand48_data *__restrict __buffer,
		      long int *__restrict __result)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Seed random number generator.  */
extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
		     struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
		      struct drand48_data *__buffer)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));






/* Allocate SIZE bytes of memory.  */
extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;
/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;




/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */
extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__warn_unused_result__));
/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
extern void free (void *__ptr) __attribute__ ((__nothrow__));



/* Free a block.  An alias for `free'.	(Sun Unices).  */
extern void cfree (void *__ptr) __attribute__ ((__nothrow__));


#line 1 "systems/redhat/usr/include/alloca.h" 1
/* Copyright (C) 1992, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/alloca.h" 2


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

































/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 











#line 27 "systems/redhat/usr/include/alloca.h" 2



/* Remove any previous definitions.  */


/* Allocate a block that will be freed when the calling function exits.  */
extern void *alloca (size_t __size) __attribute__ ((__nothrow__));







#line 499 "systems/redhat/usr/include/stdlib.h" 2


/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */
extern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;


/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT.  */
extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Abort execution and generate a core-dump.  */
extern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


/* Register a function to be called when `exit' is called.  */
extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


// XXX There should be a macro to signal with C++ revision is used.
// XXX This function is in the C++1x revision.
/* Register a function to be called when `quick_exit' is called.  */


     
 extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





/* Register a function to be called with the status
   given to `exit' and the given argument.  */
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */
extern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));


// XXX There should be a macro to signal with C++ revision is used.
// XXX This function is in the C++1x revision.
/* Call all functions registered with `at_quick_exit' in the reverse
   of the order in which they were registered and terminate program
   execution with STATUS.  */
extern void quick_exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));





/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */
extern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));



/* Return the value of envariable NAME, or NULL if it doesn't exist.  */
extern char *getenv (const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* This function is similar to the above but returns NULL if the
   programs is running with SUID or SGID enabled.  */
extern char *__secure_getenv (const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* The SVID says this is in <stdio.h>, but this seems a better place.	*/
/* Put STRING, which is of the form "NAME=VALUE", in the environment.
   If there is no `=', remove NAME from the environment.  */
extern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set NAME to VALUE in the environment.
   If REPLACE is nonzero, overwrite an existing value.  */
extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Remove the variable NAME from the environment.  */
extern int unsetenv (const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* The `clearenv' was planned to be added to POSIX.1 but probably
   never made it.  Nevertheless the POSIX.9 standard (POSIX bindings
   for Fortran 77) requires this function.  */
extern int clearenv (void) __attribute__ ((__nothrow__));


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the file name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique file name.  */
extern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the filename unique.
   Returns a file descriptor open on the file for reading and writing,
   or -1 if it cannot create a uniquely-named file.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
 

     
 



extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;



/* Similar to mkstemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
 

		       
 



extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;



/* Create a unique temporary directory from TEMPLATE.
   The last six characters of TEMPLATE must be "XXXXXX";
   they are replaced with a string that makes the directory name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique name.
   The directory is created mode 700.  */
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Generate a unique temporary file name from TEMPLATE similar to
   mkstemp.  But allow the caller to pass additional flags which are
   used in the open call to create the file..

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */

extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
 

     
 



extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;

/* Similar to mkostemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */

extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
 

				   
     
 



extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;



/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int system (const char *__command) ;




/* Return a malloc'd string containing the canonical absolute name of the
   existing named file.  */
extern char *canonicalize_file_name (const char *__name)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc'd; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno' set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */
extern char *realpath (const char *__restrict __name,
		       char *__restrict __resolved) __attribute__ ((__nothrow__)) ;

/* Shorthand for type of comparison functions.  */


typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);


/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */
extern void *bsearch (const void *__key, const void *__base,
		      size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;

/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */
extern void qsort (void *__base, size_t __nmemb, size_t __size,
		   __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
		     __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));

/* Return the absolute value of X.  */
extern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;


/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */
/* GCC may have built-ins for these someday.  */
extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
				    long long int __denom)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;



/* Convert floating point numbers to strings.  The returned values are
   valid only until another call to the same function.  */

/* Convert VALUE to a string with NDIGIT digits and return a pointer to
   this.  Set *DECPT with the position of the decimal character and *SIGN
   with the sign of the number.  */
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* Convert VALUE to a string rounded to NDIGIT decimal digits.  Set *DECPT
   with the position of the decimal character and *SIGN with the sign of
   the number.  */
extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;

/* If possible convert VALUE to a string with NDIGIT significant digits.
   Otherwise use exponential representation.  The resulting string will
   be written to BUF.  */
extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;



/* Long double versions of above functions.  */
extern char *qecvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;


/* Reentrant version of the functions above which provide their own
   buffers.  */
extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
		   int *__restrict __sign, char *__restrict __buf,
		   size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
		    int *__restrict __decpt, int *__restrict __sign,
		    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));



/* Return the length of the multibyte character
   in S, which is no longer than N.  */
extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */
extern int mbtowc (wchar_t *__restrict __pwc,
		   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;
/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */
extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;


/* Convert a multibyte string to a wide char string.  */
extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
			const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));
/* Convert a wide char string to multibyte string.  */
extern size_t wcstombs (char *__restrict __s,
			const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__));




/* Determine whether the string value of RESPONSE matches the affirmation
   or negative response expression as specified by the LC_MESSAGES category
   in the program's current locale.  Returns 1 if affirmative, 0 if
   negative, and -1 if not matching.  */
extern int rpmatch (const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;


/* Parse comma separated suboption from *OPTIONP and match against
   strings in TOKENS.  If found return index and set *VALUEP to
   optional value introduced by an equal sign.  If the suboption is
   not part of TOKENS return in *VALUEP beginning of unknown
   suboption.  On exit *OPTIONP is set to the beginning of the next
   token or at the terminating NUL character.  */
extern int getsubopt (char **__restrict __optionp,
		      char *const *__restrict __tokens,
		      char **__restrict __valuep)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;


/* Setup DES tables according KEY.  */
extern void setkey (const char *__key) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* X/Open pseudo terminal handling.  */


/* Return a master pseudo-terminal handle.  */
extern int posix_openpt (int __oflag) ;


/* The next four functions all take a master pseudo-tty fd and
   perform an operation on the associated slave:  */

/* Chown the slave to the calling user.  */
extern int grantpt (int __fd) __attribute__ ((__nothrow__));

/* Release an internal lock so the slave can be opened.
   Call after grantpt().  */
extern int unlockpt (int __fd) __attribute__ ((__nothrow__));

/* Return the pathname of the pseudo terminal slave assoicated with
   the master FD is open on, or NULL on errors.
   The returned storage is good until the next call to this function.  */
extern char *ptsname (int __fd) __attribute__ ((__nothrow__)) ;


/* Store at most BUFLEN characters of the pathname of the slave pseudo
   terminal associated with the master FD is open on in BUF.
   Return 0 on success, otherwise an error number.  */
extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Open a master pseudo terminal and return its file descriptor.  */
extern int getpt (void);


/* Put the 1 minute, 5 minute and 15 minute load averages into the first
   NELEM elements of LOADAVG.  Return the number written (never more than
   three, but may be less than NELEM), or -1 if an error occurred.  */
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Define some macros helping to catch buffer overflows.  */












#line 33 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */









/* Define __gnuc_va_list.  */





/* Define the standard macros for the user,
   if this invocation was from the user program.  */









/* Define va_list, if desired, from __gnuc_va_list. */
/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */
























 /* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */

/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */
































#line 34 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */



/* snaroff@next.com says the NeXT needs this.  */

/* Irix 5.1 needs this.  */



/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




















typedef long int ptrdiff_t;








/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 35 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/string.h" 1
/* Copyright (C) 1991-1993,1995-2004,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.21 String handling	<string.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/string.h" 2



/* Get size_t and NULL from <stddef.h>.  */


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 36 "systems/redhat/usr/include/string.h" 2

/* Tell the caller that we provide correct C++ prototypes.  */




/* Copy N bytes of SRC to DEST.  */
extern void *memcpy (void *__restrict __dest,
		     const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy N bytes of SRC to DEST, guaranteeing
   correct behavior for overlapping strings.  */
extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Copy no more than N bytes of SRC to DEST, stopping when C is found.
   Return the position in DEST one byte past where C was copied,
   or NULL if C was not found in the first N bytes of SRC.  */

extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
		      int __c, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Set N bytes of S to C.  */
extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2.  */
extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Search N bytes of S for C.  */




      

      





  





  



 extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




/* Search in S for C.  This is similar to `memchr' but there is no
   length limit.  */


     

     
 extern void *rawmemchr (const void *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Search N bytes of S for the final occurrence of C.  */


      

      
 extern void *memrchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



/* Copy SRC to DEST.  */
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Copy no more than N characters of SRC to DEST.  */
extern char *strncpy (char *__restrict __dest,
		      const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Append SRC onto DEST.  */
extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
/* Append no more than N characters from SRC onto DEST.  */
extern char *strncat (char *__restrict __dest, const char *__restrict __src,
		      size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare S1 and S2.  */
extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Compare N characters of S1 and S2.  */
extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare the collated forms of S1 and S2.  */
extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm (char *__restrict __dest,
		       const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* The following functions are equivalent to the both above but they
   take the locale they use for the collation as an extra argument.
   This is not standardsized but something like will come.  */
#line 1 "systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 164 "systems/redhat/usr/include/string.h" 2

/* Compare the collated forms of S1 and S2 using rules from L.  */
extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));
/* Put a transformation of SRC into no more than N bytes of DEST.  */
extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
			 __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));


/* Duplicate S, returning an identical malloc'd string.  */
extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));

/* Return a malloc'd copy of at most N bytes of STRING.  The
   resultant string is terminated even if no null terminator
   appears before STRING[N].  */

extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));


/* Duplicate S, returning an identical alloca'd string.  */









/* Return an alloca'd copy of at most N bytes of string.  */











/* Find the first occurrence of C in S.  */




     

     





  





  



 extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S.  */




     

     





  





  



 extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




/* This function is similar to `strchr'.  But it returns a pointer to
   the closing NUL byte in case C is not found in S.  */


     

     
 extern char *strchrnul (const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



/* Return the length of the initial segment of S which
   consists entirely of characters not in REJECT.  */
extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Return the length of the initial segment of S which
   consists entirely of characters in ACCEPT.  */
extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
/* Find the first occurrence in S of any character in ACCEPT.  */




     

     





  





  



 extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of NEEDLE in HAYSTACK.  */




     

			     
     





  





  



 extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Divide S into tokens separated by characters in DELIM.  */
extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Divide S into tokens separated by characters in DELIM.  Information
   passed between calls are stored in SAVE_PTR.  */
extern char *__strtok_r (char *__restrict __s,
			 const char *__restrict __delim,
			 char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
		       char **__restrict __save_ptr)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));


/* Similar to `strstr' but this function ignores the case of both strings.  */


     

				       
     
 extern char *strcasestr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



/* Find the first occurrence of NEEDLE in HAYSTACK.
   NEEDLE is NEEDLELEN bytes long;
   HAYSTACK is HAYSTACKLEN bytes long.  */
extern void *memmem (const void *__haystack, size_t __haystacklen,
		     const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));

/* Copy N bytes of SRC to DEST, return pointer to bytes after the
   last written byte.  */
extern void *__mempcpy (void *__restrict __dest,
			const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
		      const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Return the length of S.  */
extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));



/* Find the length of STRING, but scan at most MAXLEN characters.
   If no '\0' terminator is found in that many characters, return MAXLEN.  */
extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


/* Return a string describing the meaning of the `errno' code in ERRNUM.  */
extern char *strerror (int __errnum) __attribute__ ((__nothrow__));


/* Reentrant version of `strerror'.
   There are 2 flavors of `strerror_r', GNU which returns the string
   and may or may not use the supplied temporary buffer and POSIX one
   which fills the string into the buffer.
   To use the POSIX version, -D_XOPEN_SOURCE=600 or -D_POSIX_C_SOURCE=200112L
   without -D_GNU_SOURCE is needed, otherwise the GNU version is
   preferred.  */





			   
			   
 
     


 /* If a temporary buffer is required, at most BUFLEN bytes of BUF will be
   used.  */
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* Translate error number to string according to the locale L.  */
extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__));

/* We define this function always since `bzero' is sometimes needed when
   the namespace rules does not allow this.  */
extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Copy N bytes of SRC to DEST (like memmove, but args reversed).  */
extern void bcopy (const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Set N bytes of S to 0.  */
extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Compare N bytes of S1 and S2 (same as memcmp).  */
extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Find the first occurrence of C in S (same as strchr).  */




     

     





  





  



 extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Find the last occurrence of C in S (same as strrchr).  */




     

     





  





  



 extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));

/* Return the position of the first bit set in I, or 0 if none are set.
   The least-significant bit is position 1, the most-significant 32.  */
extern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* The following two functions are non-standard but necessary for non-32 bit
   platforms.  */

extern int ffsl (long int __l) __attribute__ ((__nothrow__)) __attribute__ ((__const__));

__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));


/* Compare S1 and S2, ignoring case.  */
extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Compare no more than N chars of S1 and S2, ignoring case.  */
extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


/* Again versions of a few functions which use the given locale instead
   of the global one.  */
extern int strcasecmp_l (const char *__s1, const char *__s2,
			 __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
			  size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));


/* Return the next DELIM-delimited token from *STRINGP,
   terminating it with a '\0', and update *STRINGP to point past it.  */
extern char *strsep (char **__restrict __stringp,
		     const char *__restrict __delim)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Return a string describing the meaning of the signal number in SIG.  */
extern char *strsignal (int __sig) __attribute__ ((__nothrow__));

/* Copy SRC to DEST, returning the address of the terminating '\0' in DEST.  */
extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Copy no more than N characters of SRC to DEST, returning the address of
   the last character written into DEST.  */
extern char *__stpncpy (char *__restrict __dest,
			const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
		      const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Compare S1 and S2 as strings holding name & indices/version numbers.  */
extern int strverscmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

/* Sautee STRING briskly.  */
extern char *strfry (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Frobnicate N bytes of S.  */
extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Return the file name within directory of FILENAME.  We don't
   declare the function if the `basename' macro is available (defined
   in <libgen.h>) which makes the XPG version of this function
   available.  */


     

     
 extern char *basename (const char *__filename) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





































#line 36 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
/* There are two incompatible basename's, let's not use them! */
/* See the dirname/basename man page for details */
#line 1 "systems/redhat/usr/include/libgen.h" 1
/* Copyright (C) 1996, 1997, 1999, 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/libgen.h" 2



/* Return directory part of PATH or "." if none is available.  */
extern char *dirname (char *__path) __attribute__ ((__nothrow__));

/* Return final component of PATH.

   This is the weird XPG version of this function.  It sometimes will
   modify its argument.  Therefore we normally use the GNU version (in
   <string.h>) and only if this header is included make the XPG
   version available under the real name.  */
extern char *__xpg_basename (char *__path) __attribute__ ((__nothrow__));





#line 39 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2


#line 1 "systems/redhat/usr/include/poll.h" 1
#line 1 "systems/redhat/usr/include/sys/poll.h" 1
/* Compatibility definitions for System V `poll' interface.
   Copyright (C) 1994,1996-2001,2004,2005,2006 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/sys/poll.h" 2

/* Get the platform dependent bits of `poll'.  */
#line 1 "systems/redhat/usr/include/bits/poll.h" 1
/* Copyright (C) 1997, 2001, 2006, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Event types that can be polled for.  These bits may be set in `events'
   to indicate the interesting event types; they will appear in `revents'
   to indicate the status of the file descriptor.  */





/* These values are defined in XPG4.2.  */






/* These are extensions for Linux.  */




/* Event types always implicitly polled for.  These bits need not be set in
   `events', but they will appear in `revents' to indicate the status of
   the file descriptor.  */



#line 28 "systems/redhat/usr/include/sys/poll.h" 2

/* Get the __sigset_t definition.  */
#line 1 "systems/redhat/usr/include/bits/sigset.h" 1
/* __sig_atomic_t, __sigset_t, and related definitions.  Linux version.
   Copyright (C) 1991, 1992, 1994, 1996, 1997, 2007
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
    
  


/* We only want to define these functions if <signal.h> was actually
   included; otherwise we were included just to define the types.  Since we
   are namespace-clean, it wouldn't hurt to define extra macros.  But
   trouble can be caused by functions being defined (e.g., any global
   register vars declared later will cause compilation errors).  */

















































































#line 31 "systems/redhat/usr/include/sys/poll.h" 2
/* Get the timespec definition.  */

#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 34 "systems/redhat/usr/include/sys/poll.h" 2

/* Type used for the number of file descriptors.  */
typedef unsigned long int nfds_t;

/* Data structure describing a polling request.  */
struct pollfd
  {
    int fd;			/* File descriptor to poll.  */
    short int events;		/* Types of events poller cares about.  */
    short int revents;		/* Types of events that actually occurred.  */
  };




/* Poll the file descriptors described by the NFDS structures starting at
   FDS.  If TIMEOUT is nonzero and not -1, allow TIMEOUT milliseconds for
   an event to occur; if TIMEOUT is -1, block until an event occurs.
   Returns the number of file descriptors with events, zero if timed out,
   or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int poll (struct pollfd *__fds, nfds_t __nfds, int __timeout);


/* Like poll, but before waiting the threads signal mask is replaced
   with that specified in the fourth parameter.  For better usability,
   the timeout value is specified using a TIMESPEC object.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int ppoll (struct pollfd *__fds, nfds_t __nfds,
		  const struct timespec *__timeout,
		  const __sigset_t *__ss);




#line 3 "systems/redhat/usr/include/poll.h" 2
#line 42 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/ioctl.h" 1
/* Copyright (C) 1991, 92, 93, 94, 96, 98, 99 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/sys/ioctl.h" 2



/* Get the list of `ioctl' requests and related constants.  */
#line 1 "systems/redhat/usr/include/bits/ioctls.h" 1
/* Copyright (C) 1996, 1997, 1998, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Use the definitions from the kernel header files.  */
#line 1 "systems/redhat/usr/include/asm/ioctls.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/ioctls.h" 1



#line 1 "systems/redhat/usr/include/linux/ioctl.h" 1



#line 1 "systems/redhat/usr/include/asm/ioctl.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/ioctl.h" 1



/* ioctl command encoding: 32 bits total, command in lower 16 bits,
 * size of the parameter structure in the lower 14 bits of the
 * upper 16 bits.
 * Encoding the size of the parameter structure in the ioctl request
 * is useful for catching programs compiled with old versions
 * and to avoid overwriting user space outside the user buffer area.
 * The highest 2 bits are reserved for indicating the ``access mode''.
 * NOTE: This limits the max parameter size to 16kB -1 !
 */

/*
 * The following is for compatibility across the various Linux
 * platforms.  The generic ioctl numbering scheme doesn't really enforce
 * a type field.  De facto, however, the top 8 bits of the lower 16
 * bits are indeed used as a type field, so we might just as well make
 * this explicit here.  Please be sure to use the decoding macros
 * below from now on.
 */



/*
 * Let any architecture override either of the following before
 * including this file.
 */

















/*
 * Direction bits, which any architecture can choose to override
 * before including this file.
 */


















/* used to create numbers */








/* used to decode ioctl numbers.. */





/* ...and for the drivers/sound files... */








#line 3 "systems/redhat/usr/include/asm/ioctl.h" 2
#line 6 "systems/redhat/usr/include/linux/ioctl.h" 2


#line 6 "systems/redhat/usr/include/asm-generic/ioctls.h" 2

/*
 * These are the most common definitions for tty ioctl numbers.
 * Most of them do not use the recommended _IOC(), but there is
 * probably some source code out there hardcoding the number,
 * so we might as well use them for all new platforms.
 *
 * The architectures that use different values here typically
 * try to be compatible with some Unix variants for the same
 * architecture.
 */

/* 0x54 is just a magic number to make these relatively unique ('T') */







































































/*
 * some architectures define FIOQSIZE as 0x545E, which is used for
 * TIOCGHAYESESP on others
 */





/* Used for packet mode */











#line 3 "systems/redhat/usr/include/asm/ioctls.h" 2
#line 26 "systems/redhat/usr/include/bits/ioctls.h" 2

/* Routing table calls.  */




/* Socket configuration controls. */











































/* ARP cache control calls. */
		    /*  0x8950 - 0x8952  * obsolete calls, don't re-use */




/* RARP cache control calls. */




/* Driver configuration calls */




/* DLCI configuration calls */




/* Device private ioctl calls.  */

/* These 16 ioctls are available to devices via the do_ioctl() device
   vector.  Each device should include this file and redefine these
   names as their own. Because these are device dependent it is a good
   idea _NOT_ to issue them to random objects and hope.  */



/*
 *	These 16 ioctl calls are protocol private
 */


#line 29 "systems/redhat/usr/include/sys/ioctl.h" 2

/* Define some types used by `ioctl' requests.  */
#line 1 "systems/redhat/usr/include/bits/ioctl-types.h" 1
/* Structure types for pre-termios terminal ioctls.  Linux version.
   Copyright (C) 1996, 1997, 1999, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* Get definition of constants for use with `ioctl'.  */
#line 1 "systems/redhat/usr/include/asm/ioctls.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/ioctls.h" 1













































































































#line 3 "systems/redhat/usr/include/asm/ioctls.h" 2
#line 27 "systems/redhat/usr/include/bits/ioctl-types.h" 2


struct winsize
  {
    unsigned short int ws_row;
    unsigned short int ws_col;
    unsigned short int ws_xpixel;
    unsigned short int ws_ypixel;
  };


struct termio
  {
    unsigned short int c_iflag;		/* input mode flags */
    unsigned short int c_oflag;		/* output mode flags */
    unsigned short int c_cflag;		/* control mode flags */
    unsigned short int c_lflag;		/* local mode flags */
    unsigned char c_line;		/* line discipline */
    unsigned char c_cc[8];		/* control characters */
};

/* modem lines */












/* ioctl (fd, TIOCSERGETLSR, &result) where result may be as below */

/* line disciplines */
















#line 32 "systems/redhat/usr/include/sys/ioctl.h" 2

/* On a Unix system, the system <sys/ioctl.h> probably defines some of
   the symbols we define in <sys/ttydefaults.h> (usually with the same
   values).  The code to generate <bits/ioctls.h> has omitted these
   symbols to avoid the conflict, but a Unix program expects <sys/ioctl.h>
   to define them, so we must include <sys/ttydefaults.h> here.  */
#line 1 "systems/redhat/usr/include/sys/ttydefaults.h" 1
/*-
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)ttydefaults.h	8.4 (Berkeley) 1/21/94
 */

/*
 * System wide defaults for terminal state.  Linux version.
 */



/*
 * Defaults on "first" open.
 */






/*
 * Control Character Defaults
 */




 





 














/* compat */




/* PROTECTED INCLUSION ENDS HERE */

/*
 * #define TTYDEFCHARS to include an array of default control characters.
 */


	
	
	



#line 39 "systems/redhat/usr/include/sys/ioctl.h" 2

/* Perform the I/O control operation specified by REQUEST on FD.
   One argument may follow; its presence and type depend on REQUEST.
   Return value depends on REQUEST.  Usually -1 indicates error.  */
extern int ioctl (int __fd, unsigned long int __request, ...) __attribute__ ((__nothrow__));




#line 43 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/mman.h" 1
/* Definitions for BSD-style memory management.
   Copyright (C) 1994-2000, 2003, 2004, 2005 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/sys/mman.h" 2
#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 26 "systems/redhat/usr/include/sys/mman.h" 2

#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 28 "systems/redhat/usr/include/sys/mman.h" 2




 







#line 1 "systems/redhat/usr/include/bits/mman.h" 1
/* Definitions for POSIX memory map interface.  Linux/x86_64 version.
   Copyright (C) 2001, 2003, 2005, 2006, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




/* The following definitions basically come from the kernel headers.
   But the kernel header is not namespace clean.  */


/* Protections are chosen from these bits, OR'd together.  The
   implementation does not necessarily support PROT_EXEC or PROT_WRITE
   without PROT_READ.  The only guarantees are that no writing will be
   allowed without PROT_WRITE and no access will be allowed for PROT_NONE. */








/* Sharing types (must choose one and only one of these).  */





/* Other flags.  */







/* These are Linux-specific.  */










/* Flags to `msync'.  */




/* Flags for `mlockall'.  */



/* Flags for `mremap'.  */




/* Advice to `madvise'.  */













/* The POSIX people had to invent similar names for the same things.  */







#line 44 "systems/redhat/usr/include/sys/mman.h" 2

/* Return value of `mmap' in case of an error.  */



/* Map addresses starting near ADDR and extending for LEN bytes.  from
   OFFSET into the file FD describes according to PROT and FLAGS.  If ADDR
   is nonzero, it is the desired mapping address.  If the MAP_FIXED bit is
   set in FLAGS, the mapping will be at ADDR exactly (which must be
   page-aligned); otherwise the system chooses a convenient nearby address.
   The return value is the actual mapping address chosen or MAP_FAILED
   for errors (in which case `errno' is set).  A successful `mmap' call
   deallocates any previous mapping for the affected region.  */


extern void *mmap (void *__addr, size_t __len, int __prot,
		   int __flags, int __fd, __off_t __offset) __attribute__ ((__nothrow__));
 

			      
			       
			      
 



extern void *mmap64 (void *__addr, size_t __len, int __prot,
		     int __flags, int __fd, __off64_t __offset) __attribute__ ((__nothrow__));

/* Deallocate any mapping for the region starting at ADDR and extending LEN
   bytes.  Returns 0 if successful, -1 for errors (and sets errno).  */
extern int munmap (void *__addr, size_t __len) __attribute__ ((__nothrow__));

/* Change the memory protection of the region starting at ADDR and
   extending LEN bytes to PROT.  Returns 0 if successful, -1 for errors
   (and sets errno).  */
extern int mprotect (void *__addr, size_t __len, int __prot) __attribute__ ((__nothrow__));

/* Synchronize the region starting at ADDR and extending LEN bytes with the
   file it maps.  Filesystem operations on a file being mapped are
   unpredictable before this is done.  Flags are from the MS_* set.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int msync (void *__addr, size_t __len, int __flags);


/* Advise the system about particular usage patterns the program follows
   for the region starting at ADDR and extending LEN bytes.  */
extern int madvise (void *__addr, size_t __len, int __advice) __attribute__ ((__nothrow__));


/* This is the POSIX name for this function.  */
extern int posix_madvise (void *__addr, size_t __len, int __advice) __attribute__ ((__nothrow__));

/* Guarantee all whole pages mapped by the range [ADDR,ADDR+LEN) to
   be memory resident.  */
extern int mlock (const void *__addr, size_t __len) __attribute__ ((__nothrow__));

/* Unlock whole pages previously mapped by the range [ADDR,ADDR+LEN).  */
extern int munlock (const void *__addr, size_t __len) __attribute__ ((__nothrow__));

/* Cause all currently mapped pages of the process to be memory resident
   until unlocked by a call to the `munlockall', until the process exits,
   or until the process calls `execve'.  */
extern int mlockall (int __flags) __attribute__ ((__nothrow__));

/* All currently mapped pages of the process' address space become
   unlocked.  */
extern int munlockall (void) __attribute__ ((__nothrow__));


/* mincore returns the memory residency status of the pages in the
   current process's address space specified by [start, start + len).
   The status is returned in a vector of bytes.  The least significant
   bit of each byte is 1 if the referenced page is in memory, otherwise
   it is zero.  */
extern int mincore (void *__start, size_t __len, unsigned char *__vec)
     __attribute__ ((__nothrow__));


/* Remap pages mapped by the range [ADDR,ADDR+OLD_LEN) to new length
   NEW_LEN.  If MREMAP_MAYMOVE is set in FLAGS the returned address
   may differ from ADDR.  If MREMAP_FIXED is set in FLAGS the function
   takes another paramter which is a fixed address at which the block
   resides after a successful call.  */
extern void *mremap (void *__addr, size_t __old_len, size_t __new_len,
		     int __flags, ...) __attribute__ ((__nothrow__));

/* Remap arbitrary pages of a shared backing store within an existing
   VMA.  */
extern int remap_file_pages (void *__start, size_t __size, int __prot,
			     size_t __pgoff, int __flags) __attribute__ ((__nothrow__));

/* Open shared memory segment.  */
extern int shm_open (const char *__name, int __oflag, mode_t __mode);

/* Remove shared memory segment.  */
extern int shm_unlink (const char *__name);




#line 44 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/socket.h" 1
/* Declarations of socket constants, types, and functions.
   Copyright (C) 1991,92,1994-2001,2003,2005,2007,2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */
























  
    
    
  





  

  

  












 


















	      



	      












		       



     



			













			





















		       
		       









			 
			 








			













		       
		       





		       
















		   







		    



























#line 45 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/stat.h" 1
/* Copyright (C) 1991, 1992, 1995-2004, 2005, 2006, 2007, 2009, 2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 5.6 File Characteristics	<sys/stat.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/sys/stat.h" 2

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 31 "systems/redhat/usr/include/sys/stat.h" 2








#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 41 "systems/redhat/usr/include/sys/stat.h" 2


/* The Single Unix specification says that some more types are
   available here.  */











 














 












 










#line 1 "systems/redhat/usr/include/bits/stat.h" 1
/* Copyright (C) 1999-2003,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


















 







  
    

    


    
     


    
    
     
    

    
    

    

    

    


    
     

    

    
     


    





    
    
    



     
    
    
    
    
    


    
 
    
    
     


  




  
    

    
    
    
     
    
    
    

    
    

    
    
    
     
    
    

    
    

    





    
    
    



     
    
    
    
    
    


    
     

  








































#line 109 "systems/redhat/usr/include/sys/stat.h" 2

















/* Test macros for file types.	*/


















 

/* These are from POSIX.1b.  If the objects are not implemented using separate
   distinct file types, the macros always will evaluate to zero.  Unlike the
   other S_* macros the following three take a pointer to a `struct stat'
   object as the argument.  */





/* Protection bits.  */





/* Save swapped text after use (sticky bit).  This is pretty well obsolete.  */





/* Read, write, and execute by owner.  */










/* Read, write, and execute by group.  */





/* Read, write, and execute by others.  */




/* Macros for common mode bit masks.  */







/* Get file attributes for FILE and put them in BUF.  */
extern int stat (const char *__restrict __file,
		 struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Get file attributes for the file, device, pipe, or socket
   that file descriptor FD is open on and put them in BUF.  */
extern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
 

				  
     

     
 




extern int stat64 (const char *__restrict __file,
		   struct stat64 *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
extern int fstat64 (int __fd, struct stat64 *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Similar to stat, get the attributes for FILE and put them in BUF.
   Relative path names are interpreted relative to FD unless FD is
   AT_FDCWD.  */

extern int fstatat (int __fd, const char *__restrict __file,
		    struct stat *__restrict __buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
 

				     
				     
			   
 



extern int fstatat64 (int __fd, const char *__restrict __file,
		      struct stat64 *__restrict __buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));




/* Get file attributes about FILE and put them in BUF.
   If FILE is a symbolic link, do not follow it.  */
extern int lstat (const char *__restrict __file,
		  struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
 

			   
			    
     
 



extern int lstat64 (const char *__restrict __file,
		    struct stat64 *__restrict __buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));


/* Set file access permissions for FILE to MODE.
   If FILE is a symbolic link, this affects its target instead.  */
extern int chmod (const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set file access permissions for FILE to MODE.
   If FILE is a symbolic link, this affects the link itself
   rather than its target.  */
extern int lchmod (const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Set file access permissions of the file FD is open on to MODE.  */

extern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__));


/* Set file access permissions of FILE relative to
   the directory FD is open on.  */
extern int fchmodat (int __fd, const char *__file, __mode_t __mode,
		     int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;

/* Set the file creation mask of the current process to MASK,
   and return the old creation mask.  */
extern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__));


/* Get the current `umask' value without changing it.
   This function is only available under the GNU Hurd.  */
extern __mode_t getumask (void) __attribute__ ((__nothrow__));

/* Create a new directory named PATH, with permission bits MODE.  */
extern int mkdir (const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mkdir, create a new directory with permission bits MODE.  But
   interpret relative PATH names relative to the directory associated
   with FD.  */
extern int mkdirat (int __fd, const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));

/* Create a device file named PATH, with permission and special bits MODE
   and device number DEV (which can be constructed from major and minor
   device numbers with the `makedev' macro above).  */

extern int mknod (const char *__path, __mode_t __mode, __dev_t __dev)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mknod, create a new device file with permission bits MODE and
   device number DEV.  But interpret relative PATH names relative to
   the directory associated with FD.  */
extern int mknodat (int __fd, const char *__path, __mode_t __mode,
		    __dev_t __dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Create a new FIFO named PATH, with permission bits MODE.  */
extern int mkfifo (const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Like mkfifo, create a new FIFO with permission bits MODE.  But
   interpret relative PATH names relative to the directory associated
   with FD.  */
extern int mkfifoat (int __fd, const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));



/* Set file access and modification times relative to directory file
   descriptor.  */
extern int utimensat (int __fd, const char *__path,
		      const struct timespec __times[2],
		      int __flags)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));


/* Set file access and modification times of the file associated with FD.  */
extern int futimens (int __fd, const struct timespec __times[2]) __attribute__ ((__nothrow__));


/* To allow the `struct stat' structure and the file type `mode_t'
   bits to vary without changing shared library major version number,
   the `stat' family of functions and `mknod' are in fact inline
   wrappers around calls to `xstat', `fxstat', `lxstat', and `xmknod',
   which all take a leading version-number argument designating the
   data structure and bits used.  <bits/stat.h> defines _STAT_VER with
   the version number corresponding to `struct stat' as defined in
   that file; and _MKNOD_VER with the version number corresponding to
   the S_IF* macros defined therein.  It is arranged that when not
   inlined these function are always statically linked; that way a
   dynamically-linked executable always encodes the version number
   corresponding to the data structures it uses, so the `x' functions
   in the shared library can adapt without needing to recompile all
   callers.  */







/* Wrappers for stat and mknod system calls.  */

extern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));
extern int __xstat (int __ver, const char *__filename,
		    struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat (int __ver, const char *__filename,
		     struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat (int __ver, int __fildes, const char *__filename,
		       struct stat *__stat_buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));
 

				      
     

				     
     

				      
     

					
					
			   

 





extern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));
extern int __xstat64 (int __ver, const char *__filename,
		      struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat64 (int __ver, const char *__filename,
		       struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat64 (int __ver, int __fildes, const char *__filename,
			 struct stat64 *__stat_buf, int __flag)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));

extern int __xmknod (int __ver, const char *__path, __mode_t __mode,
		     __dev_t *__dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));

extern int __xmknodat (int __ver, int __fd, const char *__path,
		       __mode_t __mode, __dev_t *__dev)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 5)));







  






  





  





		

  






  





		

  






  






  





  





		  

  








#line 46 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/time.h" 1
/* Copyright (C) 1991-1994,1996-2003,2005,2006,2009
	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/sys/time.h" 2

#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 27 "systems/redhat/usr/include/sys/time.h" 2

#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */























































































  
    
    
  










  
  
  
  
  
  
  
  
  


  
  
   
  









  
    
    
  





















     









			
			






		       
     







			  
			  
			  



			 
			 















			    




			       
















			



		      

















































		      










     







			    
			    






			 
			 






			  
			  



     







































		      





#line 29 "systems/redhat/usr/include/sys/time.h" 2

#line 1 "systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */


















































  
    
    
  


#line 31 "systems/redhat/usr/include/sys/time.h" 2

#line 1 "systems/redhat/usr/include/sys/select.h" 1
/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2003, 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */












































  
    


    

     


  





























		   
		   
		   









		    
		    
		    
		    




#line 33 "systems/redhat/usr/include/sys/time.h" 2








/* Macros for converting between `struct timeval' and `struct timespec'.  */










/* Structure crudely representing a timezone.
   This is obsolete and should never be used.  */
struct timezone
  {
    int tz_minuteswest;		/* Minutes west of GMT.  */
    int tz_dsttime;		/* Nonzero if DST is ever in effect.  */
  };

typedef struct timezone *__restrict __timezone_ptr_t;
 

/* Get the current time of day and timezone information,
   putting it into *TV and *TZ.  If TZ is NULL, *TZ is not filled.
   Returns 0 on success, -1 on errors.
   NOTE: This form of timezone information is obsolete.
   Use the functions and variables declared in <time.h> instead.  */
extern int gettimeofday (struct timeval *__restrict __tv,
			 __timezone_ptr_t __tz) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Set the current time of day and timezone information.
   This call is restricted to the super-user.  */
extern int settimeofday (const struct timeval *__tv,
			 const struct timezone *__tz)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Adjust the current time of day by the amount in DELTA.
   If OLDDELTA is not NULL, it is filled in with the amount
   of time adjustment remaining to be done from the last `adjtime' call.
   This call is restricted to the super-user.  */
extern int adjtime (const struct timeval *__delta,
		    struct timeval *__olddelta) __attribute__ ((__nothrow__));

/* Values for the first argument to `getitimer' and `setitimer'.  */
enum __itimer_which
  {
    /* Timers run in real time.  */
    ITIMER_REAL = 0,

    /* Timers run only when the process is executing.  */
    ITIMER_VIRTUAL = 1,

    /* Timers run when the process is executing and when
       the system is executing on behalf of the process.  */
    ITIMER_PROF = 2

  };

/* Type of the second argument to `getitimer' and
   the second and third arguments `setitimer'.  */
struct itimerval
  {
    /* Value to put into `it_value' when the timer expires.  */
    struct timeval it_interval;
    /* Time to the next timer expiration.  */
    struct timeval it_value;
  };


/* Use the nicer parameter type only in GNU mode and not for C++ since the
   strict C++ rules prevent the automatic promotion.  */
typedef enum __itimer_which __itimer_which_t;
 

/* Set *VALUE to the current setting of timer WHICH.
   Return 0 on success, -1 on errors.  */
extern int getitimer (__itimer_which_t __which,
		      struct itimerval *__value) __attribute__ ((__nothrow__));

/* Set the timer WHICH to *NEW.  If OLD is not NULL,
   set *OLD to the old value of timer WHICH.
   Returns 0 on success, -1 on errors.  */
extern int setitimer (__itimer_which_t __which,
		      const struct itimerval *__restrict __new,
		      struct itimerval *__restrict __old) __attribute__ ((__nothrow__));

/* Change the access time of FILE to TVP[0] and the modification time of
   FILE to TVP[1].  If TVP is a null pointer, use the current time instead.
   Returns 0 on success, -1 on errors.  */
extern int utimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


/* Same as `utimes', but does not follow symbolic links.  */
extern int lutimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));

/* Same as `utimes', but takes an open file descriptor instead of a name.  */
extern int futimes (int __fd, const struct timeval __tvp[2]) __attribute__ ((__nothrow__));


/* Change the access time of FILE relative to FD to TVP[0] and the
   modification time of FILE to TVP[1].  If TVP is a null pointer, use
   the current time instead.  Returns 0 on success, -1 on errors.  */
extern int futimesat (int __fd, const char *__file,
		      const struct timeval __tvp[2]) __attribute__ ((__nothrow__));


/* Convenience macros for operations on timevals.
   NOTE: `timercmp' does not work for >= or <=.  */





























#line 47 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 48 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2



#line 1 "systems/redhat/usr/include/sys/wait.h" 1
/* Copyright (C) 1991-1994,1996-2001,2003,2004,2005,2007,2009,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 3.2.1 Wait for Process Termination	<sys/wait.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/sys/wait.h" 2



#line 1 "systems/redhat/usr/include/signal.h" 1
/* Copyright (C) 1991-2004, 2007, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.14 Signal handling <signal.h>
 */




























































     


     







     
 


				      
				      
 








     





















     
























 


 















































     







		      



		     







			










		      










     







			







			 
			 
     




     










  
    
    

    

  













		   



























     




			



































#line 33 "systems/redhat/usr/include/sys/wait.h" 2
#line 1 "systems/redhat/usr/include/sys/resource.h" 1
/* Copyright (C) 1992,94,1996-2000,2002,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/sys/resource.h" 2

/* Get the system-dependent definitions of structures and bit values.  */
#line 1 "systems/redhat/usr/include/bits/resource.h" 1
/* Bit values & structures for resource limits.  Linux version.
   Copyright (C) 1994, 1996, 1997, 1998, 1999, 2000, 2004, 2005, 2008, 2009
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 27 "systems/redhat/usr/include/bits/resource.h" 2

/* Transmute defines to enumerations.  The macro re-definitions are
   necessary because some programs want to test for operating system
   features with #ifdef RUSAGE_SELF.  In ISO C the reflexive
   definition is a no-op.  */

/* Kinds of resource limit.  */
enum __rlimit_resource
{
  /* Per-process CPU limit, in seconds.  */
  RLIMIT_CPU = 0,


  /* Largest file that can be created, in bytes.  */
  RLIMIT_FSIZE = 1,


  /* Maximum size of data segment, in bytes.  */
  RLIMIT_DATA = 2,


  /* Maximum size of stack segment, in bytes.  */
  RLIMIT_STACK = 3,


  /* Largest core file that can be created, in bytes.  */
  RLIMIT_CORE = 4,


  /* Largest resident set size, in bytes.
     This affects swapping; processes that are exceeding their
     resident set size will be more likely to have physical memory
     taken from them.  */
  __RLIMIT_RSS = 5,


  /* Number of open files.  */
  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE, /* BSD name for same.  */



  /* Address space limit.  */
  RLIMIT_AS = 9,


  /* Number of processes.  */
  __RLIMIT_NPROC = 6,


  /* Locked-in-memory address space.  */
  __RLIMIT_MEMLOCK = 8,


  /* Maximum number of file locks.  */
  __RLIMIT_LOCKS = 10,


  /* Maximum number of pending signals.  */
  __RLIMIT_SIGPENDING = 11,


  /* Maximum bytes in POSIX message queues.  */
  __RLIMIT_MSGQUEUE = 12,


  /* Maximum nice priority allowed to raise to.
     Nice levels 19 .. -20 correspond to 0 .. 39
     values of this resource limit.  */
  __RLIMIT_NICE = 13,


  /* Maximum realtime priority allowed for non-priviledged
     processes.  */
  __RLIMIT_RTPRIO = 14,


  __RLIMIT_NLIMITS = 15,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};

/* Value to indicate that there is no limit.  */


 




/* We can represent all limits.  */




/* Type for resource quantity measurement.  */

typedef __rlim_t rlim_t;
 


typedef __rlim64_t rlim64_t;

struct rlimit
  {
    /* The current (soft) limit.  */
    rlim_t rlim_cur;
    /* The hard limit.  */
    rlim_t rlim_max;
  };


struct rlimit64
  {
    /* The current (soft) limit.  */
    rlim64_t rlim_cur;
    /* The hard limit.  */
    rlim64_t rlim_max;
 };

/* Whose usage statistics do you want?  */
enum __rusage_who
{
  /* The calling process.  */
  RUSAGE_SELF = 0,


  /* All of its terminated child processes.  */
  RUSAGE_CHILDREN = -1



  ,
  /* The calling thread.  */
  RUSAGE_THREAD = 1

  /* Name for the same functionality on Solaris.  */


};


#line 1 "systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */


















































  
    
    
  


#line 177 "systems/redhat/usr/include/bits/resource.h" 2

/* Structure which says how much of each resource has been used.  */
struct rusage
  {
    /* Total amount of user time used.  */
    struct timeval ru_utime;
    /* Total amount of system time used.  */
    struct timeval ru_stime;
    /* Maximum resident set size (in kilobytes).  */
    long int ru_maxrss;
    /* Amount of sharing of text segment memory
       with other processes (kilobyte-seconds).  */
    long int ru_ixrss;
    /* Amount of data segment memory used (kilobyte-seconds).  */
    long int ru_idrss;
    /* Amount of stack memory used (kilobyte-seconds).  */
    long int ru_isrss;
    /* Number of soft page faults (i.e. those serviced by reclaiming
       a page from the list of pages awaiting reallocation.  */
    long int ru_minflt;
    /* Number of hard page faults (i.e. those that required I/O).  */
    long int ru_majflt;
    /* Number of times a process was swapped out of physical memory.  */
    long int ru_nswap;
    /* Number of input operations via the file system.  Note: This
       and `ru_oublock' do not include operations with the cache.  */
    long int ru_inblock;
    /* Number of output operations via the file system.  */
    long int ru_oublock;
    /* Number of IPC messages sent.  */
    long int ru_msgsnd;
    /* Number of IPC messages received.  */
    long int ru_msgrcv;
    /* Number of signals delivered.  */
    long int ru_nsignals;
    /* Number of voluntary context switches, i.e. because the process
       gave up the process before it had to (usually to wait for some
       resource to be available).  */
    long int ru_nvcsw;
    /* Number of involuntary context switches, i.e. a higher priority process
       became runnable or the current process used up its time slice.  */
    long int ru_nivcsw;
  };

/* Priority limits.  */



/* The type of the WHICH argument to `getpriority' and `setpriority',
   indicating what flavor of entity the WHO argument specifies.  */
enum __priority_which
{
  PRIO_PROCESS = 0,		/* WHO is a process ID.  */

  PRIO_PGRP = 1,		/* WHO is a process group ID.  */

  PRIO_USER = 2			/* WHO is a user ID.  */

};
#line 27 "systems/redhat/usr/include/sys/resource.h" 2







/* The X/Open standard defines that all the functions below must use
   `int' as the type for the first argument.  When we are compiling with
   GNU extensions we change this slightly to provide better error
   checking.  */

typedef enum __rlimit_resource __rlimit_resource_t;
typedef enum __rusage_who __rusage_who_t;
typedef enum __priority_which __priority_which_t;
 



/* Put the soft and hard limits for RESOURCE in *RLIMITS.
   Returns 0 if successful, -1 if not (and sets errno).  */

extern int getrlimit (__rlimit_resource_t __resource,
		      struct rlimit *__rlimits) __attribute__ ((__nothrow__));
 

				       
 



extern int getrlimit64 (__rlimit_resource_t __resource,
			struct rlimit64 *__rlimits) __attribute__ ((__nothrow__));

/* Set the soft and hard limits for RESOURCE to *RLIMITS.
   Only the super-user can increase hard limits.
   Return 0 if successful, -1 if not (and sets errno).  */

extern int setrlimit (__rlimit_resource_t __resource,
		      const struct rlimit *__rlimits) __attribute__ ((__nothrow__));
 

				       
			   
 



extern int setrlimit64 (__rlimit_resource_t __resource,
			const struct rlimit64 *__rlimits) __attribute__ ((__nothrow__));

/* Return resource usage information on process indicated by WHO
   and put it in *USAGE.  Returns 0 for success, -1 for failure.  */
extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__));

/* Return the highest priority of any process specified by WHICH and WHO
   (see above); if WHO is zero, the current process, process group, or user
   (as specified by WHO) is used.  A lower priority number means higher
   priority.  Priorities range from PRIO_MIN to PRIO_MAX (above).  */
extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__));

/* Set the priority of all processes specified by WHICH and WHO (see above)
   to PRIO.  Returns 0 on success, -1 on errors.  */
extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__));




#line 34 "systems/redhat/usr/include/sys/wait.h" 2

/* These macros could also be defined in <stdlib.h>.  */













 









 

  
    
    
  


 























/* The following values are used by the `waitid' function.  */

typedef enum
{
  P_ALL,		/* Wait for any child.  */
  P_PID,		/* Wait for specified process.  */
  P_PGID		/* Wait for members of process group.  */
} idtype_t;

/* Wait for a child to die.  When one does, put its status in *STAT_LOC
   and return its process ID.  For errors, return (pid_t) -1.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern __pid_t wait (__WAIT_STATUS __stat_loc);


/* Special values for the PID argument to `waitpid' and `wait4'.  */



/* Wait for a child matching PID to die.
   If PID is greater than 0, match any process whose process ID is PID.
   If PID is (pid_t) -1, match any process.
   If PID is (pid_t) 0, match any process with the
   same process group as the current process.
   If PID is less than -1, match any process whose
   process group is the absolute value of PID.
   If the WNOHANG bit is set in OPTIONS, and that child
   is not already dead, return (pid_t) 0.  If successful,
   return PID and store the dead child's status in STAT_LOC.
   Return (pid_t) -1 for errors.  If the WUNTRACED bit is
   set in OPTIONS, return status for stopped children; otherwise don't.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern __pid_t waitpid (__pid_t __pid, int *__stat_loc, int __options);



#line 1 "systems/redhat/usr/include/bits/siginfo.h" 1
/* siginfo_t, sigevent and constants.  Linux version.
   Copyright (C) 1997-2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 27 "systems/redhat/usr/include/bits/siginfo.h" 2






  
    
    
  







 


  
    
    
    

    
      
	

	 
	
	  
	    
	    
	  

	
	
	  
	    
	    
	    
	  

	
	
	  
	    
	    
	    
	  

	
	
	  
	    
	    
	    
	    
	    
	  

	
	
	  
	    
	  

	
	
	  
	    
	    
	  
      
  






















  

  

  

  

  

  

  

  

  







  

  

  

  

  

  

  

  






  

  

  

  

  

  

  

  






  

  






  

  

  






  

  






  

  

  

  

  

  






  

  

  

  

  

  












 


  
    
    
    

    
      
	

	

	

	
	  
	    
	    
	  
      
  








  

  

  


  




#line 145 "systems/redhat/usr/include/sys/wait.h" 2
/* Wait for a childing matching IDTYPE and ID to change the status and
   place appropriate information in *INFOP.
   If IDTYPE is P_PID, match any process whose process ID is ID.
   If IDTYPE is P_PGID, match any process whose process group is ID.
   If IDTYPE is P_ALL, match any process.
   If the WNOHANG bit is set in OPTIONS, and that child
   is not already dead, clear *INFOP and return 0.  If successful, store
   exit code and status in *INFOP.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int waitid (idtype_t __idtype, __id_t __id, siginfo_t *__infop,
		   int __options);


/* This being here makes the prototypes valid whether or not
   we have already included <sys/resource.h> to define `struct rusage'.  */
struct rusage;

/* Wait for a child to exit.  When one does, put its status in *STAT_LOC and
   return its process ID.  For errors return (pid_t) -1.  If USAGE is not
   nil, store information about the child's resource usage there.  If the
   WUNTRACED bit is set in OPTIONS, return status for stopped children;
   otherwise don't.  */
extern __pid_t wait3 (__WAIT_STATUS __stat_loc, int __options,
		      struct rusage * __usage) __attribute__ ((__nothrow__));


/* PID is like waitpid.  Other args are like wait3.  */
extern __pid_t wait4 (__pid_t __pid, __WAIT_STATUS __stat_loc, int __options,
		      struct rusage *__usage) __attribute__ ((__nothrow__));




#line 52 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/termios.h" 1
/* Copyright (C) 1991-1994,1996-1999,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 7.1-2 General Terminal Interface	<termios.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/termios.h" 2

/* We need `pid_t'.  */
#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 31 "systems/redhat/usr/include/termios.h" 2







/* Get the system-dependent definitions of `struct termios', `tcflag_t',
   `cc_t', `speed_t', and all the macros specifying the flag bits.  */
#line 1 "systems/redhat/usr/include/bits/termios.h" 1
/* termios type and macro definitions.  Linux version.
   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2003, 2005
	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




typedef unsigned char	cc_t;
typedef unsigned int	speed_t;
typedef unsigned int	tcflag_t;


struct termios
  {
    tcflag_t c_iflag;		/* input mode flags */
    tcflag_t c_oflag;		/* output mode flags */
    tcflag_t c_cflag;		/* control mode flags */
    tcflag_t c_lflag;		/* local mode flags */
    cc_t c_line;			/* line discipline */
    cc_t c_cc[32];		/* control characters */
    speed_t c_ispeed;		/* input speed */
    speed_t c_ospeed;		/* output speed */


  };

/* c_cc characters */


















/* c_iflag bits */
















/* c_oflag bits */




































/* c_cflag bit meaning */


























































/* c_lflag bits */




















/* tcflow() and TCXONC use these */





/* tcflush() and TCFLSH use these */




/* tcsetattr uses these */







#line 42 "systems/redhat/usr/include/termios.h" 2


/* Compare a character C to a value VAL from the `c_cc' array in a
   `struct termios'.  If VAL is _POSIX_VDISABLE, no character can match it.  */


/* Return the output baud rate stored in *TERMIOS_P.  */
extern speed_t cfgetospeed (const struct termios *__termios_p) __attribute__ ((__nothrow__));

/* Return the input baud rate stored in *TERMIOS_P.  */
extern speed_t cfgetispeed (const struct termios *__termios_p) __attribute__ ((__nothrow__));

/* Set the output baud rate stored in *TERMIOS_P to SPEED.  */
extern int cfsetospeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));

/* Set the input baud rate stored in *TERMIOS_P to SPEED.  */
extern int cfsetispeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));


/* Set both the input and output baud rates in *TERMIOS_OP to SPEED.  */
extern int cfsetspeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));

/* Put the state of FD into *TERMIOS_P.  */
extern int tcgetattr (int __fd, struct termios *__termios_p) __attribute__ ((__nothrow__));

/* Set the state of FD to *TERMIOS_P.
   Values for OPTIONAL_ACTIONS (TCSA*) are in <bits/termios.h>.  */
extern int tcsetattr (int __fd, int __optional_actions,
		      const struct termios *__termios_p) __attribute__ ((__nothrow__));



/* Set *TERMIOS_P to indicate raw mode.  */
extern void cfmakeraw (struct termios *__termios_p) __attribute__ ((__nothrow__));

/* Send zero bits on FD.  */
extern int tcsendbreak (int __fd, int __duration) __attribute__ ((__nothrow__));

/* Wait for pending output to be written on FD.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int tcdrain (int __fd);

/* Flush pending data on FD.
   Values for QUEUE_SELECTOR (TC{I,O,IO}FLUSH) are in <bits/termios.h>.  */
extern int tcflush (int __fd, int __queue_selector) __attribute__ ((__nothrow__));

/* Suspend or restart transmission on FD.
   Values for ACTION (TC[IO]{OFF,ON}) are in <bits/termios.h>.  */
extern int tcflow (int __fd, int __action) __attribute__ ((__nothrow__));



/* Get process group ID for session leader for controlling terminal FD.  */
extern __pid_t tcgetsid (int __fd) __attribute__ ((__nothrow__));


#line 1 "systems/redhat/usr/include/sys/ttydefaults.h" 1
/*-
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)ttydefaults.h	8.4 (Berkeley) 1/21/94
 */

/*
 * System wide defaults for terminal state.  Linux version.
 */



















 





 





















/*
 * #define TTYDEFCHARS to include an array of default control characters.
 */


	
	
	



#line 107 "systems/redhat/usr/include/termios.h" 2




#line 53 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/time.h" 1
/* Copyright (C) 1991-2003,2006,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.23 Date and time	<time.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 30 "systems/redhat/usr/include/time.h" 2





/* Get size_t and NULL from <stddef.h>.  */


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 40 "systems/redhat/usr/include/time.h" 2

/* This defines CLOCKS_PER_SEC, which is the number of processor clock
   ticks per second.  */
#line 1 "systems/redhat/usr/include/bits/time.h" 1
/* System-dependent timing definitions.  Generic version.
   Copyright (C) 1996,1997,1999-2002,2003,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <time.h> instead.
 */





/* ISO/IEC 9899:1990 7.12.1: <time.h>
   The macro `CLOCKS_PER_SEC' is the number per second of the value
   returned by the `clock' function. */
/* CAE XSH, Issue 4, Version 2: <time.h>
   The value of CLOCKS_PER_SEC is required to be 1 million on all
   XSI-conformant systems. */










/* Identifier for system-wide realtime clock.  */

/* Monotonic system-wide clock.  */

/* High-resolution timer from the CPU.  */

/* Thread-specific CPU-time clock.  */

/* Monotonic system-wide clock, not adjusted for frequency scaling.  */

/* Identifier for system-wide realtime clock, updated only on ticks.  */

/* Monotonic system-wide clock, updated only on ticks.  */


/* Flag to indicate time is absolute.  */













  
    
    
  


#line 44 "systems/redhat/usr/include/time.h" 2

/* This is the obsolete POSIX.1-1988 name for the same constant.  */



































































  
    
    
  







/* Used by other time functions.  */
struct tm
{
  int tm_sec;			/* Seconds.	[0-60] (1 leap second) */
  int tm_min;			/* Minutes.	[0-59] */
  int tm_hour;			/* Hours.	[0-23] */
  int tm_mday;			/* Day.		[1-31] */
  int tm_mon;			/* Month.	[0-11] */
  int tm_year;			/* Year	- 1900.  */
  int tm_wday;			/* Day of week.	[0-6] */
  int tm_yday;			/* Days in year.[0-365]	*/
  int tm_isdst;			/* DST.		[-1/0/1]*/


  long int tm_gmtoff;		/* Seconds east of UTC.  */
  const char *tm_zone;	/* Timezone abbreviation.  */
   
  

};





/* POSIX.1b structure for timer start values and intervals.  */
struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };

/* We can use a simple forward declaration.  */
struct sigevent;









/* Time used by the program so far (user time + system time).
   The result / CLOCKS_PER_SECOND is program time in seconds.  */
extern clock_t clock (void) __attribute__ ((__nothrow__));

/* Return the current time and put it in *TIMER if TIMER is not NULL.  */
extern time_t time (time_t *__timer) __attribute__ ((__nothrow__));

/* Return the difference between TIME1 and TIME0.  */
extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__)) __attribute__ ((__const__));

/* Return the `time_t' representation of TP and normalize TP.  */
extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));


/* Format TP into S according to FORMAT.
   Write no more than MAXSIZE characters and return the number
   of characters written, or 0 if it would exceed MAXSIZE.  */
extern size_t strftime (char *__restrict __s, size_t __maxsize,
			const char *__restrict __format,
			const struct tm *__restrict __tp) __attribute__ ((__nothrow__));



/* Parse S according to FORMAT and store binary time information in TP.
   The return value is a pointer to the first unparsed character in S.  */
extern char *strptime (const char *__restrict __s,
		       const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__));


/* Similar to the two functions above but take the information from
   the provided locale and not the global locale.  */
#line 1 "systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 217 "systems/redhat/usr/include/time.h" 2

extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
			  const char *__restrict __format,
			  const struct tm *__restrict __tp,
			  __locale_t __loc) __attribute__ ((__nothrow__));


extern char *strptime_l (const char *__restrict __s,
			 const char *__restrict __fmt, struct tm *__tp,
			 __locale_t __loc) __attribute__ ((__nothrow__));


/* Return the `struct tm' representation of *TIMER
   in Universal Coordinated Time (aka Greenwich Mean Time).  */
extern struct tm *gmtime (const time_t *__timer) __attribute__ ((__nothrow__));

/* Return the `struct tm' representation
   of *TIMER in the local timezone.  */
extern struct tm *localtime (const time_t *__timer) __attribute__ ((__nothrow__));



/* Return the `struct tm' representation of *TIMER in UTC,
   using *TP to store the result.  */
extern struct tm *gmtime_r (const time_t *__restrict __timer,
			    struct tm *__restrict __tp) __attribute__ ((__nothrow__));

/* Return the `struct tm' representation of *TIMER in local time,
   using *TP to store the result.  */
extern struct tm *localtime_r (const time_t *__restrict __timer,
			       struct tm *__restrict __tp) __attribute__ ((__nothrow__));


/* Return a string of the form "Day Mon dd hh:mm:ss yyyy\n"
   that is the representation of TP in this format.  */
extern char *asctime (const struct tm *__tp) __attribute__ ((__nothrow__));

/* Equivalent to `asctime (localtime (timer))'.  */
extern char *ctime (const time_t *__timer) __attribute__ ((__nothrow__));



/* Reentrant versions of the above functions.  */

/* Return in BUF a string of the form "Day Mon dd hh:mm:ss yyyy\n"
   that is the representation of TP in this format.  */
extern char *asctime_r (const struct tm *__restrict __tp,
			char *__restrict __buf) __attribute__ ((__nothrow__));

/* Equivalent to `asctime_r (localtime_r (timer, *TMP*), buf)'.  */
extern char *ctime_r (const time_t *__restrict __timer,
		      char *__restrict __buf) __attribute__ ((__nothrow__));

/* Defined in localtime.c.  */
extern char *__tzname[2];	/* Current timezone names.  */
extern int __daylight;		/* If daylight-saving time is ever in use.  */
extern long int __timezone;	/* Seconds west of UTC.  */



/* Same as above.  */
extern char *tzname[2];

/* Set time conversion information from the TZ environment variable.
   If TZ is not defined, a locale-dependent default is used.  */
extern void tzset (void) __attribute__ ((__nothrow__));


extern int daylight;
extern long int timezone;


/* Set the system time to *WHEN.
   This call is restricted to the superuser.  */
extern int stime (const time_t *__when) __attribute__ ((__nothrow__));

/* Nonzero if YEAR is a leap year (every 4 years,
   except every 100th isn't, and every 400th is).  */





/* Miscellaneous functions many Unices inherited from the public domain
   localtime package.  These are included only for compatibility.  */

/* Like `mktime', but for TP represents Universal Time, not local time.  */
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));

/* Another name for `mktime'.  */
extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));

/* Return the number of days in YEAR.  */
extern int dysize (int __year) __attribute__ ((__nothrow__))  __attribute__ ((__const__));


/* Pause execution for a number of nanoseconds.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int nanosleep (const struct timespec *__requested_time,
		      struct timespec *__remaining);


/* Get resolution of clock CLOCK_ID.  */
extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));

/* Get current value of clock CLOCK_ID and store it in TP.  */
extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));

/* Set clock CLOCK_ID to value TP.  */
extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     __attribute__ ((__nothrow__));


/* High-resolution sleep with the specified clock.

   This function is a cancellation point and therefore not marked with
   __THROW.  */
extern int clock_nanosleep (clockid_t __clock_id, int __flags,
			    const struct timespec *__req,
			    struct timespec *__rem);

/* Return clock ID for CPU-time clock.  */
extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));

/* Create new per-process timer using CLOCK_ID.  */
extern int timer_create (clockid_t __clock_id,
			 struct sigevent *__restrict __evp,
			 timer_t *__restrict __timerid) __attribute__ ((__nothrow__));

/* Delete timer TIMERID.  */
extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));

/* Set timer TIMERID to VALUE, returning old value in OVLAUE.  */
extern int timer_settime (timer_t __timerid, int __flags,
			  const struct itimerspec *__restrict __value,
			  struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));

/* Get current value of timer TIMERID and store it in VLAUE.  */
extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__));

/* Get expiration overrun for timer TIMERID.  */
extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));


/* Set to one of the following values to indicate an error.
     1  the DATEMSK environment variable is null or undefined,
     2  the template file cannot be opened for reading,
     3  failed to get file status information,
     4  the template file is not a regular file,
     5  an error is encountered while reading the template file,
     6  memory allication failed (not enough memory available),
     7  there is no line in the template that matches the input,
     8  invalid input specification Example: February 31 or a time is
        specified that can not be represented in a time_t (representing
	the time in seconds since 00:00:00 UTC, January 1, 1970) */
extern int getdate_err;

/* Parse the given string as a date specification and return a value
   representing the value.  The templates from the file identified by
   the environment variable DATEMSK are used.  In case of an error
   `getdate_err' is set.

   This function is a possible cancellation points and therefore not
   marked with __THROW.  */
extern struct tm *getdate (const char *__string);


/* Since `getdate' is not reentrant because of the use of `getdate_err'
   and the static buffer to return the result in, we provide a thread-safe
   variant.  The functionality is the same.  The result is returned in
   the buffer pointed to by RESBUFP and in case of an error the return
   value is != 0 with the same values as given above for `getdate_err'.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getdate_r (const char *__restrict __string,
		      struct tm *__restrict __resbufp);





#line 54 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/sys/param.h" 1
/* Copyright (C) 1995-1997,2000,2001,2003,2008 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







#line 1 "systems/redhat/usr/include/limits.h" 1
/* Copyright (C) 1991, 1992, 1996, 1997, 1998, 1999, 2000, 2005
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.10/5.2.4.2.1 Sizes of integer types	<limits.h>
 */












































 



















 






 













 /* Get the compiler's limits.h, which defines almost all the ISO constants.

    We put this #include_next outside the double inclusion check because
    it should be possible to include this file more than once and still get
    the definitions from gcc's header.  */




/* The <limits.h> files in some gcc versions don't define LLONG_MIN,
   LLONG_MAX, and ULLONG_MAX.  Instead only the values gcc defined for
   ages are available.  */












/* POSIX adds things to <limits.h>.  */
#line 1 "systems/redhat/usr/include/bits/posix1_lim.h" 1
/* Copyright (C) 1991-1993,96,98,2000-2003,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.9.2 Minimum Values	Added to <limits.h>
 *
 *	Never include this file directly; use <limits.h> instead.
 */



















 

































 




 















































































#line 147 "systems/redhat/usr/include/limits.h" 2


#line 1 "systems/redhat/usr/include/bits/posix2_lim.h" 1
/* Copyright (C) 1991, 1996, 1999, 2000, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; include <limits.h> instead.
 */





































































#line 151 "systems/redhat/usr/include/limits.h" 2


#line 1 "systems/redhat/usr/include/bits/xopen_lim.h" 1
/* Copyright (C) 1996, 1997, 1999, 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <limits.h> instead.
 */

/* Additional definitions from X/Open Portability Guide, Issue 4, Version 2
   System Interfaces and Headers, 4.16 <limits.h>

   Please note only the values which are not greater than the minimum
   stated in the standard document are listed.  The `sysconf' functions
   should be used to obtain the actual value.  */




































































 

 



 

 

 



 





 


 

 


 


 



#line 155 "systems/redhat/usr/include/limits.h" 2

#line 28 "systems/redhat/usr/include/sys/param.h" 2
#line 1 "systems/redhat/usr/include/linux/limits.h" 1




















#line 29 "systems/redhat/usr/include/sys/param.h" 2
#line 1 "systems/redhat/usr/include/linux/param.h" 1



#line 1 "systems/redhat/usr/include/asm/param.h" 1
#line 1 "systems/redhat/usr/include/asm-generic/param.h" 1
















#line 3 "systems/redhat/usr/include/asm/param.h" 2
#line 6 "systems/redhat/usr/include/linux/param.h" 2


#line 30 "systems/redhat/usr/include/sys/param.h" 2

/* The kernel headers defines ARG_MAX.  The value is wrong, though.  */




/* BSD names for some <limits.h> values.  */








/* The following are not really correct but it is a value we used for a
   long time and which seems to be usable.  People should not use NOFILE
   and NCARGS anyway.  */




#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 54 "systems/redhat/usr/include/sys/param.h" 2

/* Bit map related macros.  */





/* Macros for counting and rounding.  */







 



/* Macros for min/max.  */




/* Unit of `st_blocks'.  */




#line 55 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/pwd.h" 1
/* Copyright (C) 1991,1992,1995-2001,2003,2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 9.2.2 User Database Access	<pwd.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/pwd.h" 2



#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 32 "systems/redhat/usr/include/pwd.h" 2


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 35 "systems/redhat/usr/include/pwd.h" 2


/* The Single Unix specification says that some more types are
   available here.  */









/* The passwd structure.  */
struct passwd
{
  char *pw_name;		/* Username.  */
  char *pw_passwd;		/* Password.  */
  __uid_t pw_uid;		/* User ID.  */
  __gid_t pw_gid;		/* Group ID.  */
  char *pw_gecos;		/* Real name.  */
  char *pw_dir;			/* Home directory.  */
  char *pw_shell;		/* Shell program.  */
};




#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 66 "systems/redhat/usr/include/pwd.h" 2


/* Rewind the password-file stream.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void setpwent (void);

/* Close the password-file stream.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endpwent (void);

/* Read an entry from the password-file stream, opening it if necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct passwd *getpwent (void);


/* Read an entry from STREAM.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct passwd *fgetpwent (FILE *__stream);

/* Write the given entry onto the given stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int putpwent (const struct passwd *__restrict __p,
		     FILE *__restrict __f);

/* Search for an entry with a matching user ID.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct passwd *getpwuid (__uid_t __uid);

/* Search for an entry with a matching username.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct passwd *getpwnam (const char *__name);



/* Reasonable value for the buffer sized used in the reentrant
   functions below.  But better use `sysconf'.  */


/* Reentrant versions of some of the functions above.

   PLEASE NOTE: the `getpwent_r' function is not (yet) standardized.
   The interface may change in later versions of this library.  But
   the interface is designed following the principals used for the
   other reentrant functions so the chances are good this is what the
   POSIX people would choose.  */


/* This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getpwent_r (struct passwd *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct passwd **__restrict __result);

extern int getpwuid_r (__uid_t __uid,
		       struct passwd *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct passwd **__restrict __result);

extern int getpwnam_r (const char *__restrict __name,
		       struct passwd *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct passwd **__restrict __result);



/* Read an entry from STREAM.  This function is not standardized and
   probably never will.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fgetpwent_r (FILE *__restrict __stream,
			struct passwd *__restrict __resultbuf,
			char *__restrict __buffer, size_t __buflen,
			struct passwd **__restrict __result);



/* Re-construct the password-file line for the given uid
   in the given buffer.  This knows the format that the caller
   will expect, but this need not be the format of the password file.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getpw (__uid_t __uid, char *__buffer);




#line 56 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/grp.h" 1
/* Copyright (C) 1991,1992,1995-2001,2003,2004,2010
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 9.2.1 Group Database Access	<grp.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 29 "systems/redhat/usr/include/grp.h" 2



#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 33 "systems/redhat/usr/include/grp.h" 2


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 36 "systems/redhat/usr/include/grp.h" 2


/* For the Single Unix specification we must define this type here.  */




/* The group structure.	 */
struct group
  {
    char *gr_name;		/* Group name.	*/
    char *gr_passwd;		/* Password.	*/
    __gid_t gr_gid;		/* Group ID.	*/
    char **gr_mem;		/* Member list.	*/
  };




#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 57 "systems/redhat/usr/include/grp.h" 2


/* Rewind the group-file stream.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void setgrent (void);


/* Close the group-file stream.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern void endgrent (void);

/* Read an entry from the group-file stream, opening it if necessary.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct group *getgrent (void);


/* Read a group entry from STREAM.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct group *fgetgrent (FILE *__stream);


/* Write the given entry onto the given stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int putgrent (const struct group *__restrict __p,
		     FILE *__restrict __f);

/* Search for an entry with a matching group ID.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct group *getgrgid (__gid_t __gid);

/* Search for an entry with a matching group name.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern struct group *getgrnam (const char *__name);



/* Reasonable value for the buffer sized used in the reentrant
   functions below.  But better use `sysconf'.  */


/* Reentrant versions of some of the functions above.

   PLEASE NOTE: the `getgrent_r' function is not (yet) standardized.
   The interface may change in later versions of this library.  But
   the interface is designed following the principals used for the
   other reentrant functions so the chances are good this is what the
   POSIX people would choose.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */


extern int getgrent_r (struct group *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct group **__restrict __result);

/* Search for an entry with a matching group ID.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getgrgid_r (__gid_t __gid, struct group *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct group **__restrict __result);

/* Search for an entry with a matching group name.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */
extern int getgrnam_r (const char *__restrict __name,
		       struct group *__restrict __resultbuf,
		       char *__restrict __buffer, size_t __buflen,
		       struct group **__restrict __result);


/* Read a group entry from STREAM.  This function is not standardized
   an probably never will.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int fgetgrent_r (FILE *__restrict __stream,
			struct group *__restrict __resultbuf,
			char *__restrict __buffer, size_t __buflen,
			struct group **__restrict __result);




#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 181 "systems/redhat/usr/include/grp.h" 2

/* Set the group set for the current user to GROUPS (N of them).  */
extern int setgroups (size_t __n, const __gid_t *__groups) __attribute__ ((__nothrow__));

/* Store at most *NGROUPS members of the group set for USER into
   *GROUPS.  Also include GROUP.  The actual number of groups found is
   returned in *NGROUPS.  Return -1 if the if *NGROUPS is too small.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int getgrouplist (const char *__user, __gid_t __group,
			 __gid_t *__groups, int *__ngroups);

/* Initialize the group set for the current user
   by reading the group database and using all groups
   of which USER is a member.  Also include GROUP.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int initgroups (const char *__user, __gid_t __group);





#line 57 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#if definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
#if !definedEx(CONFIG_USE_BB_SHADOW)
/* If using busybox's shadow implementation, do not include the shadow.h
 * header as the toolchain may not provide it at all.
 */
#line 1 "systems/redhat/usr/include/shadow.h" 1
/* Copyright (C) 1996, 1997, 1998, 1999, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/* Declaration of types and functions for shadow password suite.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "systems/redhat/usr/include/shadow.h" 2

#line 1 "systems/redhat/usr/include/paths.h" 1
/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)paths.h	8.1 (Berkeley) 6/2/93
 */




/* Default search path. */

/* All standard utilities path. */






























/* Provide trailing slash, since mostly used for building pathnames. */







#line 28 "systems/redhat/usr/include/shadow.h" 2


#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 31 "systems/redhat/usr/include/shadow.h" 2

#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 33 "systems/redhat/usr/include/shadow.h" 2

/* Paths to the user database files.  */





/* Structure of the password file.  */
struct spwd
  {
    char *sp_namp;		/* Login name.  */
    char *sp_pwdp;		/* Encrypted password.  */
    long int sp_lstchg;		/* Date of last change.  */
    long int sp_min;		/* Minimum number of days between changes.  */
    long int sp_max;		/* Maximum number of days between changes.  */
    long int sp_warn;		/* Number of days to warn user to change
				   the password.  */
    long int sp_inact;		/* Number of days the account may be
				   inactive.  */
    long int sp_expire;		/* Number of days since 1970-01-01 until
				   account expires.  */
    unsigned long int sp_flag;	/* Reserved.  */
  };


/* Open database for reading.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern void setspent (void);

/* Close database.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern void endspent (void);

/* Get next entry from database, perhaps after opening the file.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct spwd *getspent (void);

/* Get shadow entry matching NAME.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct spwd *getspnam (const char *__name);

/* Read shadow entry from STRING.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct spwd *sgetspent (const char *__string);

/* Read next shadow entry from STREAM.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern struct spwd *fgetspent (FILE *__stream);

/* Write line containing shadow password entry to stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */
extern int putspent (const struct spwd *__p, FILE *__stream);



/* Reentrant versions of some of the functions above.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */
extern int getspent_r (struct spwd *__result_buf, char *__buffer,
		       size_t __buflen, struct spwd **__result);

extern int getspnam_r (const char *__name, struct spwd *__result_buf,
		       char *__buffer, size_t __buflen,
		       struct spwd **__result);

extern int sgetspent_r (const char *__string, struct spwd *__result_buf,
			char *__buffer, size_t __buflen,
			struct spwd **__result);

extern int fgetspent_r (FILE *__stream, struct spwd *__result_buf,
			char *__buffer, size_t __buflen,
			struct spwd **__result);

/* The simple locking functionality provided here is not suitable for
   multi-threaded applications.  */

/* Protect password file against multi writers.  */
extern int lckpwdf (void) __attribute__ ((__nothrow__));

/* Unlock password file.  */
extern int ulckpwdf (void) __attribute__ ((__nothrow__));




#line 63 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#endif
#endif





#line 1 "systems/redhat/usr/include/mntent.h" 1
/* Utilities for reading/writing fstab, mtab, etc.
   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/mntent.h" 2

#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 27 "systems/redhat/usr/include/mntent.h" 2
#line 1 "systems/redhat/usr/include/paths.h" 1
/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)paths.h	8.1 (Berkeley) 6/2/93
 */

#if (!definedEx(CONFIG_FEATURE_SHADOWPASSWDS) || definedEx(CONFIG_USE_BB_SHADOW))


/* Default search path. */

/* All standard utilities path. */






























/* Provide trailing slash, since mostly used for building pathnames. */






#endif
#line 28 "systems/redhat/usr/include/mntent.h" 2


/* File listing canonical interesting mount points.  */


/* File listing currently active mount points.  */



/* General filesystem types.  */





/* Generic mount options.  */










/* Structure describing a mount table entry.  */
struct mntent
  {
    char *mnt_fsname;		/* Device or server for filesystem.  */
    char *mnt_dir;		/* Directory mounted on.  */
    char *mnt_type;		/* Type of filesystem: ufs, nfs, etc.  */
    char *mnt_opts;		/* Comma-separated options for fs.  */
    int mnt_freq;		/* Dump frequency (in days).  */
    int mnt_passno;		/* Pass number for `fsck'.  */
  };


/* Prepare to begin reading and/or writing mount table entries from the
   beginning of FILE.  MODE is as for `fopen'.  */
extern FILE *setmntent (const char *__file, const char *__mode) __attribute__ ((__nothrow__));

/* Read one mount table entry from STREAM.  Returns a pointer to storage
   reused on the next call, or null for EOF or error (use feof/ferror to
   check).  */
extern struct mntent *getmntent (FILE *__stream) __attribute__ ((__nothrow__));


/* Reentrant version of the above function.  */
extern struct mntent *getmntent_r (FILE *__restrict __stream,
				   struct mntent *__restrict __result,
				   char *__restrict __buffer,
				   int __bufsize) __attribute__ ((__nothrow__));

/* Write the mount table entry described by MNT to STREAM.
   Return zero on success, nonzero on failure.  */
extern int addmntent (FILE *__restrict __stream,
		      const struct mntent *__restrict __mnt) __attribute__ ((__nothrow__));

/* Close a stream opened with `setmntent'.  */
extern int endmntent (FILE *__stream) __attribute__ ((__nothrow__));

/* Search MNT->mnt_opts for an option matching OPT.
   Returns the address of the substring, or null if none found.  */
extern char *hasmntopt (const struct mntent *__mnt,
			const char *__opt) __attribute__ ((__nothrow__));





#line 71 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2


#line 1 "systems/redhat/usr/include/sys/statfs.h" 1
/* Definitions for getting information about a filesystem.
   Copyright (C) 1996, 1997, 1998, 1999, 2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 25 "systems/redhat/usr/include/sys/statfs.h" 2

/* Get the system-specific definition of `struct statfs'.  */
#line 1 "systems/redhat/usr/include/bits/statfs.h" 1
/* Copyright (C) 1997, 1998, 2000, 2002, 2003 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/bits/types.h" 1
/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * Never include this file directly; use <sys/types.h> instead.
 */























 






 

 

  



  

















































 









 




































































#line 25 "systems/redhat/usr/include/bits/statfs.h" 2

struct statfs
  {
    long int f_type;
    long int f_bsize;

    __fsblkcnt_t f_blocks;
    __fsblkcnt_t f_bfree;
    __fsblkcnt_t f_bavail;
    __fsfilcnt_t f_files;
    __fsfilcnt_t f_ffree;
     
    
    
    
    

    __fsid_t f_fsid;
    long int f_namelen;
    long int f_frsize;
    long int f_spare[5];
  };


struct statfs64
  {
    long int f_type;
    long int f_bsize;
    __fsblkcnt64_t f_blocks;
    __fsblkcnt64_t f_bfree;
    __fsblkcnt64_t f_bavail;
    __fsfilcnt64_t f_files;
    __fsfilcnt64_t f_ffree;
    __fsid_t f_fsid;
    long int f_namelen;
    long int f_frsize;
    long int f_spare[5];
  };

/* Tell code we have these members.  */


#line 28 "systems/redhat/usr/include/sys/statfs.h" 2



/* Return information about the filesystem on which FILE resides.  */

extern int statfs (const char *__file, struct statfs *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
 

			   
			   
 



extern int statfs64 (const char *__file, struct statfs64 *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));

/* Return information about the filesystem containing the file FILDES
   refers to.  */

extern int fstatfs (int __fildes, struct statfs *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));
 

			   
 



extern int fstatfs64 (int __fildes, struct statfs64 *__buf)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));




#line 74 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2

/* Don't do this here:
 * #include <sys/sysinfo.h>
 * Some linux/ includes pull in conflicting definition
 * of struct sysinfo (only in some toolchanins), which breaks build.
 * Include sys/sysinfo.h only in those files which need it.
 */
#if definedEx(CONFIG_SELINUX)
#line 1 "systems/redhat/usr/include/selinux/selinux.h" 1



#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 6 "systems/redhat/usr/include/selinux/selinux.h" 2
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */
























































 





































#line 7 "systems/redhat/usr/include/selinux/selinux.h" 2




/* Return 1 if we are running on a SELinux kernel, or 0 if not or -1 if we get an error. */
extern int is_selinux_enabled(void);
/* Return 1 if we are running on a SELinux MLS kernel, or 0 otherwise. */
extern int is_selinux_mls_enabled(void);

typedef char *security_context_t;

/* Free the memory allocated for a context by any of the below get* calls. */
extern void freecon(security_context_t con);

/* Free the memory allocated for a context array by security_compute_user. */
extern void freeconary(security_context_t * con);

/* Wrappers for the /proc/pid/attr API. */

/* Get current context, and set *con to refer to it.
   Caller must free via freecon. */
extern int getcon(security_context_t * con);
extern int getcon_raw(security_context_t * con);

/* Set the current security context to con.  
   Note that use of this function requires that the entire application
   be trusted to maintain any desired separation between the old and new 
   security contexts, unlike exec-based transitions performed via setexeccon.  
   When possible, decompose your application and use setexeccon()+execve() 
   instead. Note that the application may lose access to its open descriptors
   as a result of a setcon() unless policy allows it to use descriptors opened
   by the old context. */
extern int setcon(security_context_t con);
extern int setcon_raw(security_context_t con);

/* Get context of process identified by pid, and 
   set *con to refer to it.  Caller must free via freecon. */
extern int getpidcon(pid_t pid, security_context_t * con);
extern int getpidcon_raw(pid_t pid, security_context_t * con);

/* Get previous context (prior to last exec), and set *con to refer to it.
   Caller must free via freecon. */
extern int getprevcon(security_context_t * con);
extern int getprevcon_raw(security_context_t * con);

/* Get exec context, and set *con to refer to it.
   Sets *con to NULL if no exec context has been set, i.e. using default.
   If non-NULL, caller must free via freecon. */
extern int getexeccon(security_context_t * con);
extern int getexeccon_raw(security_context_t * con);

/* Set exec security context for the next execve. 
   Call with NULL if you want to reset to the default. */
extern int setexeccon(security_context_t con);
extern int setexeccon_raw(security_context_t con);

/* Get fscreate context, and set *con to refer to it.
   Sets *con to NULL if no fs create context has been set, i.e. using default.
   If non-NULL, caller must free via freecon. */
extern int getfscreatecon(security_context_t * con);
extern int getfscreatecon_raw(security_context_t * con);

/* Set the fscreate security context for subsequent file creations.
   Call with NULL if you want to reset to the default. */
extern int setfscreatecon(security_context_t context);
extern int setfscreatecon_raw(security_context_t context);

/* Get keycreate context, and set *con to refer to it.
   Sets *con to NULL if no key create context has been set, i.e. using default.
   If non-NULL, caller must free via freecon. */
extern int getkeycreatecon(security_context_t * con);
extern int getkeycreatecon_raw(security_context_t * con);

/* Set the keycreate security context for subsequent key creations.
   Call with NULL if you want to reset to the default. */
extern int setkeycreatecon(security_context_t context);
extern int setkeycreatecon_raw(security_context_t context);

/* Get sockcreate context, and set *con to refer to it.
   Sets *con to NULL if no socket create context has been set, i.e. using default.
   If non-NULL, caller must free via freecon. */
extern int getsockcreatecon(security_context_t * con);
extern int getsockcreatecon_raw(security_context_t * con);

/* Set the sockcreate security context for subsequent socket creations.
   Call with NULL if you want to reset to the default. */
extern int setsockcreatecon(security_context_t context);
extern int setsockcreatecon_raw(security_context_t context);

/* Wrappers for the xattr API. */

/* Get file context, and set *con to refer to it.
   Caller must free via freecon. */
extern int getfilecon(const char *path, security_context_t * con);
extern int getfilecon_raw(const char *path, security_context_t * con);
extern int lgetfilecon(const char *path, security_context_t * con);
extern int lgetfilecon_raw(const char *path, security_context_t * con);
extern int fgetfilecon(int fd, security_context_t * con);
extern int fgetfilecon_raw(int fd, security_context_t * con);

/* Set file context */
extern int setfilecon(const char *path, security_context_t con);
extern int setfilecon_raw(const char *path, security_context_t con);
extern int lsetfilecon(const char *path, security_context_t con);
extern int lsetfilecon_raw(const char *path, security_context_t con);
extern int fsetfilecon(int fd, security_context_t con);
extern int fsetfilecon_raw(int fd, security_context_t con);

/* Wrappers for the socket API */

/* Get context of peer socket, and set *con to refer to it.
   Caller must free via freecon. */
extern int getpeercon(int fd, security_context_t * con);
extern int getpeercon_raw(int fd, security_context_t * con);

/* Wrappers for the selinuxfs (policy) API. */

typedef unsigned int access_vector_t;
typedef unsigned short security_class_t;

struct av_decision {
	access_vector_t allowed;
	access_vector_t decided;
	access_vector_t auditallow;
	access_vector_t auditdeny;
	unsigned int seqno;
	unsigned int flags;
};

/* Definitions of av_decision.flags */


/* Structure for passing options, used by AVC and label subsystems */
struct selinux_opt {
	int type;
	const char *value;
};

/* Callback facilities */
union selinux_callback {
	/* log the printf-style format and arguments,
	   with the type code indicating the type of message */
	int 

__attribute__ ((format(printf, 2, 3)))

	(*func_log) (int type, const char *fmt, ...);
	/* store a string representation of auditdata (corresponding
	   to the given security class) into msgbuf. */
	int (*func_audit) (void *auditdata, security_class_t cls,
			   char *msgbuf, size_t msgbufsize);
	/* validate the supplied context, modifying if necessary */
	int (*func_validate) (security_context_t *ctx);
	/* netlink callback for setenforce message */
	int (*func_setenforce) (int enforcing);
	/* netlink callback for policyload message */
	int (*func_policyload) (int seqno);
};







extern union selinux_callback selinux_get_callback(int type);
extern void selinux_set_callback(int type, union selinux_callback cb);

	/* Logging type codes, passed to the logging callback */





/* Compute an access decision. */
extern int security_compute_av(security_context_t scon,
			       security_context_t tcon,
			       security_class_t tclass,
			       access_vector_t requested,
			       struct av_decision *avd);
extern int security_compute_av_raw(security_context_t scon,
				   security_context_t tcon,
				   security_class_t tclass,
				   access_vector_t requested,
				   struct av_decision *avd);

extern int security_compute_av_flags(security_context_t scon,
				     security_context_t tcon,
				     security_class_t tclass,
				     access_vector_t requested,
				     struct av_decision *avd);
extern int security_compute_av_flags_raw(security_context_t scon,
					 security_context_t tcon,
					 security_class_t tclass,
					 access_vector_t requested,
					 struct av_decision *avd);

/* Compute a labeling decision and set *newcon to refer to it.
   Caller must free via freecon. */
extern int security_compute_create(security_context_t scon,
				   security_context_t tcon,
				   security_class_t tclass,
				   security_context_t * newcon);
extern int security_compute_create_raw(security_context_t scon,
				       security_context_t tcon,
				       security_class_t tclass,
				       security_context_t * newcon);

/* Compute a relabeling decision and set *newcon to refer to it.
   Caller must free via freecon. */
extern int security_compute_relabel(security_context_t scon,
				    security_context_t tcon,
				    security_class_t tclass,
				    security_context_t * newcon);
extern int security_compute_relabel_raw(security_context_t scon,
					security_context_t tcon,
					security_class_t tclass,
					security_context_t * newcon);

/* Compute a polyinstantiation member decision and set *newcon to refer to it.
   Caller must free via freecon. */
extern int security_compute_member(security_context_t scon,
				   security_context_t tcon,
				   security_class_t tclass,
				   security_context_t * newcon);
extern int security_compute_member_raw(security_context_t scon,
				       security_context_t tcon,
				       security_class_t tclass,
				       security_context_t * newcon);

/* Compute the set of reachable user contexts and set *con to refer to 
   the NULL-terminated array of contexts.  Caller must free via freeconary. */
extern int security_compute_user(security_context_t scon,
				 const char *username,
				 security_context_t ** con);
extern int security_compute_user_raw(security_context_t scon,
				     const char *username,
				     security_context_t ** con);

/* Load a policy configuration. */
extern int security_load_policy(void *data, size_t len);

/* Get the context of an initial kernel security identifier by name.  
   Caller must free via freecon */
extern int security_get_initial_context(const char *name,
					security_context_t * con);
extern int security_get_initial_context_raw(const char *name,
					    security_context_t * con);

/*
 * Make a policy image and load it.
 * This function provides a higher level interface for loading policy
 * than security_load_policy, internally determining the right policy
 * version, locating and opening the policy file, mapping it into memory,
 * manipulating it as needed for current boolean settings and/or local 
 * definitions, and then calling security_load_policy to load it.
 *
 * 'preservebools' is a boolean flag indicating whether current 
 * policy boolean values should be preserved into the new policy (if 1) 
 * or reset to the saved policy settings (if 0).  The former case is the
 * default for policy reloads, while the latter case is an option for policy
 * reloads but is primarily for the initial policy load.
 */
extern int selinux_mkload_policy(int preservebools);

/* 
 * Perform the initial policy load.
 * This function determines the desired enforcing mode, sets the
 * the *enforce argument accordingly for the caller to use, sets the 
 * SELinux kernel enforcing status to match it, and loads the policy.
 * It also internally handles the initial selinuxfs mount required to
 * perform these actions.
 *
 * The function returns 0 if everything including the policy load succeeds.
 * In this case, init is expected to re-exec itself in order to transition
 * to the proper security context.
 * Otherwise, the function returns -1, and init must check *enforce to
 * determine how to proceed.  If enforcing (*enforce > 0), then init should
 * halt the system.  Otherwise, init may proceed normally without a re-exec.
 */
extern int selinux_init_load_policy(int *enforce);

/* Translate boolean strict to name value pair. */
typedef struct {
	char *name;
	int value;
} SELboolean;
/* save a list of booleans in a single transaction.  */
extern int security_set_boolean_list(size_t boolcnt,
				     SELboolean * boollist, int permanent);

/* Load policy boolean settings.
   Path may be NULL, in which case the booleans are loaded from
   the active policy boolean configuration file. */
extern int security_load_booleans(char *path);

/* Check the validity of a security context. */
extern int security_check_context(security_context_t con);
extern int security_check_context_raw(security_context_t con);

/* Canonicalize a security context. */
extern int security_canonicalize_context(security_context_t con,
					 security_context_t * canoncon);
extern int security_canonicalize_context_raw(security_context_t con,
					     security_context_t * canoncon);

/* Get the enforce flag value. */
extern int security_getenforce(void);

/* Set the enforce flag value. */
extern int security_setenforce(int value);

/* Get the behavior for undefined classes/permissions */
extern int security_deny_unknown(void);

/* Disable SELinux at runtime (must be done prior to initial policy load). */
extern int security_disable(void);

/* Get the policy version number. */
extern int security_policyvers(void);

/* Get the boolean names */
extern int security_get_boolean_names(char ***names, int *len);

/* Get the pending value for the boolean */
extern int security_get_boolean_pending(const char *name);

/* Get the active value for the boolean */
extern int security_get_boolean_active(const char *name);

/* Set the pending value for the boolean */
extern int security_set_boolean(const char *name, int value);

/* Commit the pending values for the booleans */
extern int security_commit_booleans(void);

/* Userspace class mapping support */
struct security_class_mapping {
	const char *name;
	const char *perms[sizeof(access_vector_t) * 8 + 1];
};

extern int selinux_set_mapping(struct security_class_mapping *map);

/* Common helpers */

/* Convert between security class values and string names */
extern security_class_t string_to_security_class(const char *name);
extern const char *security_class_to_string(security_class_t cls);

/* Convert between individual access vector permissions and string names */
extern const char *security_av_perm_to_string(security_class_t tclass,
					      access_vector_t perm);
extern access_vector_t string_to_av_perm(security_class_t tclass,
					 const char *name);

/* Returns an access vector in a string representation.  User must free the
 * returned string via free(). */
extern int security_av_string(security_class_t tclass,
			      access_vector_t av, char **result);

/* Display an access vector in a string representation. */
extern void print_access_vector(security_class_t tclass, access_vector_t av);

/* Set the function used by matchpathcon_init when displaying
   errors about the file_contexts configuration.  If not set,
   then this defaults to fprintf(stderr, fmt, ...). */
extern void set_matchpathcon_printf(void (*f) (const char *fmt, ...));

/* Set the function used by matchpathcon_init when checking the
   validity of a context in the file contexts configuration.  If not set,
   then this defaults to a test based on security_check_context().  
   The function is also responsible for reporting any such error, and
   may include the 'path' and 'lineno' in such error messages. */
extern void set_matchpathcon_invalidcon(int (*f) (const char *path,
						  unsigned lineno,
						  char *context));

/* Same as above, but also allows canonicalization of the context,
   by changing *context to refer to the canonical form.  If not set,
   and invalidcon is also not set, then this defaults to calling
   security_canonicalize_context(). */
extern void set_matchpathcon_canoncon(int (*f) (const char *path,
						unsigned lineno,
						char **context));

/* Set flags controlling operation of matchpathcon_init or matchpathcon. */



extern void set_matchpathcon_flags(unsigned int flags);

/* Load the file contexts configuration specified by 'path'
   into memory for use by subsequent matchpathcon calls.  
   If 'path' is NULL, then load the active file contexts configuration,
   i.e. the path returned by selinux_file_context_path().
   Unless the MATCHPATHCON_BASEONLY flag has been set, this
   function also checks for a 'path'.homedirs file and 
   a 'path'.local file and loads additional specifications 
   from them if present. */
extern int matchpathcon_init(const char *path);

/* Same as matchpathcon_init, but only load entries with
   regexes that have stems that are prefixes of 'prefix'. */
extern int matchpathcon_init_prefix(const char *path, const char *prefix);

/* Free the memory allocated by matchpathcon_init. */
extern void matchpathcon_fini(void);

/* Match the specified pathname and mode against the file contexts
   configuration and set *con to refer to the resulting context.
   'mode' can be 0 to disable mode matching.
   Caller must free via freecon.
   If matchpathcon_init has not already been called, then this function
   will call it upon its first invocation with a NULL path. */
extern int matchpathcon(const char *path,
			mode_t mode, security_context_t * con);

/* Same as above, but return a specification index for 
   later use in a matchpathcon_filespec_add() call - see below. */
extern int matchpathcon_index(const char *path,
			      mode_t mode, security_context_t * con);

/* Maintain an association between an inode and a specification index,
   and check whether a conflicting specification is already associated
   with the same inode (e.g. due to multiple hard links).  If so, then
   use the latter of the two specifications based on their order in the 
   file contexts configuration.  Return the used specification index. */
extern int matchpathcon_filespec_add(ino_t ino, int specind, const char *file);

/* Destroy any inode associations that have been added, e.g. to restart
   for a new filesystem. */
extern void matchpathcon_filespec_destroy(void);

/* Display statistics on the hash table usage for the associations. */
extern void matchpathcon_filespec_eval(void);

/* Check to see whether any specifications had no matches and report them.
   The 'str' is used as a prefix for any warning messages. */
extern void matchpathcon_checkmatches(char *str);

/* Match the specified media and against the media contexts 
   configuration and set *con to refer to the resulting context.
   Caller must free con via freecon. */
extern int matchmediacon(const char *media, security_context_t * con);

/*
  selinux_getenforcemode reads the /etc/selinux/config file and determines 
  whether the machine should be started in enforcing (1), permissive (0) or 
  disabled (-1) mode.
 */
extern int selinux_getenforcemode(int *enforce);

/*
  selinux_getpolicytype reads the /etc/selinux/config file and determines 
  what the default policy for the machine is.  Calling application must 
  free policytype.
 */
extern int selinux_getpolicytype(char **policytype);

/*
  selinux_policy_root reads the /etc/selinux/config file and returns 
  the directory path under which the compiled policy file and context 
  configuration files exist.
 */
extern const char *selinux_policy_root(void);

/* These functions return the paths to specific files under the 
   policy root directory. */
extern const char *selinux_binary_policy_path(void);
extern const char *selinux_failsafe_context_path(void);
extern const char *selinux_removable_context_path(void);
extern const char *selinux_default_context_path(void);
extern const char *selinux_user_contexts_path(void);
extern const char *selinux_file_context_path(void);
extern const char *selinux_file_context_homedir_path(void);
extern const char *selinux_file_context_local_path(void);
extern const char *selinux_file_context_subs_path(void);
extern const char *selinux_homedir_context_path(void);
extern const char *selinux_media_context_path(void);
extern const char *selinux_virtual_domain_context_path(void);
extern const char *selinux_virtual_image_context_path(void);
extern const char *selinux_x_context_path(void);
extern const char *selinux_sepgsql_context_path(void);
extern const char *selinux_contexts_path(void);
extern const char *selinux_securetty_types_path(void);
extern const char *selinux_booleans_path(void);
extern const char *selinux_customizable_types_path(void);
extern const char *selinux_users_path(void);
extern const char *selinux_usersconf_path(void);
extern const char *selinux_translations_path(void);
extern const char *selinux_colors_path(void);
extern const char *selinux_netfilter_context_path(void);
extern const char *selinux_path(void);

/* Check a permission in the passwd class.
   Return 0 if granted or -1 otherwise. */
extern int selinux_check_passwd_access(access_vector_t requested);
extern int checkPasswdAccess(access_vector_t requested);

/* Check if the tty_context is defined as a securetty
   Return 0 if secure, < 0 otherwise. */
extern int selinux_check_securetty_context(security_context_t tty_context);

/* Set the path to the selinuxfs mount point explicitly.
   Normally, this is determined automatically during libselinux 
   initialization, but this is not always possible, e.g. for /sbin/init
   which performs the initial mount of selinuxfs. */
void set_selinuxmnt(char *mnt);

/* Execute a helper for rpm in an appropriate security context. */
extern int rpm_execcon(unsigned int verified,
		       const char *filename,
		       char *const argv[], char *const envp[]);

/* Returns whether a file context is customizable, and should not 
   be relabeled . */
extern int is_context_customizable(security_context_t scontext);

/* Perform context translation between the human-readable format
   ("translated") and the internal system format ("raw"). 
   Caller must free the resulting context via freecon.  
   Returns -1 upon an error or 0 otherwise.
   If passed NULL, sets the returned context to NULL and returns 0. */
extern int selinux_trans_to_raw_context(security_context_t trans,
					security_context_t * rawp);
extern int selinux_raw_to_trans_context(security_context_t raw,
					security_context_t * transp);

/* Perform context translation between security contexts
   and display colors.  Returns a space-separated list of ten
   ten hex RGB triples prefixed by hash marks, e.g. "#ff0000".
   Caller must free the resulting string via free.
   Returns -1 upon an error or 0 otherwise. */
extern int selinux_raw_context_to_color(security_context_t raw,
					char **color_str);

/* Get the SELinux username and level to use for a given Linux username. 
   These values may then be passed into the get_ordered_context_list*
   and get_default_context* functions to obtain a context for the user.
   Returns 0 on success or -1 otherwise.
   Caller must free the returned strings via free. */
extern int getseuserbyname(const char *linuxuser, char **seuser, char **level);

/* Get the SELinux username and level to use for a given Linux username and service. 
   These values may then be passed into the get_ordered_context_list*
   and get_default_context* functions to obtain a context for the user.
   Returns 0 on success or -1 otherwise.
   Caller must free the returned strings via free. */
extern int getseuser(const char *username, const char *service, 
		     char **r_seuser, char **r_level);

/* Compare two file contexts, return 0 if equivalent. */
extern int selinux_file_context_cmp(const security_context_t a,
			     const security_context_t b);

/* 
 * Verify the context of the file 'path' against policy.
 * Return 0 if correct. 
 */
extern int selinux_file_context_verify(const char *path, mode_t mode);

/* This function sets the file context on to the system defaults returns 0 on success */
extern int selinux_lsetfilecon_default(const char *path);

/* 
 * Force a reset of the loaded configuration
 * WARNING: This is not thread safe. Be very sure that no other threads
 * are calling into libselinux when this is called.
 */
extern void selinux_reset_config(void);





#line 83 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/selinux/context.h" 1






/*
 * Functions to deal with security contexts in user space.
 */

	typedef struct {
		void *ptr;
	} context_s_t;

	typedef context_s_t *context_t;

/* Return a new context initialized to a context string */

	extern context_t context_new(const char *);

/* 
 * Return a pointer to the string value of the context_t
 * Valid until the next call to context_str or context_free 
 * for the same context_t*
 */

	extern char *context_str(context_t);

/* Free the storage used by a context */
	extern void context_free(context_t);

/* Get a pointer to the string value of a context component */

	extern const char *context_type_get(context_t);
	extern const char *context_range_get(context_t);
	extern const char *context_role_get(context_t);
	extern const char *context_user_get(context_t);

/* Set a context component.  Returns nonzero if unsuccessful */

	extern int context_type_set(context_t, const char *);
	extern int context_range_set(context_t, const char *);
	extern int context_role_set(context_t, const char *);
	extern int context_user_set(context_t, const char *);





#line 84 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/selinux/flask.h" 1
/* This file is automatically generated.  Do not edit. */



/*
 * Security object class definitions
 */










































































/*
 * Security identifier indices for initial entities
 */































#line 85 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "systems/redhat/usr/include/selinux/av_permissions.h" 1
/* This file is automatically generated.  Do not edit. */

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 86 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#endif

#line 1 "systems/redhat/usr/include/utmp.h" 1
/* Copyright (C) 1993, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/utmp.h" 2

#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 26 "systems/redhat/usr/include/utmp.h" 2




/* Get system dependent values and data structures.  */
#line 1 "systems/redhat/usr/include/bits/utmp.h" 1
/* The `struct utmp' type, describing entries in the utmp file.  GNU version.
   Copyright (C) 1993, 1996, 1997, 1998, 1999, 2002
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/paths.h" 1
/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)paths.h	8.1 (Berkeley) 6/2/93
 */













































#line 27 "systems/redhat/usr/include/bits/utmp.h" 2
#line 1 "systems/redhat/usr/include/sys/time.h" 1
/* Copyright (C) 1991-1994,1996-2003,2005,2006,2009
	Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */



































  
    
    
  


 







			 





			 
     






		    



  
    
    

    
    

    

    

  




  
    
    
    
    
  





 




		      





		      
		      





     




     









		      

































#line 28 "systems/redhat/usr/include/bits/utmp.h" 2
#line 1 "systems/redhat/usr/include/sys/types.h" 1
/* Copyright (C) 1991,1992,1994-2002,2006,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */



























 






























 




































































 








 



 






















































 
























#line 29 "systems/redhat/usr/include/bits/utmp.h" 2
#line 1 "systems/redhat/usr/include/bits/wordsize.h" 1
/* Determine the wordsize from the preprocessor defines.  */




 

#line 30 "systems/redhat/usr/include/bits/utmp.h" 2







/* The structure describing an entry in the database of
   previous logins.  */
struct lastlog
  {

    int32_t ll_time;
     

    char ll_line[32];
    char ll_host[256];
  };


/* The structure describing the status of a terminated process.  This
   type is used in `struct utmp' below.  */
struct exit_status
  {
    short int e_termination;	/* Process termination status.  */
    short int e_exit;		/* Process exit status.  */
  };


/* The structure describing an entry in the user accounting database.  */
struct utmp
{
  short int ut_type;		/* Type of login.  */
  pid_t ut_pid;			/* Process ID of login process.  */
  char ut_line[32];	/* Devicename.  */
  char ut_id[4];		/* Inittab ID.  */
  char ut_user[32];	/* Username.  */
  char ut_host[256];	/* Hostname for remote login.  */
  struct exit_status ut_exit;	/* Exit status of a process marked
				   as DEAD_PROCESS.  */
/* The ut_session and ut_tv fields must be the same size when compiled
   32- and 64-bit.  This allows data files and shared memory to be
   shared between 32- and 64-bit applications.  */

  int32_t ut_session;		/* Session ID, used for windowing.  */
  struct
  {
    int32_t tv_sec;		/* Seconds.  */
    int32_t tv_usec;		/* Microseconds.  */
  } ut_tv;			/* Time entry was made.  */
   
  

  int32_t ut_addr_v6[4];	/* Internet address of remote host.  */
  char __unused[20];		/* Reserved for future use.  */
};

/* Backwards compatibility hacks.  */


/* We have a problem here: `ut_time' is also used otherwise.  Define
   _NO_UT_TIME if the compiler complains.  */






/* Values for the `ut_type' field of a `struct utmp'.  */














/* Old Linux name for the EMPTY type.  */



/* Tell the user that we have a modern system with UT_HOST, UT_PID,
   UT_TYPE, UT_ID and UT_TV fields.  */





#line 32 "systems/redhat/usr/include/utmp.h" 2

/* Compatibility names for the strings of the canonical file names.  */







/* Make FD be the controlling terminal, stdin, stdout, and stderr;
   then close FD.  Returns 0 on success, nonzero on error.  */
extern int login_tty (int __fd) __attribute__ ((__nothrow__));


/* Write the given entry into utmp and wtmp.  */
extern void login (const struct utmp *__entry) __attribute__ ((__nothrow__));

/* Write the utmp entry to say the user on UT_LINE has logged out.  */
extern int logout (const char *__ut_line) __attribute__ ((__nothrow__));

/* Append to wtmp an entry for the current time and the given info.  */
extern void logwtmp (const char *__ut_line, const char *__ut_name,
		     const char *__ut_host) __attribute__ ((__nothrow__));

/* Append entry UTMP to the wtmp-like file WTMP_FILE.  */
extern void updwtmp (const char *__wtmp_file, const struct utmp *__utmp)
     __attribute__ ((__nothrow__));

/* Change name of the utmp file to be examined.  */
extern int utmpname (const char *__file) __attribute__ ((__nothrow__));

/* Read next entry from a utmp-like file.  */
extern struct utmp *getutent (void) __attribute__ ((__nothrow__));

/* Reset the input stream to the beginning of the file.  */
extern void setutent (void) __attribute__ ((__nothrow__));

/* Close the current open file.  */
extern void endutent (void) __attribute__ ((__nothrow__));

/* Search forward from the current point in the utmp file until the
   next entry with a ut_type matching ID->ut_type.  */
extern struct utmp *getutid (const struct utmp *__id) __attribute__ ((__nothrow__));

/* Search forward from the current point in the utmp file until the
   next entry with a ut_line matching LINE->ut_line.  */
extern struct utmp *getutline (const struct utmp *__line) __attribute__ ((__nothrow__));

/* Write out entry pointed to by UTMP_PTR into the utmp file.  */
extern struct utmp *pututline (const struct utmp *__utmp_ptr) __attribute__ ((__nothrow__));



/* Reentrant versions of the file for handling utmp files.  */
extern int getutent_r (struct utmp *__buffer, struct utmp **__result) __attribute__ ((__nothrow__));

extern int getutid_r (const struct utmp *__id, struct utmp *__buffer,
		      struct utmp **__result) __attribute__ ((__nothrow__));

extern int getutline_r (const struct utmp *__line,
			struct utmp *__buffer, struct utmp **__result) __attribute__ ((__nothrow__));





#line 89 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2

#if definedEx(CONFIG_LOCALE_SUPPORT)
#line 1 "systems/redhat/usr/include/locale.h" 1
/* Copyright (C) 1991,1992,1995-2002,2007,2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.11 Localization	<locale.h>
 */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 28 "systems/redhat/usr/include/locale.h" 2


#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */

/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */









/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */

/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */



/* On FreeBSD 5, machine/ansi.h does not exist anymore... */



/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_ */




























/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */



/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */












/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */

/* Signed type of difference of two pointers.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */





























/* If this symbol has done its job, get rid of it.  */



/* Unsigned type of `sizeof' something.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */




































 





























/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */














































































































/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */






























/* A null pointer constant.  */





 

 






/* Offset of member MEMBER in a struct of type TYPE. */




#line 31 "systems/redhat/usr/include/locale.h" 2
#line 1 "systems/redhat/usr/include/bits/locale.h" 1
/* Definition of locale category symbol values.
   Copyright (C) 2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */







enum
{
  __LC_CTYPE = 0,
  __LC_NUMERIC = 1,
  __LC_TIME = 2,
  __LC_COLLATE = 3,
  __LC_MONETARY = 4,
  __LC_MESSAGES = 5,
  __LC_ALL = 6,
  __LC_PAPER = 7,
  __LC_NAME = 8,
  __LC_ADDRESS = 9,
  __LC_TELEPHONE = 10,
  __LC_MEASUREMENT = 11,
  __LC_IDENTIFICATION = 12
};


#line 32 "systems/redhat/usr/include/locale.h" 2



/* These are the possibilities for the first argument to setlocale.
   The code assumes that the lowest LC_* symbol has the value zero.  */

















/* Structure giving information about numeric and monetary notation.  */
struct lconv
{
  /* Numeric (non-monetary) information.  */

  char *decimal_point;		/* Decimal point character.  */
  char *thousands_sep;		/* Thousands separator.  */
  /* Each element is the number of digits in each group;
     elements with higher indices are farther left.
     An element with value CHAR_MAX means that no further grouping is done.
     An element with value 0 means that the previous element is used
     for all groups farther left.  */
  char *grouping;

  /* Monetary information.  */

  /* First three chars are a currency symbol from ISO 4217.
     Fourth char is the separator.  Fifth char is '\0'.  */
  char *int_curr_symbol;
  char *currency_symbol;	/* Local currency symbol.  */
  char *mon_decimal_point;	/* Decimal point character.  */
  char *mon_thousands_sep;	/* Thousands separator.  */
  char *mon_grouping;		/* Like `grouping' element (above).  */
  char *positive_sign;		/* Sign for positive values.  */
  char *negative_sign;		/* Sign for negative values.  */
  char int_frac_digits;		/* Int'l fractional digits.  */
  char frac_digits;		/* Local fractional digits.  */
  /* 1 if currency_symbol precedes a positive value, 0 if succeeds.  */
  char p_cs_precedes;
  /* 1 iff a space separates currency_symbol from a positive value.  */
  char p_sep_by_space;
  /* 1 if currency_symbol precedes a negative value, 0 if succeeds.  */
  char n_cs_precedes;
  /* 1 iff a space separates currency_symbol from a negative value.  */
  char n_sep_by_space;
  /* Positive and negative sign positions:
     0 Parentheses surround the quantity and currency_symbol.
     1 The sign string precedes the quantity and currency_symbol.
     2 The sign string follows the quantity and currency_symbol.
     3 The sign string immediately precedes the currency_symbol.
     4 The sign string immediately follows the currency_symbol.  */
  char p_sign_posn;
  char n_sign_posn;

  /* 1 if int_curr_symbol precedes a positive value, 0 if succeeds.  */
  char int_p_cs_precedes;
  /* 1 iff a space separates int_curr_symbol from a positive value.  */
  char int_p_sep_by_space;
  /* 1 if int_curr_symbol precedes a negative value, 0 if succeeds.  */
  char int_n_cs_precedes;
  /* 1 iff a space separates int_curr_symbol from a negative value.  */
  char int_n_sep_by_space;
  /* Positive and negative sign positions:
     0 Parentheses surround the quantity and int_curr_symbol.
     1 The sign string precedes the quantity and int_curr_symbol.
     2 The sign string follows the quantity and int_curr_symbol.
     3 The sign string immediately precedes the int_curr_symbol.
     4 The sign string immediately follows the int_curr_symbol.  */
  char int_p_sign_posn;
  char int_n_sign_posn;
   
  
  
  
  
  

};


/* Set and/or return the current locale.  */
extern char *setlocale (int __category, const char *__locale) __attribute__ ((__nothrow__));

/* Return the numeric/monetary information for the current locale.  */
extern struct lconv *localeconv (void) __attribute__ ((__nothrow__));





/* The concept of one static locale per category is not very well
   thought out.  Many applications will need to process its data using
   information from several different locales.  Another application is
   the implementation of the internationalization handling in the
   upcoming ISO C++ standard library.  To support this another set of
   the functions using locale data exist which have an additional
   argument.

   Attention: all these functions are *not* standardized in any form.
   This is a proof-of-concept implementation.  */

/* Get locale datatype definition.  */
#line 1 "systems/redhat/usr/include/xlocale.h" 1
/* Definition of locale datatype.
   Copyright (C) 1997,2000,2002,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1997.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */










  
  

  
  
  
  

  
  






#line 148 "systems/redhat/usr/include/locale.h" 2

/* Return a reference to a data structure representing a set of locale
   datasets.  Unlike for the CATEGORY parameter for `setlocale' the
   CATEGORY_MASK parameter here uses a single bit for each category,
   made by OR'ing together LC_*_MASK bits above.  */
extern __locale_t newlocale (int __category_mask, const char *__locale,
			     __locale_t __base) __attribute__ ((__nothrow__));

/* These are the bits that can be set in the CATEGORY_MASK argument to
   `newlocale'.  In the GNU implementation, LC_FOO_MASK has the value
   of (1 << LC_FOO), but this is not a part of the interface that
   callers can assume will be true.  */


























/* Return a duplicate of the set of locale in DATASET.  All usage
   counters are increased if necessary.  */
extern __locale_t duplocale (__locale_t __dataset) __attribute__ ((__nothrow__));

/* Free the data associated with a locale dataset previously returned
   by a call to `setlocale_r'.  */
extern void freelocale (__locale_t __dataset) __attribute__ ((__nothrow__));

/* Switch the current thread's locale to DATASET.
   If DATASET is null, instead just return the current setting.
   The special value LC_GLOBAL_LOCALE is the initial setting
   for all threads and can also be installed any time, meaning
   the thread uses the global settings controlled by `setlocale'.  */
extern __locale_t uselocale (__locale_t __dataset) __attribute__ ((__nothrow__));

/* This value can be passed to `uselocale' and may be returned by it.
   Passing this value to any other function has undefined behavior.  */






#line 92 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#endif
#if !definedEx(CONFIG_LOCALE_SUPPORT)

#endif



/* Just in case libc doesn't define some of these... */















 
 #line 1 "systems/redhat/usr/include/arpa/inet.h" 1
/* Copyright (C) 1997, 1999, 2000, 2001, 2004 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 24 "systems/redhat/usr/include/arpa/inet.h" 2
#line 1 "systems/redhat/usr/include/netinet/in.h" 1
/* Copyright (C) 1991-2001, 2003, 2004, 2006, 2007, 2008
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */














  
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
  







  
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    


    
    
    
    

    
    
    
    

    
    

    
    
  





  
    
  




















































  
    
      
	

	
	

      





  












  
    
    
    

    
    
			   
			   
			   
  



  
    
    
    
    
    
  





  
    
    

    
    
  


  
    
    

    
    

    
    
  



  
    
    

    
    
  





  
    
    

    
    
  


  
    
    

    
    

    
    
  




  
    
    

    
    

    
    

    
    
    
    
  






  
    
    

    
    

    
    

    
    
    
    



















     

     

     

















 




















































     

























  
    
    
  



  
    
    
  




     

			      

				
				

				    
     

			      
     

			      
     





			     
			     

     

			      

			   
			   

			   
			   

			      





			     




     






				
				
     



				
				
				
     




			    
			    
			    
			    



			    
			    
			    
			    




#line 25 "systems/redhat/usr/include/arpa/inet.h" 2

/* Type for length arguments in socket calls.  */






/* Convert Internet host address from numbers-and-dots notation in CP
   into binary data in network byte order.  */
extern in_addr_t inet_addr (const char *__cp) __attribute__ ((__nothrow__));

/* Return the local host address part of the Internet address in IN.  */
extern in_addr_t inet_lnaof (struct in_addr __in) __attribute__ ((__nothrow__));

/* Make Internet host address in network byte order by combining the
   network number NET with the local address HOST.  */
extern struct in_addr inet_makeaddr (in_addr_t __net, in_addr_t __host)
     __attribute__ ((__nothrow__));

/* Return network number part of the Internet address IN.  */
extern in_addr_t inet_netof (struct in_addr __in) __attribute__ ((__nothrow__));

/* Extract the network number in network byte order from the address
   in numbers-and-dots natation starting at CP.  */
extern in_addr_t inet_network (const char *__cp) __attribute__ ((__nothrow__));

/* Convert Internet number in IN to ASCII representation.  The return value
   is a pointer to an internal array containing the string.  */
extern char *inet_ntoa (struct in_addr __in) __attribute__ ((__nothrow__));

/* Convert from presentation format of an Internet number in buffer
   starting at CP to the binary network format and store result for
   interface type AF in buffer starting at BUF.  */
extern int inet_pton (int __af, const char *__restrict __cp,
		      void *__restrict __buf) __attribute__ ((__nothrow__));

/* Convert a Internet address in binary network format for interface
   type AF in buffer starting at CP to presentation form and place
   result in buffer of length LEN astarting at BUF.  */
extern const char *inet_ntop (int __af, const void *__restrict __cp,
				char *__restrict __buf, socklen_t __len)
     __attribute__ ((__nothrow__));


/* The following functions are not part of XNS 5.2.  */

/* Convert Internet host address from numbers-and-dots notation in CP
   into binary data and store the result in the structure INP.  */
extern int inet_aton (const char *__cp, struct in_addr *__inp) __attribute__ ((__nothrow__));

/* Format a network number NET into presentation format and place result
   in buffer starting at BUF with length of LEN bytes.  */
extern char *inet_neta (in_addr_t __net, char *__buf, size_t __len) __attribute__ ((__nothrow__));

/* Convert network number for interface type AF in buffer starting at
   CP to presentation format.  The result will specifiy BITS bits of
   the number.  */
extern char *inet_net_ntop (int __af, const void *__cp, int __bits,
			    char *__buf, size_t __len) __attribute__ ((__nothrow__));

/* Convert network number for interface type AF from presentation in
   buffer starting at CP to network format and store result int
   buffer starting at BUF of size LEN.  */
extern int inet_net_pton (int __af, const char *__cp,
			  void *__buf, size_t __len) __attribute__ ((__nothrow__));

/* Convert ASCII representation in hexadecimal form of the Internet
   address to binary form and place result in buffer of length LEN
   starting at BUF.  */
extern unsigned int inet_nsap_addr (const char *__cp,
				    unsigned char *__buf, int __len) __attribute__ ((__nothrow__));

/* Convert internet address in binary form in LEN bytes starting at CP
   a presentation form and place result in BUF.  */
extern char *inet_nsap_ntoa (int __len, const unsigned char *__cp,
			     char *__buf) __attribute__ ((__nothrow__));




#line 118 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2






   











/* Some libc's forget to declare these, do it ourself */

extern char **environ;



/* klogctl is in libc's klog.h, but we cheat and not #include that */
int klogctl(int type, char *b, int len);






/* Busybox does not use threads, we can speed up stdio. */














/* Above functions are required by POSIX.1-2008, below ones are extensions */






/* Make all declarations hidden (-fvisibility flag only affects definitions) */
/* (don't include system headers after this until corresponding pop!) */
_Pragma("GCC visibility push(hidden)")


#if definedEx(CONFIG_USE_BB_PWD_GRP)
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/pwd_.h" 1
/* vi: set sw=4 ts=4: */
/* Copyright (C) 1991,92,95,96,97,98,99,2001 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 * POSIX Standard: 9.2.2 User Database Access	<pwd.h>
 */




_Pragma("GCC visibility push(hidden)")

/* This file is #included after #include <pwd.h>
 * We will use libc-defined structures, but will #define function names
 * so that function calls are directed to bb_internal_XXX replacements
 */














/* All function names below should be remapped by #defines above
 * in order to not collide with libc names. */


/* Rewind the password-file stream.  */
extern void bb_internal_setpwent(void);

/* Close the password-file stream.  */
extern void bb_internal_endpwent(void);










		

/* Search for an entry with a matching user ID.  */
extern struct passwd *bb_internal_getpwuid(uid_t __uid);

/* Search for an entry with a matching username.  */
extern struct passwd *bb_internal_getpwnam(const char *__name);

/* Reentrant versions of some of the functions above.

   PLEASE NOTE: the `getpwent_r' function is not (yet) standardized.
   The interface may change in later versions of this library.  But
   the interface is designed following the principals used for the
   other reentrant functions so the chances are good this is what the
   POSIX people would choose.  */

extern int bb_internal_getpwent_r(struct passwd *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct passwd **__restrict __result);

extern int bb_internal_getpwuid_r(uid_t __uid,
		struct passwd *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct passwd **__restrict __result);

extern int bb_internal_getpwnam_r(const char *__restrict __name,
		struct passwd *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct passwd **__restrict __result);

/* Read an entry from STREAM.  This function is not standardized and
   probably never will.  */
extern int bb_internal_fgetpwent_r(FILE *__restrict __stream,
		struct passwd *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct passwd **__restrict __result);

_Pragma("GCC visibility pop")


#line 185 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/grp_.h" 1
/* vi: set sw=4 ts=4: */
/* Copyright (C) 1991,92,95,96,97,98,99,2000,01 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.
 */
/*
 * POSIX Standard: 9.2.1 Group Database Access	<grp.h>
 */



_Pragma("GCC visibility push(hidden)")

/* This file is #included after #include <grp.h>
 * We will use libc-defined structures, but will #define function names
 * so that function calls are directed to bb_internal_XXX replacements
 */
















/* All function names below should be remapped by #defines above
 * in order to not collide with libc names. */


/* Rewind the group-file stream.  */
extern void bb_internal_setgrent(void);

/* Close the group-file stream.  */
extern void bb_internal_endgrent(void);










		

/* Search for an entry with a matching group ID.  */
extern struct group *bb_internal_getgrgid(gid_t __gid);

/* Search for an entry with a matching group name.  */
extern struct group *bb_internal_getgrnam(const char *__name);

/* Reentrant versions of some of the functions above.

   PLEASE NOTE: the `getgrent_r' function is not (yet) standardized.
   The interface may change in later versions of this library.  But
   the interface is designed following the principals used for the
   other reentrant functions so the chances are good this is what the
   POSIX people would choose.  */

extern int bb_internal_getgrent_r(struct group *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct group **__restrict __result);

/* Search for an entry with a matching group ID.  */
extern int bb_internal_getgrgid_r(gid_t __gid, struct group *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct group **__restrict __result);

/* Search for an entry with a matching group name.  */
extern int bb_internal_getgrnam_r(const char *__restrict __name,
		struct group *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct group **__restrict __result);

/* Read a group entry from STREAM.  This function is not standardized
   an probably never will.  */
extern int bb_internal_fgetgrent_r(FILE *__restrict __stream,
		struct group *__restrict __resultbuf,
		char *__restrict __buffer, size_t __buflen,
		struct group **__restrict __result);

/* Store at most *NGROUPS members of the group set for USER into
   *GROUPS.  Also include GROUP.  The actual number of groups found is
   returned in *NGROUPS.  Return -1 if the if *NGROUPS is too small.  */
extern int bb_internal_getgrouplist(const char *__user, gid_t __group,
		gid_t *__groups, int *__ngroups);

/* Initialize the group set for the current user
   by reading the group database and using all groups
   of which USER is a member.  Also include GROUP.  */
extern int bb_internal_initgroups(const char *__user, gid_t __group);

_Pragma("GCC visibility pop")


#line 186 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#endif
#if definedEx(CONFIG_FEATURE_SHADOWPASSWDS)
#if definedEx(CONFIG_USE_BB_SHADOW)
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/shadow_.h" 1
/* vi: set sw=4 ts=4: */
/* Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/* Declaration of types and functions for shadow password suite */




_Pragma("GCC visibility push(hidden)")

/* Structure of the password file */
struct spwd {
	char *sp_namp;          /* Login name */
	char *sp_pwdp;          /* Encrypted password */
	long sp_lstchg;         /* Date of last change */
	long sp_min;            /* Minimum number of days between changes */
	long sp_max;            /* Maximum number of days between changes */
	long sp_warn;           /* Number of days to warn user to change the password */
	long sp_inact;          /* Number of days the account may be inactive */
	long sp_expire;         /* Number of days since 1970-01-01 until account expires */
	unsigned long sp_flag;  /* Reserved */
};
















/* All function names below should be remapped by #defines above
 * in order to not collide with libc names. */

























		

extern int bb_internal_getspnam_r(const char *__name, struct spwd *__result_buf,
		char *__buffer, size_t __buflen,
		struct spwd **__result);



		
		


		
		






_Pragma("GCC visibility pop")


#line 190 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
#endif
#endif
/* Tested to work correctly with all int types (IIRC :]) */












/* Large file support */
/* Note that CONFIG_LFS=y forces bbox to be built with all common ops
 * (stat, lseek etc) mapped to "largefile" variants by libc.
 * Practically it means that open() automatically has O_LARGEFILE added
 * and all filesize/file_offset parameters and struct members are "large"
 * (in today's world - signed 64bit). For full support of large files,
 * we need a few helper #defines (below) and careful use of off_t
 * instead of int/ssize_t. No lseek64(), O_LARGEFILE etc necessary */
#if definedEx(CONFIG_LFS)
/* CONFIG_LFS is on */









 /* "long" is too short, need "long long" */
typedef unsigned long long uoff_t;





#endif
#if !definedEx(CONFIG_LFS)
/* CONFIG_LFS is off */

/* While sizeof(off_t) == sizeof(int), off_t is typedef'ed to long anyway.
 * gcc will throw warnings on printf("%d", off_t). Crap... */
typedef unsigned long uoff_t;




 





#endif
/* scary. better ideas? (but do *test* them first!) */

/* Users report bionic to use 32-bit off_t even if LARGEFILE support is requested.
 * We misdetected that. Don't let it build:
 */
struct BUG_off_t_size_is_misdetected {
	char BUG_off_t_size_is_misdetected[sizeof(off_t) == sizeof(uoff_t) ? 1 : -1];
};

/* Some useful definitions */







/* Macros for min/max.  */






/* buffer allocation schemes */
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)



#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_ON_STACK)
#if definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)



#endif
#if !definedEx(CONFIG_FEATURE_BUFFERS_GO_IN_BSS)



#endif
#endif

/* glibc uses __errno_location() to get a ptr to errno */
/* We can just memorize it once - no multithreading in busybox :) */
extern int *const bb_errno;




/* Only 32-bit CPUs need this, 64-bit ones use inlined version */
uint64_t bb_bswap_64(uint64_t x) ;

unsigned long long monotonic_ns(void) ;
unsigned long long monotonic_us(void) ;
unsigned long long monotonic_ms(void) ;
unsigned monotonic_sec(void) ;

extern void chomp(char *s) ;
extern void trim(char *s) ;
extern char *skip_whitespace(const char *) ;
extern char *skip_non_whitespace(const char *) ;
extern char *skip_dev_pfx(const char *tty_name) ;

extern char *strrstr(const char *haystack, const char *needle) ;

//TODO: supply a pointer to char[11] buffer (avoid statics)?
extern const char *bb_mode_string(mode_t mode) ;
extern int is_directory(const char *name, int followLinks) ;
enum {	/* DO NOT CHANGE THESE VALUES!  cp.c, mv.c, install.c depend on them. */
	FILEUTILS_PRESERVE_STATUS = 1 << 0, /* -p */
	FILEUTILS_DEREFERENCE     = 1 << 1, /* !-d */
	FILEUTILS_RECUR           = 1 << 2, /* -R */
	FILEUTILS_FORCE           = 1 << 3, /* -f */
	FILEUTILS_INTERACTIVE     = 1 << 4, /* -i */
	FILEUTILS_MAKE_HARDLINK   = 1 << 5, /* -l */
	FILEUTILS_MAKE_SOFTLINK   = 1 << 6, /* -s */
	FILEUTILS_DEREF_SOFTLINK  = 1 << 7, /* -L */
	FILEUTILS_DEREFERENCE_L0  = 1 << 8, /* -H */
#if definedEx(CONFIG_SELINUX)
	FILEUTILS_PRESERVE_SECURITY_CONTEXT = 1 << 9, /* -c */
	FILEUTILS_SET_SECURITY_CONTEXT = 1 << 10,
#endif
	FILEUTILS_IGNORE_CHMOD_ERR = 1 << 11,
};

extern int remove_file(const char *path, int flags) ;
/* NB: without FILEUTILS_RECUR in flags, it will basically "cat"
 * the source, not copy (unless "source" is a directory).
 * This makes "cp /dev/null file" and "install /dev/null file" (!!!)
 * work coreutils-compatibly. */
extern int copy_file(const char *source, const char *dest, int flags) ;

enum {
	ACTION_RECURSE        = (1 << 0),
	ACTION_FOLLOWLINKS    = (1 << 1),
	ACTION_FOLLOWLINKS_L0 = (1 << 2),
	ACTION_DEPTHFIRST     = (1 << 3),
	/*ACTION_REVERSE      = (1 << 4), - unused */
	ACTION_QUIET          = (1 << 5),
	ACTION_DANGLING_OK    = (1 << 6),
};
typedef uint8_t recurse_flags_t;
extern int recursive_action(const char *fileName, unsigned flags,
	int  (*fileAction)(const char *fileName, struct stat* statbuf, void* userData, int depth),
	int  (*dirAction)(const char *fileName, struct stat* statbuf, void* userData, int depth),
	void* userData, unsigned depth) ;
extern int device_open(const char *device, int mode) ;
enum { GETPTY_BUFSIZE = 16 }; /* more than enough for "/dev/ttyXXX" */
extern int xgetpty(char *line) ;
extern int get_console_fd_or_die(void) ;
extern void console_make_active(int fd, const int vt_num) ;
extern char *find_block_device(const char *path) ;
/* bb_copyfd_XX print read/write errors and return -1 if they occur */
extern off_t bb_copyfd_eof(int fd1, int fd2) ;
extern off_t bb_copyfd_size(int fd1, int fd2, off_t size) ;
extern void bb_copyfd_exact_size(int fd1, int fd2, off_t size) ;
/* "short" copy can be detected by return value < size */
/* this helper yells "short read!" if param is not -1 */
extern void complain_copyfd_and_die(off_t sz) __attribute__ ((__noreturn__)) ;

extern char bb_process_escape_sequence(const char **ptr) ;
char* strcpy_and_process_escape_sequences(char *dst, const char *src) ;
/* xxxx_strip version can modify its parameter:
 * "/"        -> "/"
 * "abc"      -> "abc"
 * "abc/def"  -> "def"
 * "abc/def/" -> "def" !!
 */
char *bb_get_last_path_component_strip(char *path) ;
/* "abc/def/" -> "" and it never modifies 'path' */
char *bb_get_last_path_component_nostrip(const char *path) ;
/* Simpler version: does not special case "/" string */
const char *bb_basename(const char *name) ;
/* NB: can violate const-ness (similarly to strchr) */
char *last_char_is(const char *s, int c) ;
const char* endofname(const char *name) ;

void ndelay_on(int fd) ;
void ndelay_off(int fd) ;
void close_on_exec_on(int fd) ;
void xdup2(int, int) ;
void xmove_fd(int, int) ;


DIR *xopendir(const char *path) ;
DIR *warn_opendir(const char *path) ;

char *xmalloc_realpath(const char *path)  __attribute__ ((malloc));
char *xmalloc_readlink(const char *path)  __attribute__ ((malloc));
char *xmalloc_readlink_or_warn(const char *path)  __attribute__ ((malloc));
/* !RETURNS_MALLOC: it's a realloc-like function */
char *xrealloc_getcwd_or_warn(char *cwd) ;

char *xmalloc_follow_symlinks(const char *path)  __attribute__ ((malloc));


enum {
	/* bb_signals(BB_FATAL_SIGS, handler) catches all signals which
	 * otherwise would kill us, except for those resulting from bugs:
	 * SIGSEGV, SIGILL, SIGFPE.
	 * Other fatal signals not included (TODO?):
	 * SIGBUS   Bus error (bad memory access)
	 * SIGPOLL  Pollable event. Synonym of SIGIO
	 * SIGPROF  Profiling timer expired
	 * SIGSYS   Bad argument to routine
	 * SIGTRAP  Trace/breakpoint trap
	 *
	 * The only known arch with some of these sigs not fitting
	 * into 32 bits is parisc (SIGXCPU=33, SIGXFSZ=34, SIGSTKFLT=36).
	 * Dance around with long long to guard against that...
	 */
	BB_FATAL_SIGS = (int)(0
		+ (1LL << 1)
		+ (1LL << 2)
		+ (1LL << 15)
		+ (1LL << 13)   // Write to pipe with no readers
		+ (1LL << 3)   // Quit from keyboard
		+ (1LL << 6)   // Abort signal from abort(3)
		+ (1LL << 14)   // Timer signal from alarm(2)
		+ (1LL << 26) // Virtual alarm clock
		+ (1LL << 24)   // CPU time limit exceeded
		+ (1LL << 25)   // File size limit exceeded
		+ (1LL << 10)   // Yes kids, these are also fatal!
		+ (1LL << 12)
		+ 0),
};
void bb_signals(int sigs, void (*f)(int)) ;
/* Unlike signal() and bb_signals, sets handler with sigaction()
 * and in a way that while signal handler is run, no other signals
 * will be blocked; syscalls will not be restarted: */
void bb_signals_recursive_norestart(int sigs, void (*f)(int)) ;
/* syscalls like read() will be interrupted with EINTR: */
void signal_no_SA_RESTART_empty_mask(int sig, void (*handler)(int)) ;
/* syscalls like read() won't be interrupted (though select/poll will be): */
void signal_SA_RESTART_empty_mask(int sig, void (*handler)(int)) ;
void wait_for_any_sig(void) ;
void kill_myself_with_sig(int sig) __attribute__ ((__noreturn__)) ;
void sig_block(int sig) ;
void sig_unblock(int sig) ;
/* Will do sigaction(signum, act, NULL): */
int sigaction_set(int sig, const struct sigaction *act) ;
/* SIG_BLOCK/SIG_UNBLOCK all signals: */
int sigprocmask_allsigs(int how) ;
/* Standard handler which just records signo */
extern smallint bb_got_signal;
void record_signo(int signo); /* not FAST_FUNC! */


void xsetgid(gid_t gid) ;
void xsetuid(uid_t uid) ;
void xsetegid(gid_t egid) ;
void xseteuid(uid_t euid) ;
void xchdir(const char *path) ;
void xchroot(const char *path) ;
void xsetenv(const char *key, const char *value) ;
void bb_unsetenv(const char *key) ;
void bb_unsetenv_and_free(char *key) ;
void xunlink(const char *pathname) ;
void xstat(const char *pathname, struct stat *buf) ;
void xfstat(int fd, struct stat *buf, const char *errmsg) ;
int open3_or_warn(const char *pathname, int flags, int mode) ;
int open_or_warn(const char *pathname, int flags) ;
int xopen3(const char *pathname, int flags, int mode) ;
int xopen(const char *pathname, int flags) ;
int xopen_nonblocking(const char *pathname) ;
int xopen_as_uid_gid(const char *pathname, int flags, uid_t u, gid_t g) ;
int open_or_warn_stdin(const char *pathname) ;
int xopen_stdin(const char *pathname) ;
void xrename(const char *oldpath, const char *newpath) ;
int rename_or_warn(const char *oldpath, const char *newpath) ;
off_t xlseek(int fd, off_t offset, int whence) ;
int xmkstemp(char *template) ;
off_t fdlength(int fd) ;

uoff_t  get_volume_size_in_bytes(int fd,
		const char *override,
		unsigned override_units,
		int extend);

void xpipe(int filedes[2]) ;
/* In this form code with pipes is much more readable */
struct fd_pair { int rd; int wr; };



/* Useful for having small structure members/global variables */
typedef int8_t socktype_t;
typedef int8_t family_t;
struct BUG_too_small {
	char BUG_socktype_t_too_small[(0
			| SOCK_STREAM
			| SOCK_DGRAM
			| SOCK_RDM
			| SOCK_SEQPACKET
			| SOCK_RAW
			) <= 127 ? 1 : -1];
	char BUG_family_t_too_small[(0
			| 0
			| 2
			| 10
			| 1

			| 17


			| 16

			/* | AF_DECnet */
			/* | AF_IPX */
			) <= 127 ? 1 : -1];
};


void parse_datestr(const char *date_str, struct tm *ptm) ;
time_t validate_tm_time(const char *date_str, struct tm *ptm) ;
char *strftime_HHMMSS(char *buf, unsigned len, time_t *tp) ;
char *strftime_YYYYMMDDHHMMSS(char *buf, unsigned len, time_t *tp) ;

int xsocket(int domain, int type, int protocol) ;
void xbind(int sockfd, struct sockaddr *my_addr, socklen_t addrlen) ;
void xlisten(int s, int backlog) ;
void xconnect(int s, const struct sockaddr *s_addr, socklen_t addrlen) ;
ssize_t xsendto(int s, const void *buf, size_t len, const struct sockaddr *to,
				socklen_t tolen) ;
/* SO_REUSEADDR allows a server to rebind to an address that is already
 * "in use" by old connections to e.g. previous server instance which is
 * killed or crashed. Without it bind will fail until all such connections
 * time out. Linux does not allow multiple live binds on same ip:port
 * regardless of SO_REUSEADDR (unlike some other flavors of Unix).
 * Turn it on before you call bind(). */
void setsockopt_reuseaddr(int fd) ; /* On Linux this never fails. */
int setsockopt_broadcast(int fd) ;
int setsockopt_bindtodevice(int fd, const char *iface) ;
/* NB: returns port in host byte order */
unsigned bb_lookup_port(const char *port, const char *protocol, unsigned default_port) ;
typedef struct len_and_sockaddr {
	socklen_t len;
	union {
		struct sockaddr sa;
		struct sockaddr_in sin;
#if definedEx(CONFIG_FEATURE_IPV6)
		struct sockaddr_in6 sin6;
#endif
	} u;
} len_and_sockaddr;
enum {
	LSA_LEN_SIZE = __builtin_offsetof (len_and_sockaddr, u),
	LSA_SIZEOF_SA = sizeof(
		union {
			struct sockaddr sa;
			struct sockaddr_in sin;
#if definedEx(CONFIG_FEATURE_IPV6)
			struct sockaddr_in6 sin6;
#endif
		}
	)
};
/* Create stream socket, and allocate suitable lsa.
 * (lsa of correct size and lsa->sa.sa_family (AF_INET/AF_INET6))
 * af == AF_UNSPEC will result in trying to create IPv6 socket,
 * and if kernel doesn't support it, fall back to IPv4.
 * This is useful if you plan to bind to resulting local lsa.
 */
int xsocket_type(len_and_sockaddr **lsap, int af, int sock_type) ;
int xsocket_stream(len_and_sockaddr **lsap) ;
/* Create server socket bound to bindaddr:port. bindaddr can be NULL,
 * numeric IP ("N.N.N.N") or numeric IPv6 address,
 * and can have ":PORT" suffix (for IPv6 use "[X:X:...:X]:PORT").
 * Only if there is no suffix, port argument is used */
/* NB: these set SO_REUSEADDR before bind */
int create_and_bind_stream_or_die(const char *bindaddr, int port) ;
int create_and_bind_dgram_or_die(const char *bindaddr, int port) ;
/* Create client TCP socket connected to peer:port. Peer cannot be NULL.
 * Peer can be numeric IP ("N.N.N.N"), numeric IPv6 address or hostname,
 * and can have ":PORT" suffix (for IPv6 use "[X:X:...:X]:PORT").
 * If there is no suffix, port argument is used */
int create_and_connect_stream_or_die(const char *peer, int port) ;
/* Connect to peer identified by lsa */
int xconnect_stream(const len_and_sockaddr *lsa) ;
/* Get local address of bound or accepted socket */
len_and_sockaddr *get_sock_lsa(int fd)  __attribute__ ((malloc));
/* Get remote address of connected or accepted socket */
len_and_sockaddr *get_peer_lsa(int fd)  __attribute__ ((malloc));
/* Return malloc'ed len_and_sockaddr with socket address of host:port
 * Currently will return IPv4 or IPv6 sockaddrs only
 * (depending on host), but in theory nothing prevents e.g.
 * UNIX socket address being returned, IPX sockaddr etc...
 * On error does bb_error_msg and returns NULL */
len_and_sockaddr* host2sockaddr(const char *host, int port)  __attribute__ ((malloc));
/* Version which dies on error */
len_and_sockaddr* xhost2sockaddr(const char *host, int port)  __attribute__ ((malloc));
len_and_sockaddr* xdotted2sockaddr(const char *host, int port)  __attribute__ ((malloc));
/* Same, useful if you want to force family (e.g. IPv6) */
#if !definedEx(CONFIG_FEATURE_IPV6)


#endif
#if definedEx(CONFIG_FEATURE_IPV6)
len_and_sockaddr* host_and_af2sockaddr(const char *host, int port, sa_family_t af)  __attribute__ ((malloc));
len_and_sockaddr* xhost_and_af2sockaddr(const char *host, int port, sa_family_t af)  __attribute__ ((malloc));
#endif
/* Assign sin[6]_port member if the socket is an AF_INET[6] one,
 * otherwise no-op. Useful for ftp.
 * NB: does NOT do htons() internally, just direct assignment. */
void set_nport(struct sockaddr *sa, unsigned port) ;
/* Retrieve sin[6]_port or return -1 for non-INET[6] lsa's */
int get_nport(const struct sockaddr *sa) ;
/* Reverse DNS. Returns NULL on failure. */
char* xmalloc_sockaddr2host(const struct sockaddr *sa)  __attribute__ ((malloc));
/* This one doesn't append :PORTNUM */
char* xmalloc_sockaddr2host_noport(const struct sockaddr *sa)  __attribute__ ((malloc));
/* This one also doesn't fall back to dotted IP (returns NULL) */
char* xmalloc_sockaddr2hostonly_noport(const struct sockaddr *sa)  __attribute__ ((malloc));
/* inet_[ap]ton on steroids */
char* xmalloc_sockaddr2dotted(const struct sockaddr *sa)  __attribute__ ((malloc));
char* xmalloc_sockaddr2dotted_noport(const struct sockaddr *sa)  __attribute__ ((malloc));
// "old" (ipv4 only) API
// users: traceroute.c hostname.c - use _list_ of all IPs
struct hostent *xgethostbyname(const char *name) ;
// Also mount.c and inetd.c are using gethostbyname(),
// + inet_common.c has additional IPv4-only stuff


void socket_want_pktinfo(int fd) ;
ssize_t send_to_from(int fd, void *buf, size_t len, int flags,
		const struct sockaddr *to,
		const struct sockaddr *from,
		socklen_t tolen) ;
ssize_t recv_from_to(int fd, void *buf, size_t len, int flags,
		struct sockaddr *from,
		struct sockaddr *to,
		socklen_t sa_size) ;

uint16_t inet_cksum(uint16_t *addr, int len) ;

char *xstrdup(const char *s)  __attribute__ ((malloc));
char *xstrndup(const char *s, int n)  __attribute__ ((malloc));
void overlapping_strcpy(char *dst, const char *src) ;
char *safe_strncpy(char *dst, const char *src, size_t size) ;
char *strncpy_IFNAMSIZ(char *dst, const char *src) ;
unsigned count_strstr(const char *str, const char *sub) ;
char *xmalloc_substitute_string(const char *src, int count, const char *sub, const char *repl) ;
/* Guaranteed to NOT be a macro (smallest code). Saves nearly 2k on uclibc.
 * But potentially slow, don't use in one-billion-times loops */
int bb_putchar(int ch) ;
/* Note: does not use stdio, writes to fd 2 directly */
int bb_putchar_stderr(char ch) ;
char *xasprintf(const char *format, ...) __attribute__ ((format(printf, 1, 2)))  __attribute__ ((malloc));
// gcc-4.1.1 still isn't good enough at optimizing it
// (+200 bytes compared to macro)
//static ALWAYS_INLINE
//int LONE_DASH(const char *s) { return s[0] == '-' && !s[1]; }
//static ALWAYS_INLINE
//int NOT_LONE_DASH(const char *s) { return s[0] != '-' || s[1]; }






typedef struct uni_stat_t {
	unsigned byte_count;
	unsigned unicode_count;
	unsigned unicode_width;
} uni_stat_t;
/* Returns a string with unprintable chars replaced by '?' or
 * SUBST_WCHAR. This function is unicode-aware. */
const char*  printable_string(uni_stat_t *stats, const char *str);
/* Prints unprintable char ch as ^C or M-c to file
 * (M-c is used only if ch is ORed with PRINTABLE_META),
 * else it is printed as-is (except for ch = 0x9b) */
enum { PRINTABLE_META = 0x100 };
void fputc_printable(int ch, FILE *file) ;
/* Return a string that is the printable representation of character ch.
 * Buffer must hold at least four characters. */
enum {
	VISIBLE_ENDLINE   = 1 << 0,
	VISIBLE_SHOW_TABS = 1 << 1,
};
void visible(unsigned ch, char *buf, int flags) ;

/* dmalloc will redefine these to it's own implementation. It is safe
 * to have the prototypes here unconditionally.  */
void *malloc_or_warn(size_t size)  __attribute__ ((malloc));
void *xmalloc(size_t size)  __attribute__ ((malloc));
void *xzalloc(size_t size)  __attribute__ ((malloc));
void *xrealloc(void *old, size_t size) ;
/* After v = xrealloc_vector(v, SHIFT, idx) it's ok to use
 * at least v[idx] and v[idx+1], for all idx values.
 * SHIFT specifies how many new elements are added (1:2, 2:4, ..., 8:256...)
 * when all elements are used up. New elements are zeroed out.
 * xrealloc_vector(v, SHIFT, idx) *MUST* be called with consecutive IDXs -
 * skipping an index is a bad bug - it may miss a realloc!
 */


void* xrealloc_vector_helper(void *vector, unsigned sizeof_and_shift, int idx) ;


extern ssize_t safe_read(int fd, void *buf, size_t count) ;
extern ssize_t nonblock_immune_read(int fd, void *buf, size_t count, int loop_on_EINTR) ;
// NB: will return short read on error, not -1,
// if some data was read before error occurred
extern ssize_t full_read(int fd, void *buf, size_t count) ;
extern void xread(int fd, void *buf, size_t count) ;
extern unsigned char xread_char(int fd) ;
extern ssize_t read_close(int fd, void *buf, size_t maxsz) ;
extern ssize_t open_read_close(const char *filename, void *buf, size_t maxsz) ;
// Reads one line a-la fgets (but doesn't save terminating '\n').
// Reads byte-by-byte. Useful when it is important to not read ahead.
// Bytes are appended to pfx (which must be malloced, or NULL).
extern char *xmalloc_reads(int fd, size_t *maxsz_p) ;
/* Reads block up to *maxsz_p (default: INT_MAX - 4095) */
extern void *xmalloc_read(int fd, size_t *maxsz_p)  __attribute__ ((malloc));
/* Returns NULL if file can't be opened (default max size: INT_MAX - 4095) */
extern void *xmalloc_open_read_close(const char *filename, size_t *maxsz_p)  __attribute__ ((malloc));
/* Never returns NULL */
extern void *xmalloc_xopen_read_close(const char *filename, size_t *maxsz_p)  __attribute__ ((malloc));








#if (definedEx(CONFIG_FEATURE_SEAMLESS_BZ2) || definedEx(CONFIG_FEATURE_SEAMLESS_XZ) || definedEx(CONFIG_FEATURE_SEAMLESS_Z) || definedEx(CONFIG_FEATURE_SEAMLESS_LZMA) || definedEx(CONFIG_FEATURE_SEAMLESS_GZ))
/* Autodetects gzip/bzip2 formats. fd may be in the middle of the file! */
extern int setup_unzip_on_fd(int fd, int fail_if_not_compressed) ;
/* Autodetects .gz etc */
extern int open_zipped(const char *fname, int fail_if_not_compressed) ;
#endif
#if (!definedEx(CONFIG_FEATURE_SEAMLESS_Z) && !definedEx(CONFIG_FEATURE_SEAMLESS_XZ) && !definedEx(CONFIG_FEATURE_SEAMLESS_BZ2) && !definedEx(CONFIG_FEATURE_SEAMLESS_GZ) && !definedEx(CONFIG_FEATURE_SEAMLESS_LZMA))


#endif
extern void *xmalloc_open_zipped_read_close(const char *fname, size_t *maxsz_p)  __attribute__ ((malloc));

extern ssize_t safe_write(int fd, const void *buf, size_t count) ;
// NB: will return short write on error, not -1,
// if some data was written before error occurred
extern ssize_t full_write(int fd, const void *buf, size_t count) ;
extern void xwrite(int fd, const void *buf, size_t count) ;
extern void xwrite_str(int fd, const char *str) ;
extern ssize_t full_write1_str(const char *str) ;
extern ssize_t full_write2_str(const char *str) ;
extern void xopen_xwrite_close(const char* file, const char *str) ;

/* Close fd, but check for failures (some types of write errors) */
extern void xclose(int fd) ;

/* Reads and prints to stdout till eof, then closes FILE. Exits on error: */
extern void xprint_and_close_file(FILE *file) ;

/* Reads a line from a text file, up to a newline or NUL byte, inclusive.
 * Returns malloc'ed char*. If end is NULL '\n' isn't considered
 * end of line. If end isn't NULL, length of the chunk is stored in it.
 * Returns NULL if EOF/error.
 */
extern char *bb_get_chunk_from_file(FILE *file, int *end) ;
/* Reads up to (and including) TERMINATING_STRING: */
extern char *xmalloc_fgets_str(FILE *file, const char *terminating_string)  __attribute__ ((malloc));
/* Same, with limited max size, and returns the length (excluding NUL): */
extern char *xmalloc_fgets_str_len(FILE *file, const char *terminating_string, size_t *maxsz_p)  __attribute__ ((malloc));
/* Chops off TERMINATING_STRING from the end: */
extern char *xmalloc_fgetline_str(FILE *file, const char *terminating_string)  __attribute__ ((malloc));
/* Reads up to (and including) "\n" or NUL byte: */
extern char *xmalloc_fgets(FILE *file)  __attribute__ ((malloc));
/* Chops off '\n' from the end, unlike fgets: */
extern char *xmalloc_fgetline(FILE *file)  __attribute__ ((malloc));
/* Same, but doesn't try to conserve space (may have some slack after the end) */
/* extern char *xmalloc_fgetline_fast(FILE *file) FAST_FUNC RETURNS_MALLOC; */

void die_if_ferror(FILE *file, const char *msg) ;
void die_if_ferror_stdout(void) ;
int fflush_all(void) ;
void fflush_stdout_and_exit(int retval) __attribute__ ((__noreturn__)) ;
int fclose_if_not_stdin(FILE *file) ;
FILE* xfopen(const char *filename, const char *mode) ;
/* Prints warning to stderr and returns NULL on failure: */
FILE* fopen_or_warn(const char *filename, const char *mode) ;
/* "Opens" stdin if filename is special, else just opens file: */
FILE* xfopen_stdin(const char *filename) ;
FILE* fopen_or_warn_stdin(const char *filename) ;
FILE* fopen_for_read(const char *path) ;
FILE* xfopen_for_read(const char *path) ;
FILE* fopen_for_write(const char *path) ;
FILE* xfopen_for_write(const char *path) ;
FILE* xfdopen_for_read(int fd) ;
FILE* xfdopen_for_write(int fd) ;

int bb_pstrcmp(const void *a, const void *b) /* not FAST_FUNC! */;
void qsort_string_vector(char **sv, unsigned count) ;

/* Wrapper which restarts poll on EINTR or ENOMEM.
 * On other errors complains [perror("poll")] and returns.
 * Warning! May take (much) longer than timeout_ms to return!
 * If this is a problem, use bare poll and open-code EINTR/ENOMEM handling */
int safe_poll(struct pollfd *ufds, nfds_t nfds, int timeout_ms) ;

char *safe_gethostname(void) ;

/* Convert each alpha char in str to lower-case */
char* str_tolower(char *str) ;

char *utoa(unsigned n) ;
char *itoa(int n) ;
/* Returns a pointer past the formatted number, does NOT null-terminate */
char *utoa_to_buf(unsigned n, char *buf, unsigned buflen) ;
char *itoa_to_buf(int n, char *buf, unsigned buflen) ;
/* Intelligent formatters of bignums */
char *smart_ulltoa4(unsigned long long ul, char buf[4], const char *scale) ;
char *smart_ulltoa5(unsigned long long ul, char buf[5], const char *scale) ;
/* If block_size == 0, display size without fractional part,
 * else display (size * block_size) with one decimal digit.
 * If display_unit == 0, show value no bigger than 1024 with suffix (K,M,G...),
 * else divide by display_unit and do not use suffix. */


//TODO: provide pointer to buf (avoid statics)?
const char *make_human_readable_str(unsigned long long size,
		unsigned long block_size, unsigned long display_unit) ;
/* Put a string of hex bytes ("1b2e66fe"...), return advanced pointer */
char *bin2hex(char *dst, const char *src, int count) ;
/* Reverse */
char* hex2bin(char *dst, const char *src, int count) ;

/* Generate a UUID */
void generate_uuid(uint8_t *buf) ;

/* Last element is marked by mult == 0 */
struct suffix_mult {
	char suffix[4];
	unsigned mult;
};
extern const struct suffix_mult bkm_suffixes[];


#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/xatonum.h" 1
/* vi: set sw=4 ts=4: */
/*
 * ascii-to-numbers implementations for busybox
 *
 * Copyright (C) 2003  Manuel Novoa III  <mjn3@codepoet.org>
 *
 * Licensed under GPLv2, see file LICENSE in this source tree.
 */

_Pragma("GCC visibility push(hidden)")

/* Provides extern declarations of functions */


















/* Unsigned long long functions always exist */
unsigned long long xstrtoull_range_sfx(const char *str, int b, unsigned long long l, unsigned long long u, const struct suffix_mult *sfx) ; unsigned long long xstrtoull_range(const char *str, int b, unsigned long long l, unsigned long long u) ; unsigned long long xstrtoull_sfx(const char *str, int b, const struct suffix_mult *sfx) ; unsigned long long xstrtoull(const char *str, int b) ; unsigned long long xatoull_range_sfx(const char *str, unsigned long long l, unsigned long long u, const struct suffix_mult *sfx) ; unsigned long long xatoull_range(const char *str, unsigned long long l, unsigned long long u) ; unsigned long long xatoull_sfx(const char *str, const struct suffix_mult *sfx) ; unsigned long long xatoull(const char *str) ; long long xstrtoll_range_sfx(const char *str, int b, long long l, long long u, const struct suffix_mult *sfx) ; long long xstrtoll_range(const char *str, int b, long long l, long long u) ; long long xstrtoll(const char *str, int b) ; long long xatoll_range_sfx(const char *str, long long l, long long u, const struct suffix_mult *sfx) ; long long xatoll_range(const char *str, long long l, long long u) ; long long xatoll_sfx(const char *str, const struct suffix_mult *sfx) ; long long xatoll(const char *str) ;


/* Provides inline definitions of functions */
/* (useful for mapping them to the type of the same width) */
















































/* If long == long long, then just map them one-to-one */

static __inline__ unsigned long xstrtoul_range_sfx(const char *str, int b, unsigned long l, unsigned long u, const struct suffix_mult *sfx) { return xstrtoull_range_sfx(str, b, l, u, sfx); } static __inline__ unsigned long xstrtoul_range(const char *str, int b, unsigned long l, unsigned long u) { return xstrtoull_range(str, b, l, u); } static __inline__ unsigned long xstrtoul_sfx(const char *str, int b, const struct suffix_mult *sfx) { return xstrtoull_sfx(str, b, sfx); } static __inline__ unsigned long xstrtoul(const char *str, int b) { return xstrtoull(str, b); } static __inline__ unsigned long xatoul_range_sfx(const char *str, unsigned long l, unsigned long u, const struct suffix_mult *sfx) { return xatoull_range_sfx(str, l, u, sfx); } static __inline__ unsigned long xatoul_range(const char *str, unsigned long l, unsigned long u) { return xatoull_range(str, l, u); } static __inline__ unsigned long xatoul_sfx(const char *str, const struct suffix_mult *sfx) { return xatoull_sfx(str, sfx); } static __inline__ unsigned long xatoul(const char *str) { return xatoull(str); } static __inline__ long xstrtol_range_sfx(const char *str, int b, long l, long u, const struct suffix_mult *sfx) { return xstrtoll_range_sfx(str, b, l, u, sfx); } static __inline__ long xstrtol_range(const char *str, int b, long l, long u) { return xstrtoll_range(str, b, l, u); } static __inline__ long xstrtol(const char *str, int b) { return xstrtoll(str, b); } static __inline__ long xatol_range_sfx(const char *str, long l, long u, const struct suffix_mult *sfx) { return xatoll_range_sfx(str, l, u, sfx); } static __inline__ long xatol_range(const char *str, long l, long u) { return xatoll_range(str, l, u); } static __inline__ long xatol_sfx(const char *str, const struct suffix_mult *sfx) { return xatoll_sfx(str, sfx); } static __inline__ long xatol(const char *str) { return xatoll(str); }
 


/* Same for int -> [long] long */


 
 unsigned int xstrtou_range_sfx(const char *str, int b, unsigned int l, unsigned int u, const struct suffix_mult *sfx) ; unsigned int xstrtou_range(const char *str, int b, unsigned int l, unsigned int u) ; unsigned int xstrtou_sfx(const char *str, int b, const struct suffix_mult *sfx) ; unsigned int xstrtou(const char *str, int b) ; unsigned int xatou_range_sfx(const char *str, unsigned int l, unsigned int u, const struct suffix_mult *sfx) ; unsigned int xatou_range(const char *str, unsigned int l, unsigned int u) ; unsigned int xatou_sfx(const char *str, const struct suffix_mult *sfx) ; unsigned int xatou(const char *str) ; int xstrtoi_range_sfx(const char *str, int b, int l, int u, const struct suffix_mult *sfx) ; int xstrtoi_range(const char *str, int b, int l, int u) ; int xstrtoi(const char *str, int b) ; int xatoi_range_sfx(const char *str, int l, int u, const struct suffix_mult *sfx) ; int xatoi_range(const char *str, int l, int u) ; int xatoi_sfx(const char *str, const struct suffix_mult *sfx) ; int xatoi(const char *str) ;

/* Specialized */

uint32_t BUG_xatou32_unimplemented(void);
static __inline__ uint32_t xatou32(const char *numstr)
{
	if ((2147483647 * 2U + 1U) == 0xffffffff)
		return xatou(numstr);
	if ((9223372036854775807L * 2UL + 1UL) == 0xffffffff)
		return xatoul(numstr);
	return BUG_xatou32_unimplemented();
}

/* Non-aborting kind of convertors: bb_strto[u][l]l */

/* On exit: errno = 0 only if there was non-empty, '\0' terminated value
 * errno = EINVAL if value was not '\0' terminated, but otherwise ok
 *    Return value is still valid, caller should just check whether end[0]
 *    is a valid terminating char for particular case. OTOH, if caller
 *    requires '\0' terminated input, [s]he can just check errno == 0.
 * errno = ERANGE if value had alphanumeric terminating char ("1234abcg").
 * errno = ERANGE if value is out of range, missing, etc.
 * errno = ERANGE if value had minus sign for strtouXX (even "-0" is not ok )
 *    return value is all-ones in this case.
 */

unsigned long long bb_strtoull(const char *arg, char **endp, int base) ;
long long bb_strtoll(const char *arg, char **endp, int base) ;


static __inline__
unsigned long bb_strtoul(const char *arg, char **endp, int base)
{ return bb_strtoull(arg, endp, base); }
static __inline__
long bb_strtol(const char *arg, char **endp, int base)
{ return bb_strtoll(arg, endp, base); }
 









 





 unsigned bb_strtou(const char *arg, char **endp, int base) ;
int bb_strtoi(const char *arg, char **endp, int base) ;

uint32_t BUG_bb_strtou32_unimplemented(void);
static __inline__
uint32_t bb_strtou32(const char *arg, char **endp, int base)
{
	if (sizeof(uint32_t) == sizeof(unsigned))
		return bb_strtou(arg, endp, base);
	if (sizeof(uint32_t) == sizeof(unsigned long))
		return bb_strtoul(arg, endp, base);
	return BUG_bb_strtou32_unimplemented();
}
static __inline__
int32_t bb_strtoi32(const char *arg, char **endp, int base)
{
	if (sizeof(int32_t) == sizeof(int))
		return bb_strtoi(arg, endp, base);
	if (sizeof(int32_t) == sizeof(long))
		return bb_strtol(arg, endp, base);
	return BUG_bb_strtou32_unimplemented();
}

/* Floating point */

double bb_strtod(const char *arg, char **endp) ;

_Pragma("GCC visibility pop")
#line 852 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/libbb.h" 2
/* Specialized: */

/* Using xatoi() instead of naive atoi() is not always convenient -
 * in many places people want *non-negative* values, but store them
 * in signed int. Therefore we need this one:
 * dies if input is not in [0, INT_MAX] range. Also will reject '-0' etc.
 * It should really be named xatoi_nonnegative (since it allows 0),
 * but that would be too long.
 */
int xatoi_positive(const char *numstr) ;

/* Useful for reading port numbers */
uint16_t xatou16(const char *numstr) ;


/* These parse entries in /etc/passwd and /etc/group.  This is desirable
 * for BusyBox since we want to avoid using the glibc NSS stuff, which
 * increases target size and is often not needed on embedded systems.  */
long xuname2uid(const char *name) ;
long xgroup2gid(const char *name) ;
/* wrapper: allows string to contain numeric uid or gid */
unsigned long get_ug_id(const char *s, long  (*xname2id)(const char *)) ;
/* from chpst. Does not die, returns 0 on failure */
struct bb_uidgid_t {
	uid_t uid;
	gid_t gid;
};
/* always sets uid and gid */
int get_uidgid(struct bb_uidgid_t*, const char*, int numeric_ok) ;
/* always sets uid and gid, allows numeric; exits on failure */
void xget_uidgid(struct bb_uidgid_t*, const char*) ;
/* chown-like handling of "user[:[group]" */
void parse_chown_usergroup_or_die(struct bb_uidgid_t *u, char *user_group) ;
struct passwd* xgetpwnam(const char *name) ;
struct group* xgetgrnam(const char *name) ;
struct passwd* xgetpwuid(uid_t uid) ;
struct group* xgetgrgid(gid_t gid) ;
char* xuid2uname(uid_t uid) ;
char* xgid2group(gid_t gid) ;
char* uid2uname(uid_t uid) ;
char* gid2group(gid_t gid) ;
char* uid2uname_utoa(uid_t uid) ;
char* gid2group_utoa(gid_t gid) ;
/* versions which cache results (useful for ps, ls etc) */
const char* get_cached_username(uid_t uid) ;
const char* get_cached_groupname(gid_t gid) ;
void clear_username_cache(void) ;
/* internally usernames are saved in fixed-sized char[] buffers */
enum { USERNAME_MAX_SIZE = 32 - sizeof(uid_t) };
#if definedEx(CONFIG_FEATURE_CHECK_NAMES)
void die_if_bad_username(const char* name) ;
#endif
#if !definedEx(CONFIG_FEATURE_CHECK_NAMES)

#endif

void  write_new_utmp(pid_t pid, int new_type, const char *tty_name, const char *username, const char *hostname);
void  update_utmp(pid_t pid, int new_type, const char *tty_name, const char *username, const char *hostname);
 


int execable_file(const char *name) ;
char *find_execable(const char *filename, char **PATHp) ;
int exists_execable(const char *filename) ;

/* BB_EXECxx always execs (it's not doing NOFORK/NOEXEC stuff),
 * but it may exec busybox and call applet instead of searching PATH.
 */
#if definedEx(CONFIG_FEATURE_PREFER_APPLETS)
int BB_EXECVP(const char *file, char *const argv[]) ;






#endif
#if !definedEx(CONFIG_FEATURE_PREFER_APPLETS)


#endif
int BB_EXECVP_or_die(char **argv) __attribute__ ((__noreturn__)) ;

/* xvfork() can't be a _function_, return after vfork mangles stack
 * in the parent. It must be a macro. */







#if !definedEx(CONFIG_NOMMU)
pid_t xfork(void) ;
#endif
/* NOMMU friendy fork+exec: */
pid_t spawn(char **argv) ;
pid_t xspawn(char **argv) ;

pid_t safe_waitpid(pid_t pid, int *wstat, int options) ;
pid_t wait_any_nohang(int *wstat) ;
/* wait4pid: unlike waitpid, waits ONLY for one process.
 * Returns sig + 0x180 if child is killed by signal.
 * It's safe to pass negative 'pids' from failed [v]fork -
 * wait4pid will return -1 (and will not clobber [v]fork's errno).
 * IOW: rc = wait4pid(spawn(argv));
 *      if (rc < 0) bb_perror_msg("%s", argv[0]);
 *      if (rc > 0) bb_error_msg("exit code: %d", rc & 0xff);
 */
int wait4pid(pid_t pid) ;
/* Same as wait4pid(spawn(argv)), but with NOFORK/NOEXEC if configured: */
int spawn_and_wait(char **argv) ;
/* Does NOT check that applet is NOFORK, just blindly runs it */
int run_nofork_applet(int applet_no, char **argv) ;

/* Helpers for daemonization.
 *
 * bb_daemonize(flags) = daemonize, does not compile on NOMMU
 *
 * bb_daemonize_or_rexec(flags, argv) = daemonizes on MMU (and ignores argv),
 *      rexec's itself on NOMMU with argv passed as command line.
 * Thus bb_daemonize_or_rexec may cause your <applet>_main() to be re-executed
 * from the start. (It will detect it and not reexec again second time).
 * You have to audit carefully that you don't do something twice as a result
 * (opening files/sockets, parsing config files etc...)!
 *
 * Both of the above will redirect fd 0,1,2 to /dev/null and drop ctty
 * (will do setsid()).
 *
 * fork_or_rexec(argv) = bare-bones fork on MMU,
 *      "vfork + re-exec ourself" on NOMMU. No fd redirection, no setsid().
 *      On MMU ignores argv.
 *
 * Helper for network daemons in foreground mode:
 *
 * bb_sanitize_stdio() = make sure that fd 0,1,2 are opened by opening them
 * to /dev/null if they are not.
 */
enum {
	DAEMON_CHDIR_ROOT = 1,
	DAEMON_DEVNULL_STDIO = 2,
	DAEMON_CLOSE_EXTRA_FDS = 4,
	DAEMON_ONLY_SANITIZE = 8, /* internal use */
	DAEMON_DOUBLE_FORK = 16, /* double fork to avoid controlling tty */
};
#if !definedEx(CONFIG_NOMMU)
  enum { re_execed = 0 };



#endif
#if definedEx(CONFIG_NOMMU)
  extern _Bool re_execed;
  /* Note: re_exec() and fork_or_rexec() do argv[0][0] |= 0x80 on NOMMU!
   * _Parent_ needs to undo it if it doesn't want to have argv[0] mangled.
   */
  void re_exec(char **argv) __attribute__ ((__noreturn__)) ;
  pid_t fork_or_rexec(char **argv) ;
  int  BUG_fork_is_unavailable_on_nommu(void) ;
  int  BUG_daemon_is_unavailable_on_nommu(void) ;
  void BUG_bb_daemonize_is_unavailable_on_nommu(void) ;




#endif
void 
#if !definedEx(CONFIG_NOMMU)
bb_daemonize_or_rexec(int flags)
#endif
#if definedEx(CONFIG_NOMMU)
bb_daemonize_or_rexec(int flags, char **argv)
#endif
 ;
void bb_sanitize_stdio(void) ;
/* Clear dangerous stuff, set PATH. Return 1 if was run by different user. */
int sanitize_env_if_suid(void) ;


char* single_argv(char **argv) ;
extern const char *const bb_argv_dash[]; /* "-", NULL */
extern const char *opt_complementary;
#if (definedEx(CONFIG_LONG_OPTS) || definedEx(CONFIG_FEATURE_GETOPT_LONG))



extern const char *applet_long_options;
#endif
extern uint32_t option_mask32;
extern uint32_t getopt32(char **argv, const char *applet_opts, ...) ;


/* Having next pointer as a first member allows easy creation
 * of "llist-compatible" structs, and using llist_FOO functions
 * on them.
 */
typedef struct llist_t {
	struct llist_t *link;
	char *data;
} llist_t;
void llist_add_to(llist_t **old_head, void *data) ;
void llist_add_to_end(llist_t **list_head, void *data) ;
void *llist_pop(llist_t **elm) ;
void llist_unlink(llist_t **head, llist_t *elm) ;
void llist_free(llist_t *elm, void (*freeit)(void *data)) ;
llist_t *llist_rev(llist_t *list) ;
llist_t *llist_find_str(llist_t *first, const char *str) ;
/* BTW, surprisingly, changing API to
 *   llist_t *llist_add_to(llist_t *old_head, void *data)
 * etc does not result in smaller code... */

/* start_stop_daemon and udhcpc are special - they want
 * to create pidfiles regardless of FEATURE_PIDFILE */
#if definedEx(CONFIG_FEATURE_PIDFILE)
/* True only if we created pidfile which is *file*, not /dev/null etc */
extern smallint wrote_pidfile;
void write_pidfile(const char *path) ;

#endif
#if !definedEx(CONFIG_FEATURE_PIDFILE)
enum { wrote_pidfile = 0 };


#endif
enum {
	LOGMODE_NONE = 0,
	LOGMODE_STDIO = (1 << 0),
	LOGMODE_SYSLOG = (1 << 1) * 
#if definedEx(CONFIG_FEATURE_SYSLOG)
1
#endif
#if !definedEx(CONFIG_FEATURE_SYSLOG)
0
#endif
,
	LOGMODE_BOTH = LOGMODE_SYSLOG + LOGMODE_STDIO,
};
extern const char *msg_eol;
extern smallint logmode;
extern int die_sleep;
extern uint8_t xfunc_error_retval;
extern jmp_buf die_jmp;
extern void xfunc_die(void) __attribute__ ((__noreturn__)) ;
extern void bb_show_usage(void) __attribute__ ((__noreturn__)) ;
extern void bb_error_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2))) ;
extern void bb_error_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2))) ;
extern void bb_perror_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2))) ;
extern void bb_simple_perror_msg(const char *s) ;
extern void bb_perror_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2))) ;
extern void bb_simple_perror_msg_and_die(const char *s) __attribute__ ((__noreturn__)) ;
extern void bb_herror_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2))) ;
extern void bb_herror_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2))) ;
extern void bb_perror_nomsg_and_die(void) __attribute__ ((__noreturn__)) ;
extern void bb_perror_nomsg(void) ;
extern void bb_info_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2))) ;
extern void bb_verror_msg(const char *s, va_list p, const char *strerr) ;

/* We need to export XXX_main from libbusybox
 * only if we build "individual" binaries
 */
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
/* Applets which are useful from another applets */
int bb_cat(char** argv);
/* If shell needs them, they exist even if not enabled as applets */
int echo_main(int argc, char** argv) 
#if definedEx(CONFIG_ECHO)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_ECHO)

#endif
;
int printf_main(int argc, char **argv) 
#if definedEx(CONFIG_PRINTF)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_PRINTF)

#endif
;
int test_main(int argc, char **argv) 
#if definedEx(CONFIG_TEST)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_TEST)

#endif
;
int kill_main(int argc, char **argv) 
#if definedEx(CONFIG_KILL)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_KILL)

#endif
;
/* Similar, but used by chgrp, not shell */
int chown_main(int argc, char **argv) 
#if definedEx(CONFIG_CHOWN)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_CHOWN)

#endif
;
/* Used by ftpd */
int ls_main(int argc, char **argv) 
#if definedEx(CONFIG_LS)

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif

#endif
#if !definedEx(CONFIG_LS)

#endif
;
/* Don't need IF_xxx() guard for these */
int gunzip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
int bunzip2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;

#if definedEx(CONFIG_ROUTE)
void bb_displayroutes(int noresolve, int netstatfmt) ;
#endif
/* Networking */
/* This structure defines protocol families and their handlers. */
struct aftype {
	const char *name;
	const char *title;
	int af;
	int alen;
	char*        (*print)(unsigned char *);
	const char*  (*sprint)(struct sockaddr *, int numeric);
	int          (*input)(/*int type,*/ const char *bufp, struct sockaddr *);
	void         (*herror)(char *text);
	int          (*rprint)(int options);
	int          (*rinput)(int typ, int ext, char **argv);
	/* may modify src */
	int          (*getmask)(char *src, struct sockaddr *mask, char *name);
};
/* This structure defines hardware protocols and their handlers. */
struct hwtype {
	const char *name;
	const char *title;
	int type;
	int alen;
	char*  (*print)(unsigned char *);
	int    (*input)(const char *, struct sockaddr *);
	int    (*activate)(int fd);
	int suppress_null_addr;
};
extern smallint interface_opt_a;
int display_interfaces(char *ifname) ;
int in_ether(const char *bufp, struct sockaddr *sap) ;
#if definedEx(CONFIG_FEATURE_HWIB)
int in_ib(const char *bufp, struct sockaddr *sap) ;
#endif
#if !definedEx(CONFIG_FEATURE_HWIB)

#endif
const struct aftype *get_aftype(const char *name) ;
const struct hwtype *get_hwtype(const char *name) ;
const struct hwtype *get_hwntype(int type) ;



extern int find_applet_by_name(const char *name) ;
/* Returns only if applet is not found. */
extern void run_applet_and_exit(const char *name, char **argv) ;
extern void run_applet_no_and_exit(int a, char **argv) __attribute__ ((__noreturn__)) ;


extern int match_fstype(const struct mntent *mt, const char *fstypes) ;
extern struct mntent *find_mount_point(const char *name, int subdir_too) ;

extern void erase_mtab(const char * name) ;
extern unsigned int tty_baud_to_value(speed_t speed) ;
extern speed_t tty_value_to_baud(unsigned int value) ;
#if definedEx(CONFIG_DESKTOP)
extern void bb_warn_ignoring_args(char *arg) ;
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
extern int get_linux_version_code(void) ;

extern char *query_loop(const char *device) ;
extern int del_loop(const char *device) ;
/* If *devname is not NULL, use that name, otherwise try to find free one,
 * malloc and return it in *devname.
 * return value: 1: read-only loopdev was setup, 0: rw, < 0: error */
extern int set_loop(char **devname, const char *file, unsigned long long offset, int ro) ;

/* Like bb_ask below, but asks on stdin with no timeout.  */
char *bb_ask_stdin(const char * prompt) ;
//TODO: pass buf pointer or return allocated buf (avoid statics)?
char *bb_ask(const int fd, int timeout, const char * prompt) ;
int bb_ask_confirmation(void) ;

int bb_parse_mode(const char* s, mode_t* theMode) ;

/*
 * Config file parser
 */
enum {
	PARSE_COLLAPSE  = 0x00010000, // treat consecutive delimiters as one
	PARSE_TRIM      = 0x00020000, // trim leading and trailing delimiters
// TODO: COLLAPSE and TRIM seem to always go in pair
	PARSE_GREEDY    = 0x00040000, // last token takes entire remainder of the line
	PARSE_MIN_DIE   = 0x00100000, // die if < min tokens found
	// keep a copy of current line
	PARSE_KEEP_COPY = 0x00200000 * 
#if definedEx(CONFIG_FEATURE_CROND_D)
1
#endif
#if !definedEx(CONFIG_FEATURE_CROND_D)
0
#endif
,
	PARSE_EOL_COMMENTS = 0x00400000, // comments are recognized even if they aren't the first char
	// NORMAL is:
	// * remove leading and trailing delimiters and collapse
	//   multiple delimiters into one
	// * warn and continue if less than mintokens delimiters found
	// * grab everything into last token
	// * comments are recognized even if they aren't the first char
	PARSE_NORMAL    = PARSE_COLLAPSE | PARSE_TRIM | PARSE_GREEDY | PARSE_EOL_COMMENTS,
};
typedef struct parser_t {
	FILE *fp;
	char *data;
	char *line, *nline;
	size_t line_alloc, nline_alloc;
	int lineno;
} parser_t;
parser_t* config_open(const char *filename) ;
parser_t* config_open2(const char *filename, FILE*  (*fopen_func)(const char *path)) ;
/* delims[0] is a comment char (use '\0' to disable), the rest are token delimiters */
int config_read(parser_t *parser, char **tokens, unsigned flags, const char *delims) ;


void config_close(parser_t *parser) ;

/* Concatenate path and filename to new allocated buffer.
 * Add "/" only as needed (no duplicate "//" are produced).
 * If path is NULL, it is assumed to be "/".
 * filename should not be NULL. */
char *concat_path_file(const char *path, const char *filename) ;
/* Returns NULL on . and .. */
char *concat_subpath_file(const char *path, const char *filename) ;


int bb_make_directory(char *path, long mode, int flags) ;

int get_signum(const char *name) ;
const char *get_signame(int number) ;
void print_signames(void) ;

char *bb_simplify_path(const char *path) ;
/* Returns ptr to NUL */
char *bb_simplify_abs_path_inplace(char *path) ;


extern void bb_do_delay(int seconds) ;
extern void change_identity(const struct passwd *pw) ;
extern void run_shell(const char *shell, int loginshell, const char *command, const char **additional_args) __attribute__ ((__noreturn__)) ;

/* Returns $SHELL, getpwuid(getuid())->pw_shell, or DEFAULT_SHELL.
 * Note that getpwuid result might need xstrdup'ing
 * if there is a possibility of intervening getpwxxx() calls.
 */
const char *get_shell_name(void) ;

#if definedEx(CONFIG_SELINUX)
extern void renew_current_security_context(void) ;
extern void set_current_security_context(security_context_t sid) ;
extern context_t set_security_context_component(security_context_t cur_context,
						char *user, char *role, char *type, char *range) ;
extern void setfscreatecon_or_die(security_context_t scontext) ;
extern void selinux_preserve_fcontext(int fdesc) ;
#endif
#if !definedEx(CONFIG_SELINUX)

#endif
extern void selinux_or_die(void) ;


/* systemd support */

int sd_listen_fds(void);


/* setup_environment:
 * if chdir pw->pw_dir: ok: else if to_tmp == 1: goto /tmp else: goto / or die
 * if clear_env = 1: cd(pw->pw_dir), clear environment, then set
 *   TERM=(old value)
 *   USER=pw->pw_name, LOGNAME=pw->pw_name
 *   PATH=bb_default_[root_]path
 *   HOME=pw->pw_dir
 *   SHELL=shell
 * else if change_env = 1:
 *   if not root (if pw->pw_uid != 0):
 *     USER=pw->pw_name, LOGNAME=pw->pw_name
 *   HOME=pw->pw_dir
 *   SHELL=shell
 * else does nothing
 */




void setup_environment(const char *shell, int flags, const struct passwd *pw) ;
void nuke_str(char *str) ;
int ask_and_check_password_extended(const struct passwd *pw, int timeout, const char *prompt) ;
int ask_and_check_password(const struct passwd *pw) ;
/* Returns a malloced string */
#if !definedEx(CONFIG_USE_BB_CRYPT)

#endif
extern char *
#if !definedEx(CONFIG_USE_BB_CRYPT)
pw_encrypt(const char *clear, const char *salt)
#endif
#if definedEx(CONFIG_USE_BB_CRYPT)
pw_encrypt(const char *clear, const char *salt, int cleanup)
#endif
 ;
extern int obscure(const char *old, const char *newval, const struct passwd *pwdp) ;
/*
 * rnd is additional random input. New one is returned.
 * Useful if you call crypt_make_salt many times in a row:
 * rnd = crypt_make_salt(buf1, 4, 0);
 * rnd = crypt_make_salt(buf2, 4, rnd);
 * rnd = crypt_make_salt(buf3, 4, rnd);
 * (otherwise we risk having same salt generated)
 */
extern int crypt_make_salt(char *p, int cnt /*, int rnd*/) ;
/* "$N$" + sha_salt_16_bytes + NUL */

extern char* crypt_make_pw_salt(char p[(3 + 16 + 1)], const char *algo) ;


/* Returns number of lines changed, or -1 on error */
#if (!definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP) && !definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP))


#endif
extern int 
#if (!definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP) && !definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP))
update_passwd(const char *filename, 
 const char *username, 
 const char *data)
#endif
#if (definedEx(CONFIG_FEATURE_ADDUSER_TO_GROUP) || definedEx(CONFIG_FEATURE_DEL_USER_FROM_GROUP))
update_passwd(const char *filename,
		const char *username,
		const char *data,
		const char *member)
#endif
 ;

int index_in_str_array(const char *const string_array[], const char *key) ;
int index_in_strings(const char *strings, const char *key) ;
int index_in_substr_array(const char *const string_array[], const char *key) ;
int index_in_substrings(const char *strings, const char *key) ;
const char *nth_string(const char *strings, int n) ;

extern void print_login_issue(const char *issue_file, const char *tty) ;
extern void print_login_prompt(void) ;

char *xmalloc_ttyname(int fd)  __attribute__ ((malloc));
/* NB: typically you want to pass fd 0, not 1. Think 'applet | grep something' */
int get_terminal_width_height(int fd, unsigned *width, unsigned *height) ;

int tcsetattr_stdin_TCSANOW(const struct termios *tp) ;

/* NB: "unsigned request" is crucial! "int request" will break some arches! */
int ioctl_or_perror(int fd, unsigned request, void *argp, const char *fmt,...) __attribute__ ((format (printf, 4, 5))) ;
int ioctl_or_perror_and_die(int fd, unsigned request, void *argp, const char *fmt,...) __attribute__ ((format (printf, 4, 5))) ;
#if definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
int bb_ioctl_or_warn(int fd, unsigned request, void *argp, const char *ioctl_name) ;
int bb_xioctl(int fd, unsigned request, void *argp, const char *ioctl_name) ;


#endif
#if !definedEx(CONFIG_IOCTL_HEX2STR_ERROR)
int bb_ioctl_or_warn(int fd, unsigned request, void *argp) ;
int bb_xioctl(int fd, unsigned request, void *argp) ;


#endif
char *is_in_ino_dev_hashtable(const struct stat *statbuf) ;
void add_to_ino_dev_hashtable(const struct stat *statbuf, const char *name) ;
void reset_ino_dev_hashtable(void) ;

/* At least glibc has horrendously large inline for this, so wrap it */
unsigned long long bb_makedev(unsigned major, unsigned minor) ;



/* "Keycodes" that report an escape sequence.
 * We use something which fits into signed char,
 * yet doesn't represent any valid Unicode character.
 * Also, -1 is reserved for error indication and we don't use it. */
enum {
	KEYCODE_UP       =  -2,
	KEYCODE_DOWN     =  -3,
	KEYCODE_RIGHT    =  -4,
	KEYCODE_LEFT     =  -5,
	KEYCODE_HOME     =  -6,
	KEYCODE_END      =  -7,
	KEYCODE_INSERT   =  -8,
	KEYCODE_DELETE   =  -9,
	KEYCODE_PAGEUP   = -10,
	KEYCODE_PAGEDOWN = -11,
	// -12 is reserved for Alt/Ctrl/Shift-TAB

	
	
	
	
	
	
	
	
	
	
	
	

	/* Be sure that last defined value is small enough
	 * to not interfere with Alt/Ctrl/Shift bits.
	 * So far we do not exceed -31 (0xfff..fffe1),
	 * which gives us three upper bits in LSB to play with.
	 */
	//KEYCODE_SHIFT_TAB  = (-12)         & ~0x80,
	//KEYCODE_SHIFT_...  = KEYCODE_...   & ~0x80,
	//KEYCODE_CTRL_UP    = KEYCODE_UP    & ~0x40,
	//KEYCODE_CTRL_DOWN  = KEYCODE_DOWN  & ~0x40,
	KEYCODE_CTRL_RIGHT = KEYCODE_RIGHT & ~0x40,
	KEYCODE_CTRL_LEFT  = KEYCODE_LEFT  & ~0x40,
	//KEYCODE_ALT_UP     = KEYCODE_UP    & ~0x20,
	//KEYCODE_ALT_DOWN   = KEYCODE_DOWN  & ~0x20,
	KEYCODE_ALT_RIGHT  = KEYCODE_RIGHT & ~0x20,
	KEYCODE_ALT_LEFT   = KEYCODE_LEFT  & ~0x20,

	KEYCODE_CURSOR_POS = -0x100, /* 0xfff..fff00 */
	/* How long is the longest ESC sequence we know?
	 * We want it big enough to be able to contain
	 * cursor position sequence "ESC [ 9999 ; 9999 R"
	 */
	KEYCODE_BUFFER_SIZE = 16
};
/* Note: fd may be in blocking or non-blocking mode, both make sense.
 * For one, less uses non-blocking mode.
 * Only the first read syscall inside read_key may block indefinitely
 * (unless fd is in non-blocking mode),
 * subsequent reads will time out after a few milliseconds.
 * Return of -1 means EOF or error (errno == 0 on EOF).
 * buffer[0] is used as a counter of buffered chars and must be 0
 * on first call.
 * timeout:
 * -2: do not poll for input;
 * -1: poll(-1) (i.e. block);
 * >=0: poll for TIMEOUT milliseconds, return -1/EAGAIN on timeout
 */
int64_t read_key(int fd, char *buffer, int timeout) ;
void read_key_ungets(char *buffer, const char *str, unsigned len) ;


#if definedEx(CONFIG_FEATURE_EDITING)
/* It's NOT just ENABLEd or disabled. It's a number: */


unsigned size_from_HISTFILESIZE(const char *hp) ;
 

typedef struct line_input_t {
	int flags;
	const char *path_lookup;

	int cnt_history;
	int cur_history;
	int max_history; /* must never be <= 0 */
#if definedEx(CONFIG_FEATURE_EDITING_SAVEHISTORY)
	/* meaning of this field depends on FEATURE_EDITING_SAVE_ON_EXIT:
	 * if !FEATURE_EDITING_SAVE_ON_EXIT: "how many lines are
	 * in on-disk history"
	 * if FEATURE_EDITING_SAVE_ON_EXIT: "how many in-memory lines are
	 * also in on-disk history (and thus need to be skipped on save)"
	 */
	unsigned cnt_history_in_file;
	const char *hist_file;
#endif
	char *history[(255 + 0) + 1];

} line_input_t;
enum {
	DO_HISTORY       = 1 * ((255 + 0) > 0),
	TAB_COMPLETION   = 2 * 
#if definedEx(CONFIG_FEATURE_TAB_COMPLETION)
1
#endif
#if !definedEx(CONFIG_FEATURE_TAB_COMPLETION)
0
#endif
,
	USERNAME_COMPLETION = 4 * 
#if definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
1
#endif
#if !definedEx(CONFIG_FEATURE_USERNAME_COMPLETION)
0
#endif
,
	VI_MODE          = 8 * 
#if definedEx(CONFIG_FEATURE_EDITING_VI)
1
#endif
#if !definedEx(CONFIG_FEATURE_EDITING_VI)
0
#endif
,
	WITH_PATH_LOOKUP = 0x10,
	FOR_SHELL        = DO_HISTORY | TAB_COMPLETION | USERNAME_COMPLETION,
};
line_input_t *new_line_input_t(int flags) ;
/* So far static: void free_line_input_t(line_input_t *n) FAST_FUNC; */
/*
 * maxsize must be >= 2.
 * Returns:
 * -1 on read errors or EOF, or on bare Ctrl-D,
 * 0  on ctrl-C (the line entered is still returned in 'command'),
 * >0 length of input string, including terminating '\n'
 */
int read_line_input(line_input_t *st, const char *prompt, char *command, int maxsize, int timeout) ;
void show_history(const line_input_t *st) ;
#if definedEx(CONFIG_FEATURE_EDITING_SAVE_ON_EXIT)
void save_history(line_input_t *st);
#endif
#endif
#if !definedEx(CONFIG_FEATURE_EDITING)

int read_line_input(const char* prompt, char* command, int maxsize) ;


#endif



 /* synchronize with sizeof(task_struct.comm) in /usr/include/linux/sched.h */
enum { COMM_LEN = 16 };


struct smaprec {
	unsigned long mapped_rw;
	unsigned long mapped_ro;
	unsigned long shared_clean;
	unsigned long shared_dirty;
	unsigned long private_clean;
	unsigned long private_dirty;
	unsigned long stack;
	unsigned long smap_pss, smap_swap;
	unsigned long smap_size;
	unsigned long smap_start;
	char smap_mode[5];
	char *smap_name;
};

#if !definedEx(CONFIG_PMAP)


#endif
int  
#if !definedEx(CONFIG_PMAP)
procps_read_smaps(pid_t pid, struct smaprec *total)
#endif
#if definedEx(CONFIG_PMAP)
procps_read_smaps(pid_t pid, struct smaprec *total,
		void (*cb)(struct smaprec *, void *), void *data)
#endif
;

typedef struct procps_status_t {
	DIR *dir;
	
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
DIR *task_dir;
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)

#endif

	uint8_t shift_pages_to_bytes;
	uint8_t shift_pages_to_kb;
/* Fields are set to 0/NULL if failed to determine (or not requested) */
	uint16_t argv_len;
	char *argv0;
	char *exe;
	
#if definedEx(CONFIG_SELINUX)
char *context;
#endif
#if !definedEx(CONFIG_SELINUX)

#endif

	
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
unsigned main_thread_pid;
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)

#endif

	/* Everything below must contain no ptrs to malloc'ed data:
	 * it is memset(0) for each process in procps_scan() */
	unsigned long vsz, rss; /* we round it to kbytes */
	unsigned long stime, utime;
	unsigned long start_time;
	unsigned pid;
	unsigned ppid;
	unsigned pgid;
	unsigned sid;
	unsigned uid;
	unsigned gid;
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
	unsigned ruid;
	unsigned rgid;
	int niceness;
#endif
	unsigned tty_major,tty_minor;
#if definedEx(CONFIG_FEATURE_TOPMEM)
	struct smaprec smaps;
#endif
	char state[4];
	/* basename of executable in exec(2), read from /proc/N/stat
	 * (if executable is symlink or script, it is NOT replaced
	 * by link target or interpreter name) */
	char comm[COMM_LEN];
	/* user/group? - use passwd/group parsing functions */
#if definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
	int last_seen_on_cpu;
#endif
} procps_status_t;
/* flag bits for procps_scan(xx, flags) calls */
enum {
	PSSCAN_PID      = 1 << 0,
	PSSCAN_PPID     = 1 << 1,
	PSSCAN_PGID     = 1 << 2,
	PSSCAN_SID      = 1 << 3,
	PSSCAN_UIDGID   = 1 << 4,
	PSSCAN_COMM     = 1 << 5,
	/* PSSCAN_CMD      = 1 << 6, - use read_cmdline instead */
	PSSCAN_ARGV0    = 1 << 7,
	PSSCAN_EXE      = 1 << 8,
	PSSCAN_STATE    = 1 << 9,
	PSSCAN_VSZ      = 1 << 10,
	PSSCAN_RSS      = 1 << 11,
	PSSCAN_STIME    = 1 << 12,
	PSSCAN_UTIME    = 1 << 13,
	PSSCAN_TTY      = 1 << 14,
	PSSCAN_SMAPS	= (1 << 15) * 
#if definedEx(CONFIG_FEATURE_TOPMEM)
1
#endif
#if !definedEx(CONFIG_FEATURE_TOPMEM)
0
#endif
,
	/* NB: used by find_pid_by_name(). Any applet using it
	 * needs to be mentioned here. */
	PSSCAN_ARGVN    = (1 << 16) * (
#if definedEx(CONFIG_KILLALL)
1
#endif
#if !definedEx(CONFIG_KILLALL)
0
#endif

				|| 
#if definedEx(CONFIG_PGREP)
1
#endif
#if !definedEx(CONFIG_PGREP)
0
#endif
 || 
#if definedEx(CONFIG_PKILL)
1
#endif
#if !definedEx(CONFIG_PKILL)
0
#endif

				|| 
#if definedEx(CONFIG_PIDOF)
1
#endif
#if !definedEx(CONFIG_PIDOF)
0
#endif

				|| 
#if definedEx(CONFIG_SESTATUS)
1
#endif
#if !definedEx(CONFIG_SESTATUS)
0
#endif

				),
	PSSCAN_CONTEXT  = (1 << 17) * 
#if definedEx(CONFIG_SELINUX)
1
#endif
#if !definedEx(CONFIG_SELINUX)
0
#endif
,
	PSSCAN_START_TIME = 1 << 18,
	PSSCAN_CPU      = (1 << 19) * 
#if definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
1
#endif
#if !definedEx(CONFIG_FEATURE_TOP_SMP_PROCESS)
0
#endif
,
	PSSCAN_NICE     = (1 << 20) * 
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
1
#endif
#if !definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
0
#endif
,
	PSSCAN_RUIDGID  = (1 << 21) * 
#if definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
1
#endif
#if !definedEx(CONFIG_FEATURE_PS_ADDITIONAL_COLUMNS)
0
#endif
,
	PSSCAN_TASKS	= (1 << 22) * 
#if definedEx(CONFIG_FEATURE_SHOW_THREADS)
1
#endif
#if !definedEx(CONFIG_FEATURE_SHOW_THREADS)
0
#endif
,
};
//procps_status_t* alloc_procps_scan(void) FAST_FUNC;
void free_procps_scan(procps_status_t* sp) ;
procps_status_t* procps_scan(procps_status_t* sp, int flags) ;
/* Format cmdline (up to col chars) into char buf[size] */
/* Puts [comm] if cmdline is empty (-> process is a kernel thread) */
void read_cmdline(char *buf, int size, unsigned pid, const char *comm) ;
pid_t *find_pid_by_name(const char* procName) ;
pid_t *pidlist_reverse(pid_t *pidList) ;
int starts_with_cpu(const char *str) ;
unsigned get_cpu_count(void) ;


/* Use strict=1 if you process input from untrusted source:
 * it will return NULL on invalid %xx (bad hex chars)
 * and str + 1 if decoded char is / or NUL.
 * In non-strict mode, it always succeeds (returns str),
 * and also it additionally decoded '+' to space.
 */
char *percent_decode_in_place(char *str, int strict) ;


extern const char bb_uuenc_tbl_base64[] __attribute__((aligned(1)));
extern const char bb_uuenc_tbl_std[] __attribute__((aligned(1)));
void bb_uuencode(char *store, const void *s, int length, const char *tbl) ;
enum {
	BASE64_FLAG_UU_STOP = 0x100,
	/* Sign-extends to a value which never matches fgetc result: */
	BASE64_FLAG_NO_STOP_CHAR = 0x80,
};
const char *decode_base64(char **pp_dst, const char *src) ;
void read_base64(FILE *src_stream, FILE *dst_stream, int flags) ;

typedef struct md5_ctx_t {
	uint8_t wbuffer[64]; /* always correctly aligned for uint64_t */
	void (*process_block)(struct md5_ctx_t*) ;
	uint64_t total64;    /* must be directly before hash[] */
	uint32_t hash[8];    /* 4 elements for md5, 5 for sha1, 8 for sha256 */
} md5_ctx_t;
typedef struct md5_ctx_t sha1_ctx_t;
typedef struct md5_ctx_t sha256_ctx_t;
typedef struct sha512_ctx_t {
	uint64_t total64[2];  /* must be directly before hash[] */
	uint64_t hash[8];
	uint8_t wbuffer[128]; /* always correctly aligned for uint64_t */
} sha512_ctx_t;
typedef struct sha3_ctx_t {
	uint64_t state[25];
	unsigned bytes_queued;
} sha3_ctx_t;
void md5_begin(md5_ctx_t *ctx) ;
void md5_hash(md5_ctx_t *ctx, const void *buffer, size_t len) ;
void md5_end(md5_ctx_t *ctx, void *resbuf) ;
void sha1_begin(sha1_ctx_t *ctx) ;

void sha1_end(sha1_ctx_t *ctx, void *resbuf) ;
void sha256_begin(sha256_ctx_t *ctx) ;


void sha512_begin(sha512_ctx_t *ctx) ;
void sha512_hash(sha512_ctx_t *ctx, const void *buffer, size_t len) ;
void sha512_end(sha512_ctx_t *ctx, void *resbuf) ;
void sha3_begin(sha3_ctx_t *ctx) ;
void sha3_hash(sha3_ctx_t *ctx, const void *buffer, size_t len) ;
void sha3_end(sha3_ctx_t *ctx, void *resbuf) ;

extern uint32_t *global_crc32_table;
uint32_t *crc32_filltable(uint32_t *tbl256, int endian) ;
uint32_t crc32_block_endian1(uint32_t val, const void *buf, unsigned len, uint32_t *crc_table) ;
uint32_t crc32_block_endian0(uint32_t val, const void *buf, unsigned len, uint32_t *crc_table) ;

typedef struct masks_labels_t {
	const char *labels;
	const int masks[];
} masks_labels_t;
int print_flags_separated(const int *masks, const char *labels,
		int flags, const char *separator) ;
int print_flags(const masks_labels_t *ml, int flags) ;

typedef struct bb_progress_t {
	unsigned last_size;
	unsigned last_update_sec;
	unsigned last_change_sec;
	unsigned start_sec;
	const char *curfile;
} bb_progress_t;






void bb_progress_init(bb_progress_t *p, const char *curfile) ;
void bb_progress_update(bb_progress_t *p,
			uoff_t beg_range,
			uoff_t transferred,
			uoff_t totalsize) ;


extern const char *applet_name;

/* Some older linkers don't perform string merging, we used to have common strings
 * as global arrays to do it by hand. But:
 * (1) newer linkers do it themselves,
 * (2) however, they DONT merge string constants with global arrays,
 * even if the value is the same (!). Thus global arrays actually
 * increased size a bit: for example, "/etc/passwd" string from libc
 * wasn't merged with bb_path_passwd_file[] array!
 * Therefore now we use #defines.
 */
/* "BusyBox vN.N.N (timestamp or extra_version)" */
extern const char bb_banner[] __attribute__((aligned(1)));
extern const char bb_msg_memory_exhausted[] __attribute__((aligned(1)));
extern const char bb_msg_invalid_date[] __attribute__((aligned(1)));


extern const char bb_msg_unknown[] __attribute__((aligned(1)));
extern const char bb_msg_can_not_create_raw_socket[] __attribute__((aligned(1)));
extern const char bb_msg_perm_denied_are_you_root[] __attribute__((aligned(1)));
extern const char bb_msg_you_must_be_root[] __attribute__((aligned(1)));
extern const char bb_msg_requires_arg[] __attribute__((aligned(1)));
extern const char bb_msg_invalid_arg[] __attribute__((aligned(1)));
extern const char bb_msg_standard_input[] __attribute__((aligned(1)));
extern const char bb_msg_standard_output[] __attribute__((aligned(1)));

/* NB: (bb_hexdigits_upcase[i] | 0x20) -> lowercase hex digit */
extern const char bb_hexdigits_upcase[] __attribute__((aligned(1)));

extern const char bb_path_wtmp_file[] __attribute__((aligned(1)));

/* Busybox mount uses either /proc/mounts or /etc/mtab to
 * get the list of currently mounted filesystems */










extern const char bb_busybox_exec_path[] __attribute__((aligned(1)));
/* util-linux manpage says /sbin:/bin:/usr/sbin:/usr/bin,
 * but I want to save a few bytes here */
extern const char bb_PATH_root_path[] __attribute__((aligned(1))); /* "PATH=/sbin:/usr/sbin:/bin:/usr/bin" */



extern const int const_int_0;
extern const int const_int_1;


/* Providing hard guarantee on minimum size (think of BUFSIZ == 128) */
enum { COMMON_BUFSIZE = (8192 >= 256*sizeof(void*) ? 8192+1 : 256*sizeof(void*)) };
extern char bb_common_bufsiz1[COMMON_BUFSIZE];
/* This struct is deliberately not defined. */
/* See docs/keep_data_small.txt */
struct globals;
/* '*const' ptr makes gcc optimize code much better.
 * Magic prevents ptr_to_globals from going into rodata.
 * If you want to assign a value, use SET_PTR_TO_GLOBALS(x) */
extern struct globals *const ptr_to_globals;
/* At least gcc 3.4.6 on mipsel system needs optimization barrier */











/* You can change LIBBB_DEFAULT_LOGIN_SHELL, but don't use it,
 * use bb_default_login_shell and following defines.
 * If you change LIBBB_DEFAULT_LOGIN_SHELL,
 * don't forget to change increment constant. */

extern const char bb_default_login_shell[] __attribute__((aligned(1)));
/* "/bin/sh" */

/* "sh" */


/* The following devices are the same on all systems.  */











 






#if definedEx(CONFIG_FEATURE_DEVFS)
/*Linux, obsolete devfs names */











#endif
#if !definedEx(CONFIG_FEATURE_DEVFS)
/*Linux, normal names */











#endif



/* We redefine ctype macros. Unicode-correct handling of char types
 * can't be done with such byte-oriented operations anyway,
 * we don't lose anything.
 */
















/* We save ~500 bytes on isdigit alone.
 * BTW, x86 likes (unsigned char) cast more than (unsigned). */

/* These work the same for ASCII and Unicode,
 * assuming no one asks "is this a *Unicode* letter?" using isalpha(letter) */







/* In POSIX/C locale isspace is only these chars: "\t\n\v\f\r" and space.
 * "\t\n\v\f\r" happen to have ASCII codes 9,10,11,12,13.
 */

// Unsafe wrt NUL: #define ispunct(a) (strchr("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~", (a)) != NULL)

// Bigger code: #define isalnum(a) ({ unsigned char bb__isalnum = (a) - '0'; bb__isalnum <= 9 || ((bb__isalnum - ('A' - '0')) & 0xdf) <= 25; })

static __inline__ int bb_ascii_isalnum(unsigned char a)
{
	unsigned char b = a - '0';
	if (b <= 9)
		return (b <= 9);
	b = (a|0x20) - 'a';
	return b <= 'z' - 'a';
}

static __inline__ int bb_ascii_isxdigit(unsigned char a)
{
	unsigned char b = a - '0';
	if (b <= 9)
		return (b <= 9);
	b = (a|0x20) - 'a';
	return b <= 'f' - 'a';
}

static __inline__ unsigned char bb_ascii_toupper(unsigned char a)
{
	unsigned char b = a - 'a';
	if (b <= ('z' - 'a'))
		a -= 'a' - 'A';
	return a;
}

static __inline__ unsigned char bb_ascii_tolower(unsigned char a)
{
	unsigned char b = a - 'A';
	if (b <= ('Z' - 'A'))
		a += 'a' - 'A';
	return a;
}

/* In ASCII and Unicode, these are likely to be very different.
 * Let's prevent ambiguous usage from the start */


/* NB: must not treat EOF as isgraph or isprint */




_Pragma("GCC visibility pop")


#line 10 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/busybox.h" 2
/* BB_DIR_foo and BB_SUID_bar constants: */
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/applet_metadata.h" 1
/* vi: set sw=4 ts=4: */
/*
 * Licensed under GPLv2 or later, see file LICENSE in this source tree.
 */



/* Note: can be included by both host and target builds! */

/* order matters: used as index into "install_dir[]" in appletlib.c */
typedef enum bb_install_loc_t {
	BB_DIR_ROOT = 0,
	BB_DIR_BIN,
	BB_DIR_SBIN,
#if definedEx(CONFIG_INSTALL_NO_USR)
	BB_DIR_USR_BIN  = BB_DIR_BIN,
	BB_DIR_USR_SBIN = BB_DIR_SBIN,
#endif
#if !definedEx(CONFIG_INSTALL_NO_USR)
	BB_DIR_USR_BIN,
	BB_DIR_USR_SBIN,
#endif
} bb_install_loc_t;

typedef enum bb_suid_t {
	BB_SUID_DROP = 0,
	BB_SUID_MAYBE,
	BB_SUID_REQUIRE
} bb_suid_t;


#line 12 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/busybox.h" 2

_Pragma("GCC visibility push(hidden)")

/* Defined in appletlib.c (by including generated applet_tables.h) */
/* Keep in sync with applets/applet_tables.c! */
extern const char applet_names[] __attribute__((aligned(1)));
extern int (*const applet_main[])(int argc, char **argv);
extern const uint16_t applet_nameofs[];
extern const uint8_t applet_install_loc[] __attribute__((aligned(1)));

#if (definedEx(CONFIG_FEATURE_SUID) || definedEx(CONFIG_FEATURE_PREFER_APPLETS))

#endif
#if (!definedEx(CONFIG_FEATURE_SUID) && !definedEx(CONFIG_FEATURE_PREFER_APPLETS))

#endif
#if definedEx(CONFIG_FEATURE_PREFER_APPLETS)


#endif
#if !definedEx(CONFIG_FEATURE_PREFER_APPLETS)


#endif
#if definedEx(CONFIG_FEATURE_SUID)

#endif
#if definedEx(CONFIG_FEATURE_INSTALLER)





#endif
/* Length of these names has effect on size of libbusybox
 * and "individual" binaries. Keep them short.
 */
#if definedEx(CONFIG_BUILD_LIBBUSYBOX)
#if definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
int lbb_main(char **argv) __attribute__(( visibility("default") ));
#endif
#if !definedEx(CONFIG_FEATURE_SHARED_BUSYBOX)
int lbb_main(char **argv);
#endif
#endif
_Pragma("GCC visibility pop")


#line 31 "gitbusybox/libbb/appletlib.c" 2


#line 1 "systems/redhat/usr/include/malloc.h" 1
/* Prototypes and definition for malloc implementation.
   Copyright (C) 1996, 1997, 1999, 2000, 2002-2004, 2005, 2007, 2009
   Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */




#line 1 "systems/redhat/usr/include/features.h" 1
/* Copyright (C) 1991-1993,1995-2007,2009,2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */


























































































































 



















































 
 
 














































 





































 
 

 





















































#line 26 "systems/redhat/usr/include/malloc.h" 2
#line 1 "systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stddef.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2002, 2004, 2009
   Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */


































































































































































 

























































































































































































 

 











#line 27 "systems/redhat/usr/include/malloc.h" 2
#line 1 "systems/redhat/usr/include/stdio.h" 1
/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991, 1994-2008, 2009, 2010 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */




















































 






 
















 































































		     








 

 























     







































		    





		      
		      
 

				 
  

				   
				   
  
 






		      

			
			









			  
			  




  














		    






		       










		    







		    






		     







		     






		     
     


		      
     






		      
     

		       
     

		     
     









		     
     

     







		   







		   







				
		       

		       

				    
			   
 
			    


			    














		    
     






     



		    
     







		       
			
		       
     

				
     

			   
			    
			    
     
 
			     
			     

			    

			     
			     































































































     

















			     













			       
			       

			     
			     








			    
			    



























		     





		      










			   









			      

			       




































 

		       
		       

 
















 

				 

		       
 











































































			   
     

			    
			    
     




































#line 28 "systems/redhat/usr/include/malloc.h" 2


/* Used by GNU libc internals. */





/* This macro will be used for functions which might take C++ callback
   functions.  */


 





/* Allocate SIZE bytes of memory.  */
extern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;

/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
extern void *calloc (size_t __nmemb, size_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__malloc__)) ;

/* Re-allocate the previously allocated block in __ptr, making the new
   block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */
extern void *realloc (void *__ptr, size_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__warn_unused_result__));

/* Free a block allocated by `malloc', `realloc' or `calloc'.  */
extern void free (void *__ptr) __attribute__ ((__nothrow__));

/* Free a block allocated by `calloc'. */
extern void cfree (void *__ptr) __attribute__ ((__nothrow__));

/* Allocate SIZE bytes allocated to ALIGNMENT bytes.  */
extern void *memalign (size_t __alignment, size_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__malloc__)) ;

/* Allocate SIZE bytes on a page boundary.  */
extern void *valloc (size_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__malloc__)) ;

/* Equivalent to valloc(minimum-page-that-holds(n)), that is, round up
   __size to nearest pagesize. */
extern void * pvalloc (size_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__malloc__)) ;

/* Underlying allocation function; successive calls should return
   contiguous pieces of memory.  */
extern void *(*__morecore) (ptrdiff_t __size);

/* Default value of `__morecore'.  */
extern void *__default_morecore (ptrdiff_t __size) __attribute__ ((__nothrow__))
       __attribute__ ((__malloc__));

/* SVID2/XPG mallinfo structure */

struct mallinfo {
  int arena;    /* non-mmapped space allocated from system */
  int ordblks;  /* number of free chunks */
  int smblks;   /* number of fastbin blocks */
  int hblks;    /* number of mmapped regions */
  int hblkhd;   /* space in mmapped regions */
  int usmblks;  /* maximum total allocated space */
  int fsmblks;  /* space available in freed fastbin blocks */
  int uordblks; /* total allocated space */
  int fordblks; /* total free space */
  int keepcost; /* top-most, releasable (via malloc_trim) space */
};

/* Returns a copy of the updated current mallinfo. */
extern struct mallinfo mallinfo (void) __attribute__ ((__nothrow__));

/* SVID2/XPG mallopt options */












/* mallopt options that actually do something */









/* General SVID/XPG interface to tunable parameters. */
extern int mallopt (int __param, int __val) __attribute__ ((__nothrow__));

/* Release all but __pad bytes of freed top-most memory back to the
   system. Return 1 if successful, else 0. */
extern int malloc_trim (size_t __pad) __attribute__ ((__nothrow__));

/* Report the number of usable allocated bytes associated with allocated
   chunk __ptr. */
extern size_t malloc_usable_size (void *__ptr) __attribute__ ((__nothrow__));

/* Prints brief summary statistics on stderr. */
extern void malloc_stats (void) __attribute__ ((__nothrow__));

/* Output information about state of allocator to stream FP.  */
extern int malloc_info (int __options, FILE *__fp);

/* Record the state of all malloc variables in an opaque data structure. */
extern void *malloc_get_state (void) __attribute__ ((__nothrow__));

/* Restore the state of all malloc variables from data obtained with
   malloc_get_state(). */
extern int malloc_set_state (void *__ptr) __attribute__ ((__nothrow__));

/* Called once when malloc is initialized; redefining this variable in
   the application provides the preferred way to set up the hook
   pointers. */
extern void (*__malloc_initialize_hook) (void);
/* Hooks for debugging and user-defined versions. */
extern void (*__free_hook) (void *__ptr,
 const void *);
extern void *(*__malloc_hook) (size_t __size,
 const void *);
extern void *(*__realloc_hook) (void *__ptr, size_t __size,
 const void *);
extern void *(*__memalign_hook) (size_t __alignment,
 size_t __size,
 const void *);
extern void (*__after_morecore_hook) (void);

/* Activate a standard set of debugging hooks. */
extern void __malloc_check_init (void) __attribute__ ((__nothrow__));





#line 36 "gitbusybox/libbb/appletlib.c" 2

/* Declare <applet>_main() */

#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/applets.h" 1
/* DO NOT EDIT. This file is generated from applets.src.h */
/* vi: set sw=4 ts=4: */
/*
 * applets.h - a listing of all busybox applets.
 *
 * If you write a new applet, you need to add an entry to this list to make
 * busybox aware of it.
 */

/*
name  - applet name as it is typed on command line
name2 - applet name, converted to C (ether-wake: name2 = ether_wake)
main  - corresponding <applet>_main to call (bzcat: main = bunzip2)
l     - location to install link to: [/usr]/[s]bin
s     - suid type:
        BB_SUID_REQUIRE: will complain if busybox isn't suid
        and is run by non-root (applet_main() will not be called at all)
        BB_SUID_DROP: will drop suid prior to applet_main()
        BB_SUID_MAYBE: neither of the above
        (every instance of BB_SUID_REQUIRE and BB_SUID_MAYBE
        needs to be justified in comment)
        NB: please update FEATURE_SUID help text whenever you add/remove
        BB_SUID_REQUIRE or BB_SUID_MAYBE applet.
*/







 




 




 




 




 




   





#if definedEx(CONFIG_INSTALL_NO_USR)


#endif

#if definedEx(CONFIG_AR)
int ar_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_AR)

#endif


#if definedEx(CONFIG_UNCOMPRESS)
int uncompress_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNCOMPRESS)

#endif


#if definedEx(CONFIG_GUNZIP)
int gunzip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GUNZIP)

#endif


#if definedEx(CONFIG_GUNZIP)
int gunzip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GUNZIP)

#endif


#if definedEx(CONFIG_BUNZIP2)
int bunzip2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BUNZIP2)

#endif


#if definedEx(CONFIG_BUNZIP2)
int bunzip2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BUNZIP2)

#endif


#if definedEx(CONFIG_UNLZMA)
int unlzma_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNLZMA)

#endif


#if definedEx(CONFIG_UNLZMA)
int unlzma_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNLZMA)

#endif


#if definedEx(CONFIG_LZMA)
int unlzma_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LZMA)

#endif


#if definedEx(CONFIG_UNXZ)
int unxz_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNXZ)

#endif


#if definedEx(CONFIG_UNXZ)
int unxz_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNXZ)

#endif


#if definedEx(CONFIG_XZ)
int unxz_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_XZ)

#endif


#if definedEx(CONFIG_BZIP2)
int bzip2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BZIP2)

#endif


#if definedEx(CONFIG_CPIO)
int cpio_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CPIO)

#endif


#if definedEx(CONFIG_DPKG)
int dpkg_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DPKG)

#endif


#if definedEx(CONFIG_DPKG_DEB)
int dpkg_deb_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DPKG_DEB)

#endif


#if definedEx(CONFIG_GZIP)
int gzip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GZIP)

#endif


#if definedEx(CONFIG_LZOP)
int lzop_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LZOP)

#endif


#if definedEx(CONFIG_LZOP)
int lzop_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LZOP)

#endif


#if definedEx(CONFIG_LZOP)
int lzop_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LZOP)

#endif


#if definedEx(CONFIG_RPM)
int rpm_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RPM)

#endif


#if definedEx(CONFIG_RPM2CPIO)
int rpm2cpio_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RPM2CPIO)

#endif


#if definedEx(CONFIG_TAR)
int tar_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TAR)

#endif


#if definedEx(CONFIG_UNZIP)
int unzip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNZIP)

#endif


#if definedEx(CONFIG_DATE)
int date_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DATE)

#endif


#if definedEx(CONFIG_HOSTID)
int hostid_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HOSTID)

#endif


#if definedEx(CONFIG_GROUPS)
int id_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GROUPS)

#endif


#if definedEx(CONFIG_ID)
int id_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ID)

#endif


#if definedEx(CONFIG_SHUF)
int shuf_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHUF)

#endif


#if definedEx(CONFIG_TOUCH)
int touch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TOUCH)

#endif


#if definedEx(CONFIG_BASE64)
int base64_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BASE64)

#endif


#if definedEx(CONFIG_USERS)
int who_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_USERS)

#endif


#if definedEx(CONFIG_WHO)
int who_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WHO)

#endif


#if definedEx(CONFIG_AWK)
int awk_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_AWK)

#endif


#if definedEx(CONFIG_CMP)
int cmp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CMP)

#endif


#if definedEx(CONFIG_DIFF)
int diff_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DIFF)

#endif


#if definedEx(CONFIG_ED)
int ed_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ED)

#endif


#if definedEx(CONFIG_PATCH)
int patch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PATCH)

#endif


#if definedEx(CONFIG_SED)
int sed_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SED)

#endif


#if definedEx(CONFIG_VI)
int vi_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_VI)

#endif

int find_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;

#if definedEx(CONFIG_GREP)
int grep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GREP)

#endif


#if definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)
int grep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_GREP_EGREP_ALIAS)

#endif


#if definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)
int grep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_GREP_FGREP_ALIAS)

#endif


#if definedEx(CONFIG_XARGS)
int xargs_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_XARGS)

#endif


#if definedEx(CONFIG_BOOTCHARTD)
int bootchartd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BOOTCHARTD)

#endif


#if definedEx(CONFIG_HALT)
int halt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HALT)

#endif


#if definedEx(CONFIG_HALT)
int halt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HALT)

#endif


#if definedEx(CONFIG_HALT)
int halt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HALT)

#endif


#if definedEx(CONFIG_INIT)
int init_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_INIT)

#endif


#if definedEx(CONFIG_FEATURE_INITRD)
int init_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_INITRD)

#endif


#if definedEx(CONFIG_MESG)
int mesg_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MESG)

#endif


#if definedEx(CONFIG_ADD_SHELL)
int add_remove_shell_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ADD_SHELL)

#endif


#if definedEx(CONFIG_REMOVE_SHELL)
int add_remove_shell_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_REMOVE_SHELL)

#endif


#if definedEx(CONFIG_CONSPY)
int conspy_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CONSPY)

#endif


#if definedEx(CONFIG_NANDWRITE)
int nandwrite_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NANDWRITE)

#endif


#if definedEx(CONFIG_NANDDUMP)
int nandwrite_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NANDDUMP)

#endif


#if definedEx(CONFIG_RFKILL)
int rfkill_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RFKILL)

#endif


#if definedEx(CONFIG_SETSERIAL)
int setserial_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETSERIAL)

#endif


#if definedEx(CONFIG_UBIATTACH)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIATTACH)

#endif


#if definedEx(CONFIG_UBIDETACH)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIDETACH)

#endif


#if definedEx(CONFIG_UBIMKVOL)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIMKVOL)

#endif


#if definedEx(CONFIG_UBIRMVOL)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIRMVOL)

#endif


#if definedEx(CONFIG_UBIRSVOL)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIRSVOL)

#endif


#if definedEx(CONFIG_UBIUPDATEVOL)
int ubi_tools_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UBIUPDATEVOL)

#endif


#if definedEx(CONFIG_WALL)
int wall_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WALL)

#endif


#if definedEx(CONFIG_DEPMOD)
int depmod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DEPMOD)

#endif


#if definedEx(CONFIG_INSMOD)
int insmod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_INSMOD)

#endif


#if definedEx(CONFIG_LSMOD)
int lsmod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LSMOD)

#endif


#if definedEx(CONFIG_MODINFO)
int modinfo_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODINFO)

#endif


#if definedEx(CONFIG_MODPROBE_SMALL)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)

#endif


#if definedEx(CONFIG_MODPROBE_SMALL)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)

#endif


#if definedEx(CONFIG_MODPROBE_SMALL)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)

#endif


#if definedEx(CONFIG_MODPROBE_SMALL)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)

#endif


#if definedEx(CONFIG_MODPROBE_SMALL)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE_SMALL)

#endif


#if definedEx(CONFIG_MODPROBE)
int modprobe_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MODPROBE)

#endif


#if definedEx(CONFIG_RMMOD)
int rmmod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RMMOD)

#endif


#if definedEx(CONFIG_NBDCLIENT)
int nbdclient_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NBDCLIENT)

#endif


#if definedEx(CONFIG_PING)
int ping_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PING)

#endif


#if definedEx(CONFIG_PING6)
int ping6_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PING6)

#endif


#if definedEx(CONFIG_WHOIS)
int whois_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WHOIS)

#endif


#if definedEx(CONFIG_IOSTAT)
int iostat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IOSTAT)

#endif


#if definedEx(CONFIG_LSOF)
int lsof_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LSOF)

#endif


#if definedEx(CONFIG_MPSTAT)
int mpstat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MPSTAT)

#endif


#if definedEx(CONFIG_NMETER)
int nmeter_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NMETER)

#endif


#if definedEx(CONFIG_PMAP)
int pmap_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PMAP)

#endif


#if definedEx(CONFIG_POWERTOP)
int powertop_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_POWERTOP)

#endif


#if definedEx(CONFIG_PSTREE)
int pstree_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PSTREE)

#endif


#if definedEx(CONFIG_PWDX)
int pwdx_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PWDX)

#endif


#if definedEx(CONFIG_SMEMCAP)
int smemcap_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SMEMCAP)

#endif


#if definedEx(CONFIG_ASH)
int ash_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ASH)

#endif


#if definedEx(CONFIG_FEATURE_SH_IS_ASH)
int ash_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_ASH)

#endif


#if definedEx(CONFIG_FEATURE_BASH_IS_ASH)
int ash_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_ASH)

#endif


#if definedEx(CONFIG_CTTYHACK)
int cttyhack_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CTTYHACK)

#endif


#if definedEx(CONFIG_HUSH)
int hush_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HUSH)

#endif


#if definedEx(CONFIG_MSH)
int msh_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MSH)

#endif


#if definedEx(CONFIG_FEATURE_SH_IS_HUSH)
int hush_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_SH_IS_HUSH)

#endif


#if definedEx(CONFIG_FEATURE_BASH_IS_HUSH)
int hush_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FEATURE_BASH_IS_HUSH)

#endif


#if definedEx(CONFIG_BLOCKDEV)
int blockdev_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BLOCKDEV)

#endif


#if definedEx(CONFIG_FSTRIM)
int fstrim_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FSTRIM)

#endif


#if definedEx(CONFIG_MDEV)
int mdev_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MDEV)

#endif


#if definedEx(CONFIG_REV)
int rev_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_REV)

#endif


#if definedEx(CONFIG_UDHCPC6)
int udhcpc6_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UDHCPC6)

#endif


#if definedEx(CONFIG_TEST)
int test_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TEST)

#endif


#if definedEx(CONFIG_TEST)
int test_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TEST)

#endif


#if definedEx(CONFIG_ACPID)
int acpid_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ACPID)

#endif


#if definedEx(CONFIG_ADDGROUP)
int addgroup_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ADDGROUP)

#endif


#if definedEx(CONFIG_ADDUSER)
int adduser_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ADDUSER)

#endif


#if definedEx(CONFIG_ADJTIMEX)
int adjtimex_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ADJTIMEX)

#endif


#if definedEx(CONFIG_ARP)
int arp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ARP)

#endif


#if definedEx(CONFIG_ARPING)
int arping_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ARPING)

#endif


#if definedEx(CONFIG_BASENAME)
int basename_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BASENAME)

#endif


#if definedEx(CONFIG_BBCONFIG)
int bbconfig_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BBCONFIG)

#endif


#if definedEx(CONFIG_BEEP)
int beep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BEEP)

#endif


#if definedEx(CONFIG_BLKID)
int blkid_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BLKID)

#endif


#if definedEx(CONFIG_BRCTL)
int brctl_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BRCTL)

#endif


#if definedEx(CONFIG_CAL)
int cal_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CAL)

#endif


#if definedEx(CONFIG_CAT)
int cat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CAT)

#endif


#if definedEx(CONFIG_CATV)
int catv_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CATV)

#endif


#if definedEx(CONFIG_CHAT)
int chat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHAT)

#endif


#if definedEx(CONFIG_CHATTR)
int chattr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHATTR)

#endif


#if definedEx(CONFIG_CHCON)
int chcon_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHCON)

#endif


#if definedEx(CONFIG_CHGRP)
int chgrp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHGRP)

#endif


#if definedEx(CONFIG_CHMOD)
int chmod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHMOD)

#endif


#if definedEx(CONFIG_CHOWN)
int chown_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHOWN)

#endif


#if definedEx(CONFIG_CHPASSWD)
int chpasswd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHPASSWD)

#endif


#if definedEx(CONFIG_CHPST)
int chpst_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHPST)

#endif


#if definedEx(CONFIG_CHROOT)
int chroot_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHROOT)

#endif


#if definedEx(CONFIG_CHRT)
int chrt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHRT)

#endif


#if definedEx(CONFIG_CHVT)
int chvt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CHVT)

#endif


#if definedEx(CONFIG_CKSUM)
int cksum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CKSUM)

#endif


#if definedEx(CONFIG_CLEAR)
int clear_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CLEAR)

#endif


#if definedEx(CONFIG_COMM)
int comm_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_COMM)

#endif


#if definedEx(CONFIG_CP)
int cp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CP)

#endif


#if definedEx(CONFIG_CROND)
int crond_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CROND)

#endif

/* Needs to be run by root or be suid root - needs to change /var/spool/cron* files: */

#if definedEx(CONFIG_CRONTAB)
int crontab_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CRONTAB)

#endif


#if definedEx(CONFIG_CRYPTPW)
int cryptpw_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CRYPTPW)

#endif


#if definedEx(CONFIG_CUT)
int cut_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CUT)

#endif


#if definedEx(CONFIG_DC)
int dc_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DC)

#endif


#if definedEx(CONFIG_DD)
int dd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DD)

#endif


#if definedEx(CONFIG_DEALLOCVT)
int deallocvt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DEALLOCVT)

#endif


#if definedEx(CONFIG_DELGROUP)
int deluser_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DELGROUP)

#endif


#if definedEx(CONFIG_DELUSER)
int deluser_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DELUSER)

#endif


#if definedEx(CONFIG_DEVFSD)
int devfsd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DEVFSD)

#endif


#if definedEx(CONFIG_DEVMEM)
int devmem_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DEVMEM)

#endif


#if definedEx(CONFIG_DF)
int df_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DF)

#endif


#if definedEx(CONFIG_DHCPRELAY)
int dhcprelay_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DHCPRELAY)

#endif


#if definedEx(CONFIG_DIRNAME)
int dirname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DIRNAME)

#endif


#if definedEx(CONFIG_DMESG)
int dmesg_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DMESG)

#endif


#if definedEx(CONFIG_DNSD)
int dnsd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DNSD)

#endif


#if definedEx(CONFIG_HOSTNAME)
int hostname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HOSTNAME)

#endif


#if definedEx(CONFIG_DOS2UNIX)
int dos2unix_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DOS2UNIX)

#endif


#if definedEx(CONFIG_DU)
int du_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DU)

#endif


#if definedEx(CONFIG_DUMPKMAP)
int dumpkmap_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DUMPKMAP)

#endif


#if definedEx(CONFIG_DUMPLEASES)
int dumpleases_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_DUMPLEASES)

#endif

//IF_E2FSCK(APPLET(e2fsck, BB_DIR_SBIN, BB_SUID_DROP))
//IF_E2LABEL(APPLET_ODDNAME(e2label, tune2fs, BB_DIR_SBIN, BB_SUID_DROP, e2label))

#if definedEx(CONFIG_ECHO)
int echo_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ECHO)

#endif


#if definedEx(CONFIG_EJECT)
int eject_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_EJECT)

#endif


#if definedEx(CONFIG_ENV)
int env_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ENV)

#endif


#if definedEx(CONFIG_ENVDIR)
int chpst_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ENVDIR)

#endif


#if definedEx(CONFIG_ENVUIDGID)
int chpst_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ENVUIDGID)

#endif


#if definedEx(CONFIG_ETHER_WAKE)
int ether_wake_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ETHER_WAKE)

#endif


#if definedEx(CONFIG_EXPAND)
int expand_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_EXPAND)

#endif


#if definedEx(CONFIG_EXPR)
int expr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_EXPR)

#endif


#if definedEx(CONFIG_FAKEIDENTD)
int fakeidentd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FAKEIDENTD)

#endif


#if definedEx(CONFIG_FALSE)
int false_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FALSE)

#endif


#if definedEx(CONFIG_FBSET)
int fbset_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FBSET)

#endif


#if definedEx(CONFIG_FBSPLASH)
int fbsplash_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FBSPLASH)

#endif


#if definedEx(CONFIG_FDFLUSH)
int freeramdisk_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FDFLUSH)

#endif


#if definedEx(CONFIG_FDFORMAT)
int fdformat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FDFORMAT)

#endif


#if definedEx(CONFIG_FDISK)
int fdisk_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FDISK)

#endif


#if definedEx(CONFIG_FGCONSOLE)
int fgconsole_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FGCONSOLE)

#endif

/* Benefits from suid root: better access to /dev/BLOCKDEVs: */

#if definedEx(CONFIG_FINDFS)
int findfs_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FINDFS)

#endif


#if definedEx(CONFIG_FLASH_ERASEALL)
int flash_eraseall_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FLASH_ERASEALL)

#endif


#if definedEx(CONFIG_FLASH_LOCK)
int flash_lock_unlock_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FLASH_LOCK)

#endif


#if definedEx(CONFIG_FLASH_UNLOCK)
int flash_lock_unlock_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FLASH_UNLOCK)

#endif


#if definedEx(CONFIG_FLASHCP)
int flashcp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FLASHCP)

#endif


#if definedEx(CONFIG_FLOCK)
int flock_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FLOCK)

#endif


#if definedEx(CONFIG_FOLD)
int fold_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FOLD)

#endif


#if definedEx(CONFIG_FREE)
int free_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FREE)

#endif


#if definedEx(CONFIG_FREERAMDISK)
int freeramdisk_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FREERAMDISK)

#endif


#if definedEx(CONFIG_FSCK)
int fsck_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FSCK)

#endif

//IF_E2FSCK(APPLET_ODDNAME(fsck.ext2, e2fsck, BB_DIR_SBIN, BB_SUID_DROP, fsck_ext2))
//IF_E2FSCK(APPLET_ODDNAME(fsck.ext3, e2fsck, BB_DIR_SBIN, BB_SUID_DROP, fsck_ext3))

#if definedEx(CONFIG_FSCK_MINIX)
int fsck_minix_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FSCK_MINIX)

#endif


#if definedEx(CONFIG_FSYNC)
int fsync_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FSYNC)

#endif


#if definedEx(CONFIG_FTPD)
int ftpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FTPD)

#endif


#if definedEx(CONFIG_FTPGET)
int ftpgetput_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FTPGET)

#endif


#if definedEx(CONFIG_FTPPUT)
int ftpgetput_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FTPPUT)

#endif


#if definedEx(CONFIG_FUSER)
int fuser_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_FUSER)

#endif


#if definedEx(CONFIG_GETENFORCE)
int getenforce_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GETENFORCE)

#endif


#if definedEx(CONFIG_GETOPT)
int getopt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GETOPT)

#endif


#if definedEx(CONFIG_GETSEBOOL)
int getsebool_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GETSEBOOL)

#endif


#if definedEx(CONFIG_GETTY)
int getty_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_GETTY)

#endif


#if definedEx(CONFIG_HD)
int hexdump_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HD)

#endif


#if definedEx(CONFIG_HDPARM)
int hdparm_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HDPARM)

#endif


#if definedEx(CONFIG_HEAD)
int head_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HEAD)

#endif


#if definedEx(CONFIG_HEXDUMP)
int hexdump_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HEXDUMP)

#endif


#if definedEx(CONFIG_HOSTNAME)
int hostname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HOSTNAME)

#endif


#if definedEx(CONFIG_HTTPD)
int httpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HTTPD)

#endif


#if definedEx(CONFIG_HWCLOCK)
int hwclock_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_HWCLOCK)

#endif


#if definedEx(CONFIG_IFCONFIG)
int ifconfig_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IFCONFIG)

#endif


#if definedEx(CONFIG_IFUPDOWN)
int ifupdown_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IFUPDOWN)

#endif


#if definedEx(CONFIG_IFENSLAVE)
int ifenslave_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IFENSLAVE)

#endif


#if definedEx(CONFIG_IFPLUGD)
int ifplugd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IFPLUGD)

#endif


#if definedEx(CONFIG_IFUPDOWN)
int ifupdown_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IFUPDOWN)

#endif


#if definedEx(CONFIG_INETD)
int inetd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_INETD)

#endif


#if definedEx(CONFIG_INOTIFYD)
int inotifyd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_INOTIFYD)

#endif


#if definedEx(CONFIG_INSTALL)
int install_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_INSTALL)

#endif


#if definedEx(CONFIG_IONICE)
int ionice_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IONICE)

#endif

#if (definedEx(CONFIG_FEATURE_IP_ADDRESS) || definedEx(CONFIG_FEATURE_IP_TUNNEL) || definedEx(CONFIG_FEATURE_IP_ROUTE) || definedEx(CONFIG_FEATURE_IP_LINK) || definedEx(CONFIG_FEATURE_IP_RULE))
int ip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif

#if definedEx(CONFIG_IPADDR)
int ipaddr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPADDR)

#endif


#if definedEx(CONFIG_IPCALC)
int ipcalc_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPCALC)

#endif


#if definedEx(CONFIG_IPCRM)
int ipcrm_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPCRM)

#endif


#if definedEx(CONFIG_IPCS)
int ipcs_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPCS)

#endif


#if definedEx(CONFIG_IPLINK)
int iplink_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPLINK)

#endif


#if definedEx(CONFIG_IPROUTE)
int iproute_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPROUTE)

#endif


#if definedEx(CONFIG_IPRULE)
int iprule_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPRULE)

#endif


#if definedEx(CONFIG_IPTUNNEL)
int iptunnel_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_IPTUNNEL)

#endif


#if definedEx(CONFIG_KBD_MODE)
int kbd_mode_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_KBD_MODE)

#endif


#if definedEx(CONFIG_KILL)
int kill_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_KILL)

#endif


#if definedEx(CONFIG_KILLALL)
int kill_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_KILLALL)

#endif


#if definedEx(CONFIG_KILLALL5)
int kill_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_KILLALL5)

#endif


#if definedEx(CONFIG_KLOGD)
int klogd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_KLOGD)

#endif

int last_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
//IF_LENGTH(APPLET_NOFORK(length, length, BB_DIR_USR_BIN, BB_SUID_DROP, length))

#if definedEx(CONFIG_LESS)
int less_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LESS)

#endif


#if definedEx(CONFIG_SETARCH)
int setarch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETARCH)

#endif


#if definedEx(CONFIG_SETARCH)
int setarch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETARCH)

#endif


#if definedEx(CONFIG_LN)
int ln_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LN)

#endif


#if definedEx(CONFIG_LOAD_POLICY)
int load_policy_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOAD_POLICY)

#endif


#if definedEx(CONFIG_LOADFONT)
int loadfont_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOADFONT)

#endif


#if definedEx(CONFIG_LOADKMAP)
int loadkmap_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOADKMAP)

#endif


#if definedEx(CONFIG_LOGGER)
int logger_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOGGER)

#endif

/* Needs to be run by root or be suid root - needs to change uid and gid: */

#if definedEx(CONFIG_LOGIN)
int login_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOGIN)

#endif


#if definedEx(CONFIG_LOGNAME)
int logname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOGNAME)

#endif


#if definedEx(CONFIG_LOGREAD)
int logread_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOGREAD)

#endif


#if definedEx(CONFIG_LOSETUP)
int losetup_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LOSETUP)

#endif


#if definedEx(CONFIG_LPD)
int lpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LPD)

#endif


#if definedEx(CONFIG_LPQ)
int lpqr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LPQ)

#endif


#if definedEx(CONFIG_LPR)
int lpqr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LPR)

#endif


#if definedEx(CONFIG_LS)
int ls_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LS)

#endif


#if definedEx(CONFIG_LSATTR)
int lsattr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LSATTR)

#endif


#if definedEx(CONFIG_LSPCI)
int lspci_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LSPCI)

#endif


#if definedEx(CONFIG_LSUSB)
int lsusb_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_LSUSB)

#endif

int makedevs_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;

#if definedEx(CONFIG_MAKEMIME)
int makemime_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MAKEMIME)

#endif


#if definedEx(CONFIG_MAN)
int man_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MAN)

#endif


#if definedEx(CONFIG_MATCHPATHCON)
int matchpathcon_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MATCHPATHCON)

#endif


#if definedEx(CONFIG_MD5SUM)
int md5_sha1_sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MD5SUM)

#endif


#if definedEx(CONFIG_MICROCOM)
int microcom_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MICROCOM)

#endif


#if definedEx(CONFIG_MKDIR)
int mkdir_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKDIR)

#endif


#if definedEx(CONFIG_MKFS_VFAT)
int mkfs_vfat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_VFAT)

#endif


#if definedEx(CONFIG_MKFS_EXT2)
int mkfs_ext2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_EXT2)

#endif


#if definedEx(CONFIG_MKFIFO)
int mkfifo_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFIFO)

#endif


#if definedEx(CONFIG_MKFS_EXT2)
int mkfs_ext2_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_EXT2)

#endif

//IF_MKE2FS(APPLET_ODDNAME(mkfs.ext3, mke2fs, BB_DIR_SBIN, BB_SUID_DROP, mkfs_ext3))

#if definedEx(CONFIG_MKFS_MINIX)
int mkfs_minix_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_MINIX)

#endif


#if definedEx(CONFIG_MKFS_REISER)
int mkfs_reiser_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_REISER)

#endif


#if definedEx(CONFIG_MKFS_VFAT)
int mkfs_vfat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKFS_VFAT)

#endif


#if definedEx(CONFIG_MKNOD)
int mknod_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKNOD)

#endif


#if definedEx(CONFIG_CRYPTPW)
int cryptpw_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_CRYPTPW)

#endif


#if definedEx(CONFIG_MKSWAP)
int mkswap_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKSWAP)

#endif


#if definedEx(CONFIG_MKTEMP)
int mktemp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MKTEMP)

#endif


#if definedEx(CONFIG_MORE)
int more_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MORE)

#endif

/* On full-blown systems, requires suid for user mounts.
 * But it's not unthinkable to have it available in non-suid flavor on some systems,
 * for viewing mount table.
 * Therefore we use BB_SUID_MAYBE instead of BB_SUID_REQUIRE: */

#if definedEx(CONFIG_MOUNT)
int mount_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MOUNT)

#endif


#if definedEx(CONFIG_MOUNTPOINT)
int mountpoint_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MOUNTPOINT)

#endif


#if definedEx(CONFIG_MT)
int mt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MT)

#endif


#if definedEx(CONFIG_MV)
int mv_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_MV)

#endif


#if definedEx(CONFIG_NAMEIF)
int nameif_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NAMEIF)

#endif


#if definedEx(CONFIG_NC)
int nc_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NC)

#endif


#if definedEx(CONFIG_NETSTAT)
int netstat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NETSTAT)

#endif


#if definedEx(CONFIG_NICE)
int nice_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NICE)

#endif


#if definedEx(CONFIG_NOHUP)
int nohup_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NOHUP)

#endif


#if definedEx(CONFIG_NSLOOKUP)
int nslookup_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NSLOOKUP)

#endif


#if definedEx(CONFIG_NTPD)
int ntpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_NTPD)

#endif


#if definedEx(CONFIG_OD)
int od_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_OD)

#endif


#if definedEx(CONFIG_OPENVT)
int openvt_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_OPENVT)

#endif

//IF_PARSE(APPLET(parse, BB_DIR_USR_BIN, BB_SUID_DROP))
/* Needs to be run by root or be suid root - needs to change /etc/{passwd,shadow}: */

#if definedEx(CONFIG_PASSWD)
int passwd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PASSWD)

#endif


#if definedEx(CONFIG_PGREP)
int pgrep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PGREP)

#endif


#if definedEx(CONFIG_PIDOF)
int pidof_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PIDOF)

#endif


#if definedEx(CONFIG_PIPE_PROGRESS)
int pipe_progress_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PIPE_PROGRESS)

#endif


#if definedEx(CONFIG_PIVOT_ROOT)
int pivot_root_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PIVOT_ROOT)

#endif


#if definedEx(CONFIG_PKILL)
int pgrep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PKILL)

#endif


#if definedEx(CONFIG_POPMAILDIR)
int popmaildir_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_POPMAILDIR)

#endif


#if definedEx(CONFIG_PRINTENV)
int printenv_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PRINTENV)

#endif


#if definedEx(CONFIG_PRINTF)
int printf_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PRINTF)

#endif


#if definedEx(CONFIG_PS)
int ps_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PS)

#endif


#if definedEx(CONFIG_PSCAN)
int pscan_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PSCAN)

#endif


#if definedEx(CONFIG_PWD)
int pwd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_PWD)

#endif


#if definedEx(CONFIG_RAIDAUTORUN)
int raidautorun_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RAIDAUTORUN)

#endif


#if definedEx(CONFIG_RDATE)
int rdate_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RDATE)

#endif


#if definedEx(CONFIG_RDEV)
int rdev_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RDEV)

#endif


#if definedEx(CONFIG_READAHEAD)
int readahead_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_READAHEAD)

#endif


#if definedEx(CONFIG_READLINK)
int readlink_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_READLINK)

#endif


#if definedEx(CONFIG_READPROFILE)
int readprofile_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_READPROFILE)

#endif


#if definedEx(CONFIG_REALPATH)
int realpath_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_REALPATH)

#endif


#if definedEx(CONFIG_REFORMIME)
int reformime_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_REFORMIME)

#endif


#if definedEx(CONFIG_RENICE)
int renice_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RENICE)

#endif


#if definedEx(CONFIG_RESET)
int reset_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RESET)

#endif


#if definedEx(CONFIG_RESIZE)
int resize_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RESIZE)

#endif


#if definedEx(CONFIG_RESTORECON)
int setfiles_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RESTORECON)

#endif


#if definedEx(CONFIG_RM)
int rm_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RM)

#endif


#if definedEx(CONFIG_RMDIR)
int rmdir_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RMDIR)

#endif


#if definedEx(CONFIG_ROUTE)
int route_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ROUTE)

#endif


#if definedEx(CONFIG_RTCWAKE)
int rtcwake_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RTCWAKE)

#endif


#if definedEx(CONFIG_RUN_PARTS)
int run_parts_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RUN_PARTS)

#endif


#if definedEx(CONFIG_RUNCON)
int runcon_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RUNCON)

#endif


#if definedEx(CONFIG_RUNLEVEL)
int runlevel_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RUNLEVEL)

#endif


#if definedEx(CONFIG_RUNSV)
int runsv_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RUNSV)

#endif


#if definedEx(CONFIG_RUNSVDIR)
int runsvdir_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RUNSVDIR)

#endif


#if definedEx(CONFIG_RX)
int rx_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_RX)

#endif


#if definedEx(CONFIG_SCRIPT)
int script_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SCRIPT)

#endif


#if definedEx(CONFIG_SCRIPTREPLAY)
int scriptreplay_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SCRIPTREPLAY)

#endif


#if definedEx(CONFIG_SELINUXENABLED)
int selinuxenabled_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SELINUXENABLED)

#endif


#if definedEx(CONFIG_SENDMAIL)
int sendmail_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SENDMAIL)

#endif


#if definedEx(CONFIG_SEQ)
int seq_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SEQ)

#endif


#if definedEx(CONFIG_SESTATUS)
int sestatus_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SESTATUS)

#endif


#if definedEx(CONFIG_SETARCH)
int setarch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETARCH)

#endif


#if definedEx(CONFIG_SETCONSOLE)
int setconsole_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETCONSOLE)

#endif


#if definedEx(CONFIG_SETENFORCE)
int setenforce_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETENFORCE)

#endif


#if definedEx(CONFIG_SETFILES)
int setfiles_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETFILES)

#endif


#if definedEx(CONFIG_SETFONT)
int setfont_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETFONT)

#endif


#if definedEx(CONFIG_SETKEYCODES)
int setkeycodes_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETKEYCODES)

#endif


#if definedEx(CONFIG_SETLOGCONS)
int setlogcons_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETLOGCONS)

#endif


#if definedEx(CONFIG_SETSEBOOL)
int setsebool_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETSEBOOL)

#endif


#if definedEx(CONFIG_SETSID)
int setsid_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETSID)

#endif


#if definedEx(CONFIG_SETUIDGID)
int chpst_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SETUIDGID)

#endif


#if definedEx(CONFIG_SHA1SUM)
int md5_sha1_sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHA1SUM)

#endif


#if definedEx(CONFIG_SHA3SUM)
int md5_sha1_sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHA3SUM)

#endif


#if definedEx(CONFIG_SHA256SUM)
int md5_sha1_sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHA256SUM)

#endif


#if definedEx(CONFIG_SHA512SUM)
int md5_sha1_sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHA512SUM)

#endif


#if definedEx(CONFIG_SHOWKEY)
int showkey_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SHOWKEY)

#endif


#if definedEx(CONFIG_SLATTACH)
int slattach_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SLATTACH)

#endif

/* Do not make this applet NOFORK. It breaks ^C-ing of pauses in shells: */

#if definedEx(CONFIG_SLEEP)
int sleep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SLEEP)

#endif


#if definedEx(CONFIG_SOFTLIMIT)
int chpst_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SOFTLIMIT)

#endif


#if definedEx(CONFIG_SORT)
int sort_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SORT)

#endif


#if definedEx(CONFIG_SPLIT)
int split_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SPLIT)

#endif


#if definedEx(CONFIG_START_STOP_DAEMON)
int start_stop_daemon_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_START_STOP_DAEMON)

#endif


#if definedEx(CONFIG_STAT)
int stat_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_STAT)

#endif


#if definedEx(CONFIG_STRINGS)
int strings_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_STRINGS)

#endif


#if definedEx(CONFIG_STTY)
int stty_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_STTY)

#endif

/* Needs to be run by root or be suid root - needs to change uid and gid: */

#if definedEx(CONFIG_SU)
int su_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SU)

#endif


#if definedEx(CONFIG_SULOGIN)
int sulogin_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SULOGIN)

#endif


#if definedEx(CONFIG_SUM)
int sum_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SUM)

#endif


#if definedEx(CONFIG_SV)
int sv_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SV)

#endif


#if definedEx(CONFIG_SVLOGD)
int svlogd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SVLOGD)

#endif


#if definedEx(CONFIG_SWAPONOFF)
int swap_on_off_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SWAPONOFF)

#endif


#if definedEx(CONFIG_SWAPONOFF)
int swap_on_off_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SWAPONOFF)

#endif


#if definedEx(CONFIG_SWITCH_ROOT)
int switch_root_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SWITCH_ROOT)

#endif


#if definedEx(CONFIG_SYNC)
int sync_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SYNC)

#endif


#if definedEx(CONFIG_BB_SYSCTL)
int sysctl_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_BB_SYSCTL)

#endif


#if definedEx(CONFIG_SYSLOGD)
int syslogd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_SYSLOGD)

#endif


#if definedEx(CONFIG_TAC)
int tac_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TAC)

#endif


#if definedEx(CONFIG_TAIL)
int tail_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TAIL)

#endif


#if definedEx(CONFIG_TASKSET)
int taskset_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TASKSET)

#endif

/* IF_TC(APPLET(tc, BB_DIR_SBIN, BB_SUID_DROP)) */

#if definedEx(CONFIG_TCPSVD)
int tcpudpsvd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TCPSVD)

#endif


#if definedEx(CONFIG_TEE)
int tee_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TEE)

#endif


#if definedEx(CONFIG_TELNET)
int telnet_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TELNET)

#endif


#if definedEx(CONFIG_TELNETD)
int telnetd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TELNETD)

#endif


#if definedEx(CONFIG_TEST)
int test_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TEST)

#endif

#if (definedEx(CONFIG_FEATURE_TFTP_GET) || definedEx(CONFIG_FEATURE_TFTP_PUT))

#if definedEx(CONFIG_TFTP)
int tftp_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TFTP)

#endif


#if definedEx(CONFIG_TFTPD)
int tftpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TFTPD)

#endif

#endif

#if definedEx(CONFIG_TIME)
int time_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TIME)

#endif


#if definedEx(CONFIG_TIMEOUT)
int timeout_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TIMEOUT)

#endif


#if definedEx(CONFIG_TOP)
int top_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TOP)

#endif


#if definedEx(CONFIG_TR)
int tr_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TR)

#endif

/* Needs socket(AF_INET, SOCK_RAW, IPPROTO_ICMP), therefore BB_SUID_MAYBE: */

#if definedEx(CONFIG_TRACEROUTE)
int traceroute_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TRACEROUTE)

#endif


#if definedEx(CONFIG_TRACEROUTE6)
int traceroute6_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TRACEROUTE6)

#endif


#if definedEx(CONFIG_TRUE)
int true_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TRUE)

#endif


#if definedEx(CONFIG_TTY)
int tty_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TTY)

#endif


#if definedEx(CONFIG_TTYSIZE)
int ttysize_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TTYSIZE)

#endif


#if definedEx(CONFIG_TUNCTL)
int tunctl_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TUNCTL)

#endif


#if definedEx(CONFIG_TUNE2FS)
int tune2fs_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_TUNE2FS)

#endif


#if definedEx(CONFIG_UDHCPC)
int udhcpc_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UDHCPC)

#endif


#if definedEx(CONFIG_UDHCPD)
int udhcpd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UDHCPD)

#endif


#if definedEx(CONFIG_UDPSVD)
int tcpudpsvd_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UDPSVD)

#endif


#if definedEx(CONFIG_UMOUNT)
int umount_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UMOUNT)

#endif


#if definedEx(CONFIG_UNAME)
int uname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNAME)

#endif


#if definedEx(CONFIG_UNEXPAND)
int expand_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNEXPAND)

#endif


#if definedEx(CONFIG_UNIQ)
int uniq_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNIQ)

#endif


#if definedEx(CONFIG_UNIX2DOS)
int dos2unix_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UNIX2DOS)

#endif


#if definedEx(CONFIG_UPTIME)
int uptime_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UPTIME)

#endif


#if definedEx(CONFIG_USLEEP)
int usleep_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_USLEEP)

#endif


#if definedEx(CONFIG_UUDECODE)
int uudecode_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UUDECODE)

#endif


#if definedEx(CONFIG_UUENCODE)
int uuencode_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_UUENCODE)

#endif


#if definedEx(CONFIG_VCONFIG)
int vconfig_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_VCONFIG)

#endif

/* Needs to be run by root or be suid root - needs to change uid and gid: */

#if definedEx(CONFIG_VLOCK)
int vlock_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_VLOCK)

#endif


#if definedEx(CONFIG_VOLNAME)
int volname_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_VOLNAME)

#endif


#if definedEx(CONFIG_WATCH)
int watch_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WATCH)

#endif


#if definedEx(CONFIG_WATCHDOG)
int watchdog_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WATCHDOG)

#endif


#if definedEx(CONFIG_WC)
int wc_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WC)

#endif


#if definedEx(CONFIG_WGET)
int wget_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WGET)

#endif


#if definedEx(CONFIG_WHICH)
int which_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WHICH)

#endif


#if definedEx(CONFIG_WHOAMI)
int whoami_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_WHOAMI)

#endif


#if definedEx(CONFIG_YES)
int yes_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_YES)

#endif


#if definedEx(CONFIG_ZCIP)
int zcip_main(int argc, char **argv) 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
#endif
#if !definedEx(CONFIG_ZCIP)

#endif









#line 42 "gitbusybox/libbb/appletlib.c" 2


/* Include generated applet names, pointers to <applet>_main, etc */
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/applet_tables.h" 1
/* This is a generated file, don't edit */



const char applet_names[] __attribute__((aligned(1))) = ""
"[" "\0"
"[[" "\0"
"acpid" "\0"
"add-shell" "\0"
"addgroup" "\0"
"adduser" "\0"
"adjtimex" "\0"
"arp" "\0"
"arping" "\0"
"ash" "\0"
"awk" "\0"
"base64" "\0"
"basename" "\0"
"beep" "\0"
"blkid" "\0"
"blockdev" "\0"
"bootchartd" "\0"
"brctl" "\0"
"bunzip2" "\0"
"bzcat" "\0"
"bzip2" "\0"
"cal" "\0"
"cat" "\0"
"catv" "\0"
"chat" "\0"
"chattr" "\0"
"chgrp" "\0"
"chmod" "\0"
"chown" "\0"
"chpasswd" "\0"
"chpst" "\0"
"chroot" "\0"
"chrt" "\0"
"chvt" "\0"
"cksum" "\0"
"clear" "\0"
"cmp" "\0"
"comm" "\0"
"conspy" "\0"
"cp" "\0"
"cpio" "\0"
"crond" "\0"
"crontab" "\0"
"cryptpw" "\0"
"cttyhack" "\0"
"cut" "\0"
"date" "\0"
"dc" "\0"
"dd" "\0"
"deallocvt" "\0"
"delgroup" "\0"
"deluser" "\0"
"depmod" "\0"
"devmem" "\0"
"df" "\0"
"dhcprelay" "\0"
"diff" "\0"
"dirname" "\0"
"dmesg" "\0"
"dnsd" "\0"
"dnsdomainname" "\0"
"dos2unix" "\0"
"du" "\0"
"dumpkmap" "\0"
"dumpleases" "\0"
"echo" "\0"
"ed" "\0"
"egrep" "\0"
"eject" "\0"
"env" "\0"
"envdir" "\0"
"envuidgid" "\0"
"ether-wake" "\0"
"expand" "\0"
"expr" "\0"
"fakeidentd" "\0"
"false" "\0"
"fbset" "\0"
"fbsplash" "\0"
"fdflush" "\0"
"fdformat" "\0"
"fdisk" "\0"
"fgconsole" "\0"
"fgrep" "\0"
"find" "\0"
"findfs" "\0"
"flock" "\0"
"fold" "\0"
"free" "\0"
"freeramdisk" "\0"
"fsck" "\0"
"fsck.minix" "\0"
"fstrim" "\0"
"fsync" "\0"
"ftpd" "\0"
"ftpget" "\0"
"ftpput" "\0"
"fuser" "\0"
"getopt" "\0"
"getty" "\0"
"grep" "\0"
"groups" "\0"
"gunzip" "\0"
"gzip" "\0"
"halt" "\0"
"hd" "\0"
"hdparm" "\0"
"head" "\0"
"hexdump" "\0"
"hostid" "\0"
"hostname" "\0"
"httpd" "\0"
"hush" "\0"
"hwclock" "\0"
"id" "\0"
"ifconfig" "\0"
"ifdown" "\0"
"ifenslave" "\0"
"ifplugd" "\0"
"ifup" "\0"
"inetd" "\0"
"init" "\0"
"insmod" "\0"
"install" "\0"
"ionice" "\0"
"iostat" "\0"
"ip" "\0"
"ipaddr" "\0"
"ipcalc" "\0"
"ipcrm" "\0"
"ipcs" "\0"
"iplink" "\0"
"iproute" "\0"
"iprule" "\0"
"iptunnel" "\0"
"kbd_mode" "\0"
"kill" "\0"
"killall" "\0"
"killall5" "\0"
"klogd" "\0"
"last" "\0"
"less" "\0"
"linux32" "\0"
"linux64" "\0"
"linuxrc" "\0"
"ln" "\0"
"loadfont" "\0"
"loadkmap" "\0"
"logger" "\0"
"login" "\0"
"logname" "\0"
"logread" "\0"
"losetup" "\0"
"lpd" "\0"
"lpq" "\0"
"lpr" "\0"
"ls" "\0"
"lsattr" "\0"
"lsmod" "\0"
"lsof" "\0"
"lspci" "\0"
"lsusb" "\0"
"lzcat" "\0"
"lzma" "\0"
"lzop" "\0"
"lzopcat" "\0"
"makedevs" "\0"
"makemime" "\0"
"man" "\0"
"md5sum" "\0"
"mdev" "\0"
"mesg" "\0"
"microcom" "\0"
"mkdir" "\0"
"mkdosfs" "\0"
"mke2fs" "\0"
"mkfifo" "\0"
"mkfs.ext2" "\0"
"mkfs.minix" "\0"
"mkfs.vfat" "\0"
"mknod" "\0"
"mkpasswd" "\0"
"mkswap" "\0"
"mktemp" "\0"
"modinfo" "\0"
"modprobe" "\0"
"more" "\0"
"mount" "\0"
"mountpoint" "\0"
"mpstat" "\0"
"mt" "\0"
"mv" "\0"
"nameif" "\0"
"nanddump" "\0"
"nandwrite" "\0"
"nbd-client" "\0"
"nc" "\0"
"netstat" "\0"
"nice" "\0"
"nmeter" "\0"
"nohup" "\0"
"nslookup" "\0"
"ntpd" "\0"
"od" "\0"
"openvt" "\0"
"passwd" "\0"
"patch" "\0"
"pgrep" "\0"
"pidof" "\0"
"ping" "\0"
"ping6" "\0"
"pipe_progress" "\0"
"pivot_root" "\0"
"pkill" "\0"
"pmap" "\0"
"popmaildir" "\0"
"poweroff" "\0"
"powertop" "\0"
"printenv" "\0"
"printf" "\0"
"ps" "\0"
"pscan" "\0"
"pstree" "\0"
"pwd" "\0"
"pwdx" "\0"
"raidautorun" "\0"
"rdate" "\0"
"rdev" "\0"
"readahead" "\0"
"readlink" "\0"
"readprofile" "\0"
"realpath" "\0"
"reboot" "\0"
"reformime" "\0"
"remove-shell" "\0"
"renice" "\0"
"reset" "\0"
"resize" "\0"
"rev" "\0"
"rm" "\0"
"rmdir" "\0"
"rmmod" "\0"
"route" "\0"
"rpm" "\0"
"rpm2cpio" "\0"
"rtcwake" "\0"
"run-parts" "\0"
"runlevel" "\0"
"runsv" "\0"
"runsvdir" "\0"
"rx" "\0"
"script" "\0"
"scriptreplay" "\0"
"sed" "\0"
"sendmail" "\0"
"seq" "\0"
"setarch" "\0"
"setconsole" "\0"
"setfont" "\0"
"setkeycodes" "\0"
"setlogcons" "\0"
"setserial" "\0"
"setsid" "\0"
"setuidgid" "\0"
"sh" "\0"
"sha1sum" "\0"
"sha256sum" "\0"
"sha3sum" "\0"
"sha512sum" "\0"
"showkey" "\0"
"shuf" "\0"
"slattach" "\0"
"sleep" "\0"
"smemcap" "\0"
"softlimit" "\0"
"sort" "\0"
"split" "\0"
"start-stop-daemon" "\0"
"stat" "\0"
"strings" "\0"
"stty" "\0"
"su" "\0"
"sulogin" "\0"
"sum" "\0"
"sv" "\0"
"svlogd" "\0"
"swapoff" "\0"
"swapon" "\0"
"switch_root" "\0"
"sync" "\0"
"sysctl" "\0"
"syslogd" "\0"
"tac" "\0"
"tail" "\0"
"tar" "\0"
"tcpsvd" "\0"
"tee" "\0"
"telnet" "\0"
"telnetd" "\0"
"test" "\0"
"tftp" "\0"
"tftpd" "\0"
"time" "\0"
"timeout" "\0"
"top" "\0"
"touch" "\0"
"tr" "\0"
"traceroute" "\0"
"traceroute6" "\0"
"true" "\0"
"tty" "\0"
"ttysize" "\0"
"tunctl" "\0"
"ubiattach" "\0"
"ubidetach" "\0"
"ubimkvol" "\0"
"ubirmvol" "\0"
"ubirsvol" "\0"
"ubiupdatevol" "\0"
"udhcpc" "\0"
"udhcpd" "\0"
"udpsvd" "\0"
"umount" "\0"
"uname" "\0"
"unexpand" "\0"
"uniq" "\0"
"unix2dos" "\0"
"unlzma" "\0"
"unlzop" "\0"
"unxz" "\0"
"unzip" "\0"
"uptime" "\0"
"users" "\0"
"usleep" "\0"
"uudecode" "\0"
"uuencode" "\0"
"vconfig" "\0"
"vi" "\0"
"vlock" "\0"
"volname" "\0"
"wall" "\0"
"watch" "\0"
"watchdog" "\0"
"wc" "\0"
"wget" "\0"
"which" "\0"
"who" "\0"
"whoami" "\0"
"whois" "\0"
"xargs" "\0"
"xz" "\0"
"xzcat" "\0"
"yes" "\0"
"zcat" "\0"
"zcip" "\0"
;


int (*const applet_main[])(int argc, char **argv) = {
test_main,
test_main,
acpid_main,
add_remove_shell_main,
addgroup_main,
adduser_main,
adjtimex_main,
arp_main,
arping_main,
ash_main,
awk_main,
base64_main,
basename_main,
beep_main,
blkid_main,
blockdev_main,
bootchartd_main,
brctl_main,
bunzip2_main,
bunzip2_main,
bzip2_main,
cal_main,
cat_main,
catv_main,
chat_main,
chattr_main,
chgrp_main,
chmod_main,
chown_main,
chpasswd_main,
chpst_main,
chroot_main,
chrt_main,
chvt_main,
cksum_main,
clear_main,
cmp_main,
comm_main,
conspy_main,
cp_main,
cpio_main,
crond_main,
crontab_main,
cryptpw_main,
cttyhack_main,
cut_main,
date_main,
dc_main,
dd_main,
deallocvt_main,
deluser_main,
deluser_main,
modprobe_main,
devmem_main,
df_main,
dhcprelay_main,
diff_main,
dirname_main,
dmesg_main,
dnsd_main,
hostname_main,
dos2unix_main,
du_main,
dumpkmap_main,
dumpleases_main,
echo_main,
ed_main,
grep_main,
eject_main,
env_main,
chpst_main,
chpst_main,
ether_wake_main,
expand_main,
expr_main,
fakeidentd_main,
false_main,
fbset_main,
fbsplash_main,
freeramdisk_main,
fdformat_main,
fdisk_main,
fgconsole_main,
grep_main,
find_main,
findfs_main,
flock_main,
fold_main,
free_main,
freeramdisk_main,
fsck_main,
fsck_minix_main,
fstrim_main,
fsync_main,
ftpd_main,
ftpgetput_main,
ftpgetput_main,
fuser_main,
getopt_main,
getty_main,
grep_main,
id_main,
gunzip_main,
gzip_main,
halt_main,
hexdump_main,
hdparm_main,
head_main,
hexdump_main,
hostid_main,
hostname_main,
httpd_main,
hush_main,
hwclock_main,
id_main,
ifconfig_main,
ifupdown_main,
ifenslave_main,
ifplugd_main,
ifupdown_main,
inetd_main,
init_main,
modprobe_main,
install_main,
ionice_main,
iostat_main,
ip_main,
ipaddr_main,
ipcalc_main,
ipcrm_main,
ipcs_main,
iplink_main,
iproute_main,
iprule_main,
iptunnel_main,
kbd_mode_main,
kill_main,
kill_main,
kill_main,
klogd_main,
last_main,
less_main,
setarch_main,
setarch_main,
init_main,
ln_main,
loadfont_main,
loadkmap_main,
logger_main,
login_main,
logname_main,
logread_main,
losetup_main,
lpd_main,
lpqr_main,
lpqr_main,
ls_main,
lsattr_main,
modprobe_main,
lsof_main,
lspci_main,
lsusb_main,
unlzma_main,
unlzma_main,
lzop_main,
lzop_main,
makedevs_main,
makemime_main,
man_main,
md5_sha1_sum_main,
mdev_main,
mesg_main,
microcom_main,
mkdir_main,
mkfs_vfat_main,
mkfs_ext2_main,
mkfifo_main,
mkfs_ext2_main,
mkfs_minix_main,
mkfs_vfat_main,
mknod_main,
cryptpw_main,
mkswap_main,
mktemp_main,
modinfo_main,
modprobe_main,
more_main,
mount_main,
mountpoint_main,
mpstat_main,
mt_main,
mv_main,
nameif_main,
nandwrite_main,
nandwrite_main,
nbdclient_main,
nc_main,
netstat_main,
nice_main,
nmeter_main,
nohup_main,
nslookup_main,
ntpd_main,
od_main,
openvt_main,
passwd_main,
patch_main,
pgrep_main,
pidof_main,
ping_main,
ping6_main,
pipe_progress_main,
pivot_root_main,
pgrep_main,
pmap_main,
popmaildir_main,
halt_main,
powertop_main,
printenv_main,
printf_main,
ps_main,
pscan_main,
pstree_main,
pwd_main,
pwdx_main,
raidautorun_main,
rdate_main,
rdev_main,
readahead_main,
readlink_main,
readprofile_main,
realpath_main,
halt_main,
reformime_main,
add_remove_shell_main,
renice_main,
reset_main,
resize_main,
rev_main,
rm_main,
rmdir_main,
modprobe_main,
route_main,
rpm_main,
rpm2cpio_main,
rtcwake_main,
run_parts_main,
runlevel_main,
runsv_main,
runsvdir_main,
rx_main,
script_main,
scriptreplay_main,
sed_main,
sendmail_main,
seq_main,
setarch_main,
setconsole_main,
setfont_main,
setkeycodes_main,
setlogcons_main,
setserial_main,
setsid_main,
chpst_main,
ash_main,
md5_sha1_sum_main,
md5_sha1_sum_main,
md5_sha1_sum_main,
md5_sha1_sum_main,
showkey_main,
shuf_main,
slattach_main,
sleep_main,
smemcap_main,
chpst_main,
sort_main,
split_main,
start_stop_daemon_main,
stat_main,
strings_main,
stty_main,
su_main,
sulogin_main,
sum_main,
sv_main,
svlogd_main,
swap_on_off_main,
swap_on_off_main,
switch_root_main,
sync_main,
sysctl_main,
syslogd_main,
tac_main,
tail_main,
tar_main,
tcpudpsvd_main,
tee_main,
telnet_main,
telnetd_main,
test_main,
tftp_main,
tftpd_main,
time_main,
timeout_main,
top_main,
touch_main,
tr_main,
traceroute_main,
traceroute6_main,
true_main,
tty_main,
ttysize_main,
tunctl_main,
ubi_tools_main,
ubi_tools_main,
ubi_tools_main,
ubi_tools_main,
ubi_tools_main,
ubi_tools_main,
udhcpc_main,
udhcpd_main,
tcpudpsvd_main,
umount_main,
uname_main,
expand_main,
uniq_main,
dos2unix_main,
unlzma_main,
lzop_main,
unxz_main,
unzip_main,
uptime_main,
who_main,
usleep_main,
uudecode_main,
uuencode_main,
vconfig_main,
vi_main,
vlock_main,
volname_main,
wall_main,
watch_main,
watchdog_main,
wc_main,
wget_main,
which_main,
who_main,
whoami_main,
whois_main,
xargs_main,
unxz_main,
unxz_main,
yes_main,
gunzip_main,
zcip_main,
};

const uint16_t applet_nameofs[] __attribute__((aligned(2))) = {
0x0000,
0x0002,
0x0005,
0x000b,
0x0015,
0x001e,
0x0026,
0x002f,
0x0033,
0x003a,
0x003e,
0x0042,
0x0049,
0x0052,
0x0057,
0x005d,
0x0066,
0x0071,
0x0077,
0x007f,
0x0085,
0x008b,
0x008f,
0x0093,
0x0098,
0x009d,
0x00a4,
0x00aa,
0x00b0,
0x00b6,
0x00bf,
0x00c5,
0x00cc,
0x00d1,
0x00d6,
0x00dc,
0x00e2,
0x00e6,
0x00eb,
0x00f2,
0x00f5,
0x00fa,
0x8100,
0x0108,
0x0110,
0x0119,
0x011d,
0x0122,
0x0125,
0x0128,
0x0132,
0x013b,
0x0143,
0x014a,
0x0151,
0x0154,
0x015e,
0x0163,
0x016b,
0x0171,
0x0176,
0x0184,
0x018d,
0x0190,
0x0199,
0x01a4,
0x01a9,
0x01ac,
0x01b2,
0x01b8,
0x01bc,
0x01c3,
0x01cd,
0x01d8,
0x01df,
0x01e4,
0x01ef,
0x01f5,
0x01fb,
0x0204,
0x020c,
0x0215,
0x021b,
0x0225,
0x022b,
0x4230,
0x0237,
0x023d,
0x0242,
0x0247,
0x0253,
0x0258,
0x0263,
0x026a,
0x0270,
0x0275,
0x027c,
0x0283,
0x0289,
0x0290,
0x0296,
0x029b,
0x02a2,
0x02a9,
0x02ae,
0x02b3,
0x02b6,
0x02bd,
0x02c2,
0x02ca,
0x02d1,
0x02da,
0x02e0,
0x02e5,
0x02ed,
0x02f0,
0x02f9,
0x0300,
0x030a,
0x0312,
0x0317,
0x031d,
0x0322,
0x0329,
0x0331,
0x0338,
0x033f,
0x0342,
0x0349,
0x0350,
0x0356,
0x035b,
0x0362,
0x036a,
0x0371,
0x037a,
0x0383,
0x0388,
0x0390,
0x0399,
0x039f,
0x03a4,
0x03a9,
0x03b1,
0x03b9,
0x03c1,
0x03c4,
0x03cd,
0x03d6,
0x83dd,
0x03e3,
0x03eb,
0x03f3,
0x03fb,
0x03ff,
0x0403,
0x0407,
0x040a,
0x0411,
0x0417,
0x041c,
0x0422,
0x0428,
0x042e,
0x0433,
0x0438,
0x0440,
0x0449,
0x0452,
0x0456,
0x045d,
0x0462,
0x0467,
0x0470,
0x0476,
0x047e,
0x0485,
0x048c,
0x0496,
0x04a1,
0x04ab,
0x04b1,
0x04ba,
0x04c1,
0x04c8,
0x04d0,
0x04d9,
0x44de,
0x04e4,
0x04ef,
0x04f6,
0x04f9,
0x04fc,
0x0503,
0x050c,
0x0516,
0x0521,
0x0524,
0x052c,
0x0531,
0x0538,
0x053e,
0x0547,
0x054c,
0x054f,
0x8556,
0x055d,
0x0563,
0x0569,
0x456f,
0x4574,
0x057a,
0x0588,
0x0593,
0x0599,
0x059e,
0x05a9,
0x05b2,
0x05bb,
0x05c4,
0x05cb,
0x05ce,
0x05d4,
0x05db,
0x05df,
0x05e4,
0x05f0,
0x05f6,
0x05fb,
0x0605,
0x060e,
0x061a,
0x0623,
0x062a,
0x0634,
0x0641,
0x0648,
0x064e,
0x0655,
0x0659,
0x065c,
0x0662,
0x0668,
0x066e,
0x0672,
0x067b,
0x0683,
0x068d,
0x0696,
0x069c,
0x06a5,
0x06a8,
0x06af,
0x06bc,
0x06c0,
0x06c9,
0x06cd,
0x06d5,
0x06e0,
0x06e8,
0x06f4,
0x06ff,
0x0709,
0x0710,
0x071a,
0x071d,
0x0725,
0x072f,
0x0737,
0x0741,
0x0749,
0x074e,
0x0757,
0x075d,
0x0765,
0x076f,
0x0774,
0x077a,
0x078c,
0x0791,
0x0799,
0x879e,
0x07a1,
0x07a9,
0x07ad,
0x07b0,
0x07b7,
0x07bf,
0x07c6,
0x07d2,
0x07d7,
0x07de,
0x07e6,
0x07ea,
0x07ef,
0x07f3,
0x07fa,
0x07fe,
0x0805,
0x080d,
0x0812,
0x0817,
0x081d,
0x0822,
0x082a,
0x082e,
0x0834,
0x4837,
0x4842,
0x084e,
0x0853,
0x0857,
0x085f,
0x0866,
0x0870,
0x087a,
0x0883,
0x088c,
0x0895,
0x08a2,
0x08a9,
0x08b0,
0x08b7,
0x08be,
0x08c4,
0x08cd,
0x08d2,
0x08db,
0x08e2,
0x08e9,
0x08ee,
0x08f4,
0x08fb,
0x0901,
0x0908,
0x0911,
0x091a,
0x0922,
0x8925,
0x092b,
0x8933,
0x0938,
0x093e,
0x0947,
0x094a,
0x094f,
0x0955,
0x0959,
0x0960,
0x0966,
0x096c,
0x096f,
0x0975,
0x0979,
0x097e,
};

const uint8_t applet_install_loc[] __attribute__((aligned(1))) = {
0x33,
0x42,
0x44,
0x22,
0x14,
0x13,
0x33,
0x22,
0x42,
0x33,
0x33,
0x11,
0x14,
0x11,
0x41,
0x43,
0x33,
0x33,
0x33,
0x11,
0x41,
0x33,
0x31,
0x31,
0x31,
0x44,
0x22,
0x41,
0x33,
0x41,
0x31,
0x13,
0x13,
0x11,
0x33,
0x33,
0x34,
0x43,
0x41,
0x12,
0x24,
0x13,
0x23,
0x33,
0x23,
0x22,
0x12,
0x34,
0x33,
0x21,
0x31,
0x11,
0x32,
0x32,
0x33,
0x41,
0x21,
0x23,
0x22,
0x24,
0x24,
0x32,
0x11,
0x22,
0x31,
0x23,
0x22,
0x12,
0x31,
0x24,
0x33,
0x11,
0x10,
0x24,
0x13,
0x23,
0x42,
0x33,
0x11,
0x32,
0x33,
0x33,
0x31,
0x12,
0x33,
0x32,
0x13,
0x22,
0x23,
0x22,
0x31,
0x12,
0x22,
0x11,
0x11,
0x11,
0x42,
0x44,
0x13,
0x31,
0x33,
0x34,
0x33,
0x33,
0x11,
0x11,
0x32,
0x43,
0x42,
0x31,
0x31,
0x13,
0x23,
0x44,
0x34,
0x34,
0x12,
0x34,
0x33,
0x11,
0x21,
0x12,
0x43,
0x21,
0x33,
0x33,
0x11,
0x34,
0x21,
0x34,
0x14,
0x33,
0x31,
0x33,
0x33,
0x23,
0x31,
0x33,
0x23,
0x31,
0x11,
0x32,
0x43,
0x22,
0x12,
0x22,
0x33,
0x31,
0x33,
0x34,
0x43,
0x33,
0x13,
0x33,
0x13,
0x33,
0x42,
0x44,
0x44,
0x24,
0x34,
0x11,
0x33,
0x33,
0x33,
0x33,
0x13,
0x33,
0x12,
0x33,
0x13,
0x32,
0x33,
0x33,
0x33,
0x33,
0x13,
0x02,
};
#line 46 "gitbusybox/libbb/appletlib.c" 2
/* ...and if applet_tables generator says we have only one applet... */






#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/usage_compressed.h" 1

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 55 "gitbusybox/libbb/appletlib.c" 2


#if (definedEx(CONFIG_SHOW_USAGE) && !definedEx(CONFIG_FEATURE_COMPRESS_USAGE))
static const char usage_messages[] __attribute__((aligned(1))) = "" "\105\130\120\122\105\123\123\111\117\116\040\135\012\012\103\150" "\145\143\153\040\146\151\154\145\040\164\171\160\145\163\054\040" "\143\157\155\160\141\162\145\040\166\141\154\165\145\163\040\145" "\164\143\056\040\122\145\164\165\162\156\040\141\040\060\057\061" "\040\145\170\151\164\040\143\157\144\145\012\144\145\160\145\156" "\144\151\156\147\040\157\156\040\154\157\147\151\143\141\154\040" "\166\141\154\165\145\040\157\146\040\105\130\120\122\105\123\123" "\111\117\116\000\105\130\120\122\105\123\123\111\117\116\040\135" "\012\012\103\150\145\143\153\040\146\151\154\145\040\164\171\160" "\145\163\054\040\143\157\155\160\141\162\145\040\166\141\154\165" "\145\163\040\145\164\143\056\040\122\145\164\165\162\156\040\141" "\040\060\057\061\040\145\170\151\164\040\143\157\144\145\012\144" "\145\160\145\156\144\151\156\147\040\157\156\040\154\157\147\151" "\143\141\154\040\166\141\154\165\145\040\157\146\040\105\130\120" "\122\105\123\123\111\117\116\000\133\055\144\146\135\040\133\055" "\143\040\103\117\116\106\104\111\122\135\040\133\055\154\040\114" "\117\107\106\111\114\105\135\040\133\055\141\040\101\103\124\111" "\117\116\106\111\114\105\135\040\133\055\115\040\115\101\120\106" "\111\114\105\135\040\133\055\145\040\120\122\117\103\137\105\126" "\105\116\124\137\106\111\114\105\135\040\133\055\160\040\120\111" "\104\106\111\114\105\135\012\012\114\151\163\164\145\156\040\164" "\157\040\101\103\120\111\040\145\166\145\156\164\163\040\141\156" "\144\040\163\160\141\167\156\040\163\160\145\143\151\146\151\143" "\040\150\145\154\160\145\162\163\040\157\156\040\145\166\145\156" "\164\040\141\162\162\151\166\141\154\012\012\011\055\144\011\114" "\157\147\040\164\157\040\163\164\144\145\162\162\054\040\156\157" "\164\040\154\157\147\040\146\151\154\145\040\050\151\155\160\154" "\151\145\163\040\055\146\051\012\011\055\146\011\122\165\156\040" "\151\156\040\146\157\162\145\147\162\157\165\156\144\012\011\055" "\143\040\104\111\122\011\103\157\156\146\151\147\040\144\151\162" "\145\143\164\157\162\171\040\133\057\145\164\143\057\141\143\160" "\151\135\012\011\055\145\040\106\111\114\105\011\057\160\162\157" "\143\040\145\166\145\156\164\040\146\151\154\145\040\133\057\160" "\162\157\143\057\141\143\160\151\057\145\166\145\156\164\135\012" "\011\055\154\040\106\111\114\105\011\114\157\147\040\146\151\154" "\145\040\133\057\166\141\162\057\154\157\147\057\141\143\160\151" "\144\056\154\157\147\135\012\011\055\160\040\106\111\114\105\011" "\120\151\144\040\146\151\154\145\040\133\057\166\141\162\057\162" "\165\156\057\141\143\160\151\144\056\160\151\144\135\012\011\055" "\141\040\106\111\114\105\011\101\143\164\151\157\156\040\146\151" "\154\145\040\133\057\145\164\143\057\141\143\160\151\144\056\143" "\157\156\146\135\012\011\055\115\040\106\111\114\105\040\115\141" "\160\040\146\151\154\145\040\133\057\145\164\143\057\141\143\160" "\151\056\155\141\160\135\012\012\101\143\143\145\160\164\040\141" "\156\144\040\151\147\156\157\162\145\040\143\157\155\160\141\164" "\151\142\151\154\151\164\171\040\157\160\164\151\157\156\163\040" "\055\147\040\055\155\040\055\163\040\055\123\040\055\166\000\123" "\110\105\114\114\056\056\056\012\012\101\144\144\040\123\110\105" "\114\114\163\040\164\157\040\057\145\164\143\057\163\150\145\154" "\154\163\000\133\055\147\040\107\111\104\135\040\133\125\123\105" "\122\135\040\107\122\117\125\120\012\012\101\144\144\040\141\040" "\147\162\157\165\160\040\157\162\040\141\144\144\040\141\040\165" "\163\145\162\040\164\157\040\141\040\147\162\157\165\160\012\012" "\011\055\147\040\107\111\104\011\107\162\157\165\160\040\151\144" "\012\011\055\123\011\103\162\145\141\164\145\040\141\040\163\171" "\163\164\145\155\040\147\162\157\165\160\000\133\117\120\124\111" "\117\116\123\135\040\125\123\105\122\040\133\107\122\117\125\120" "\135\012\012\103\162\145\141\164\145\040\156\145\167\040\165\163" "\145\162\054\040\157\162\040\141\144\144\040\125\123\105\122\040" "\164\157\040\107\122\117\125\120\012\012\011\055\150\040\104\111" "\122\011\011\110\157\155\145\040\144\151\162\145\143\164\157\162" "\171\012\011\055\147\040\107\105\103\117\123\011\107\105\103\117" "\123\040\146\151\145\154\144\012\011\055\163\040\123\110\105\114" "\114\011\114\157\147\151\156\040\163\150\145\154\154\012\011\055" "\107\040\107\122\120\011\011\101\144\144\040\165\163\145\162\040" "\164\157\040\145\170\151\163\164\151\156\147\040\147\162\157\165" "\160\012\011\055\123\011\011\103\162\145\141\164\145\040\141\040" "\163\171\163\164\145\155\040\165\163\145\162\012\011\055\104\011" "\011\104\157\156\047\164\040\141\163\163\151\147\156\040\141\040" "\160\141\163\163\167\157\162\144\012\011\055\110\011\011\104\157" "\156\047\164\040\143\162\145\141\164\145\040\150\157\155\145\040" "\144\151\162\145\143\164\157\162\171\012\011\055\165\040\125\111" "\104\011\011\125\163\145\162\040\151\144\000\133\055\161\135\040" "\133\055\157\040\117\106\106\135\040\133\055\146\040\106\122\105" "\121\135\040\133\055\160\040\124\103\117\116\123\124\135\040\133" "\055\164\040\124\111\103\113\135\012\012\122\145\141\144\040\141" "\156\144\040\157\160\164\151\157\156\141\154\154\171\040\163\145" "\164\040\163\171\163\164\145\155\040\164\151\155\145\142\141\163" "\145\040\160\141\162\141\155\145\164\145\162\163\056\040\123\145" "\145\040\141\144\152\164\151\155\145\170\050\062\051\012\012\011" "\055\161\011\121\165\151\145\164\012\011\055\157\040\117\106\106" "\011\124\151\155\145\040\157\146\146\163\145\164\054\040\155\151" "\143\162\157\163\145\143\157\156\144\163\012\011\055\146\040\106" "\122\105\121\011\106\162\145\161\165\145\156\143\171\040\141\144" "\152\165\163\164\054\040\151\156\164\145\147\145\162\040\153\145" "\162\156\145\154\040\165\156\151\164\163\040\050\066\065\065\063" "\066\040\151\163\040\061\160\160\155\051\012\011\011\050\160\157" "\163\151\164\151\166\145\040\166\141\154\165\145\163\040\155\141" "\153\145\040\143\154\157\143\153\040\162\165\156\040\146\141\163" "\164\145\162\051\012\011\055\164\040\124\111\103\113\011\115\151" "\143\162\157\163\145\143\157\156\144\163\040\160\145\162\040\164" "\151\143\153\054\040\165\163\165\141\154\154\171\040\061\060\060" "\060\060\012\011\055\160\040\124\103\117\116\123\124\000\012\133" "\055\166\156\135\011\133\055\110\040\110\127\124\131\120\105\135" "\040\133\055\151\040\111\106\135\040\055\141\040\133\110\117\123" "\124\116\101\115\105\135\012\133\055\166\135\011\011\040\040\040" "\040\133\055\151\040\111\106\135\040\055\144\040\110\117\123\124" "\116\101\115\105\040\133\160\165\142\135\012\133\055\166\135\011" "\133\055\110\040\110\127\124\131\120\105\135\040\133\055\151\040" "\111\106\135\040\055\163\040\110\117\123\124\116\101\115\105\040" "\110\127\101\104\104\122\040\133\164\145\155\160\135\012\133\055" "\166\135\011\133\055\110\040\110\127\124\131\120\105\135\040\133" "\055\151\040\111\106\135\040\055\163\040\110\117\123\124\116\101" "\115\105\040\110\127\101\104\104\122\040\133\156\145\164\155\141" "\163\153\040\115\101\123\113\135\040\160\165\142\012\133\055\166" "\135\011\133\055\110\040\110\127\124\131\120\105\135\040\133\055" "\151\040\111\106\135\040\055\104\163\040\110\117\123\124\116\101" "\115\105\040\111\106\101\103\105\040\133\156\145\164\155\141\163" "\153\040\115\101\123\113\135\040\160\165\142\012\012\115\141\156" "\151\160\165\154\141\164\145\040\101\122\120\040\143\141\143\150" "\145\012\012\011\055\141\011\011\104\151\163\160\154\141\171\040" "\050\141\154\154\051\040\150\157\163\164\163\012\011\055\144\011" "\011\104\145\154\145\164\145\040\101\122\120\040\145\156\164\162" "\171\012\011\055\163\011\011\123\145\164\040\156\145\167\040\145" "\156\164\162\171\012\011\055\166\011\011\126\145\162\142\157\163" "\145\012\011\055\156\011\011\104\157\156\047\164\040\162\145\163" "\157\154\166\145\040\156\141\155\145\163\012\011\055\151\040\111" "\106\011\011\116\145\164\167\157\162\153\040\151\156\164\145\162" "\146\141\143\145\012\011\055\104\011\011\122\145\141\144\040\110" "\127\101\104\104\122\040\146\162\157\155\040\111\106\101\103\105" "\012\011\055\101\054\055\160\040\101\106\011\120\162\157\164\157" "\143\157\154\040\146\141\155\151\154\171\012\011\055\110\040\110" "\127\124\131\120\105\011\110\141\162\144\167\141\162\145\040\141" "\144\144\162\145\163\163\040\164\171\160\145\000\133\055\146\161" "\142\104\125\101\135\040\133\055\143\040\103\116\124\135\040\133" "\055\167\040\124\111\115\105\117\125\124\135\040\133\055\111\040" "\111\106\101\103\105\135\040\133\055\163\040\123\122\103\137\111" "\120\135\040\104\123\124\137\111\120\012\012\123\145\156\144\040" "\101\122\120\040\162\145\161\165\145\163\164\163\057\162\145\160" "\154\151\145\163\012\012\011\055\146\011\011\121\165\151\164\040" "\157\156\040\146\151\162\163\164\040\101\122\120\040\162\145\160" "\154\171\012\011\055\161\011\011\121\165\151\145\164\012\011\055" "\142\011\011\113\145\145\160\040\142\162\157\141\144\143\141\163" "\164\151\156\147\054\040\144\157\156\047\164\040\147\157\040\165" "\156\151\143\141\163\164\012\011\055\104\011\011\104\165\160\154" "\151\143\141\164\145\144\040\141\144\144\162\145\163\163\040\144" "\145\164\145\143\164\151\157\156\040\155\157\144\145\012\011\055" "\125\011\011\125\156\163\157\154\151\143\151\164\145\144\040\101" "\122\120\040\155\157\144\145\054\040\165\160\144\141\164\145\040" "\171\157\165\162\040\156\145\151\147\150\142\157\162\163\012\011" "\055\101\011\011\101\122\120\040\141\156\163\167\145\162\040\155" "\157\144\145\054\040\165\160\144\141\164\145\040\171\157\165\162" "\040\156\145\151\147\150\142\157\162\163\012\011\055\143\040\116" "\011\011\123\164\157\160\040\141\146\164\145\162\040\163\145\156" "\144\151\156\147\040\116\040\101\122\120\040\162\145\161\165\145" "\163\164\163\012\011\055\167\040\124\111\115\105\117\125\124\011" "\124\151\155\145\040\164\157\040\167\141\151\164\040\146\157\162" "\040\101\122\120\040\162\145\160\154\171\054\040\163\145\143\157" "\156\144\163\012\011\055\111\040\111\106\101\103\105\011\111\156" "\164\145\162\146\141\143\145\040\164\157\040\165\163\145\040\050" "\144\145\146\141\165\154\164\040\145\164\150\060\051\012\011\055" "\163\040\123\122\103\137\111\120\011\123\145\156\144\145\162\040" "\111\120\040\141\144\144\162\145\163\163\012\011\104\123\124\137" "\111\120\011\011\124\141\162\147\145\164\040\111\120\040\141\144" "\144\162\145\163\163\000\133\055\057\053\117\120\124\111\117\116" "\123\135\040\133\055\057\053\157\040\117\120\124\135\056\056\056" "\040\133\055\143\040\047\123\103\122\111\120\124\047\040\133\101" "\122\107\060\040\133\101\122\107\123\135\135\040\057\040\106\111" "\114\105\040\133\101\122\107\123\135\135\012\012\125\156\151\170" "\040\163\150\145\154\154\040\151\156\164\145\162\160\162\145\164" "\145\162\000\133\117\120\124\111\117\116\123\135\040\133\101\127" "\113\137\120\122\117\107\122\101\115\135\040\133\106\111\114\105" "\135\056\056\056\012\012\011\055\166\040\126\101\122\075\126\101" "\114\011\123\145\164\040\166\141\162\151\141\142\154\145\012\011" "\055\106\040\123\105\120\011\011\125\163\145\040\123\105\120\040" "\141\163\040\146\151\145\154\144\040\163\145\160\141\162\141\164" "\157\162\012\011\055\146\040\106\111\114\105\011\011\122\145\141" "\144\040\160\162\157\147\162\141\155\040\146\162\157\155\040\106" "\111\114\105\012\011\055\145\040\101\127\113\137\120\122\117\107" "\122\101\115\000\133\055\144\135\040\133\106\111\114\105\135\012" "\012\102\141\163\145\066\064\040\145\156\143\157\144\145\040\157" "\162\040\144\145\143\157\144\145\040\106\111\114\105\040\164\157" "\040\163\164\141\156\144\141\162\144\040\157\165\164\160\165\164" "\012\011\055\144\011\104\145\143\157\144\145\040\144\141\164\141" "\000\106\111\114\105\040\133\123\125\106\106\111\130\135\012\012" "\123\164\162\151\160\040\144\151\162\145\143\164\157\162\171\040" "\160\141\164\150\040\141\156\144\040\056\123\125\106\106\111\130" "\040\146\162\157\155\040\106\111\114\105\012\000\055\146\040\106" "\122\105\121\040\055\154\040\114\105\116\040\055\144\040\104\105" "\114\101\131\040\055\162\040\103\117\125\116\124\040\055\156\012" "\012\011\055\146\011\106\162\145\161\165\145\156\143\171\040\151" "\156\040\110\172\012\011\055\154\011\114\145\156\147\164\150\040" "\151\156\040\155\163\012\011\055\144\011\104\145\154\141\171\040" "\151\156\040\155\163\012\011\055\162\011\122\145\160\145\164\151" "\164\151\157\156\163\012\011\055\156\011\123\164\141\162\164\040" "\156\145\167\040\164\157\156\145\000\133\102\114\117\103\113\104" "\105\126\135\056\056\056\012\012\120\162\151\156\164\040\125\125" "\111\104\163\040\157\146\040\141\154\154\040\146\151\154\145\163" "\171\163\164\145\155\163\000\117\120\124\111\117\116\040\102\114" "\117\103\113\104\105\126\012\012\011\055\055\163\145\164\162\157" "\011\011\123\145\164\040\162\157\012\011\055\055\163\145\164\162" "\167\011\011\123\145\164\040\162\167\012\011\055\055\147\145\164" "\162\157\011\011\107\145\164\040\162\157\012\011\055\055\147\145" "\164\163\163\011\011\107\145\164\040\163\145\143\164\157\162\040" "\163\151\172\145\012\011\055\055\147\145\164\142\163\172\011\107" "\145\164\040\142\154\157\143\153\040\163\151\172\145\012\011\055" "\055\163\145\164\142\163\172\040\102\131\124\105\123\011\123\145" "\164\040\142\154\157\143\153\040\163\151\172\145\012\011\055\055" "\147\145\164\163\172\011\011\107\145\164\040\144\145\166\151\143" "\145\040\163\151\172\145\040\151\156\040\065\061\062\055\142\171" "\164\145\040\163\145\143\164\157\162\163\012\011\055\055\147\145" "\164\163\151\172\145\066\064\011\107\145\164\040\144\145\166\151" "\143\145\040\163\151\172\145\040\151\156\040\142\171\164\145\163" "\012\011\055\055\146\154\165\163\150\142\165\146\163\011\106\154" "\165\163\150\040\142\165\146\146\145\162\163\012\011\055\055\162" "\145\162\145\141\144\160\164\011\122\145\162\145\141\144\040\160" "\141\162\164\151\164\151\157\156\040\164\141\142\154\145\000\163" "\164\141\162\164\040\133\120\122\117\107\040\101\122\107\123\135" "\174\163\164\157\160\174\151\156\151\164\012\012\103\162\145\141" "\164\145\040\057\166\141\162\057\154\157\147\057\142\157\157\164" "\143\150\141\162\164\056\164\147\172\040\167\151\164\150\040\142" "\157\157\164\040\143\150\141\162\164\040\144\141\164\141\012\012" "\163\164\141\162\164\072\040\163\164\141\162\164\040\142\141\143" "\153\147\162\157\165\156\144\040\154\157\147\147\151\156\147\073" "\040\167\151\164\150\040\120\122\117\107\054\040\162\165\156\040" "\120\122\117\107\054\040\164\150\145\156\040\153\151\154\154\040" "\154\157\147\147\151\156\147\040\167\151\164\150\040\125\123\122" "\061\012\163\164\157\160\072\040\163\145\156\144\040\125\123\122" "\061\040\164\157\040\141\154\154\040\142\157\157\164\143\150\141" "\162\164\144\040\160\162\157\143\145\163\163\145\163\012\151\156" "\151\164\072\040\163\164\141\162\164\040\142\141\143\153\147\162" "\157\165\156\144\040\154\157\147\147\151\156\147\073\040\163\164" "\157\160\040\167\150\145\156\040\147\145\164\164\171\057\170\144" "\155\040\151\163\040\163\145\145\156\040\050\146\157\162\040\151" "\156\151\164\040\163\143\162\151\160\164\163\051\012\125\156\144" "\145\162\040\120\111\104\040\061\072\040\141\163\040\151\156\151" "\164\054\040\164\150\145\156\040\145\170\145\143\040\044\142\157" "\157\164\143\150\141\162\164\137\151\156\151\164\054\040\057\151" "\156\151\164\054\040\057\163\142\151\156\057\151\156\151\164\000" "\103\117\115\115\101\116\104\040\133\102\122\111\104\107\105\040" "\133\111\116\124\105\122\106\101\103\105\135\135\012\012\115\141" "\156\141\147\145\040\145\164\150\145\162\156\145\164\040\142\162" "\151\144\147\145\163\012\012\103\157\155\155\141\156\144\163\072" "\012\011\163\150\157\167\011\011\011\123\150\157\167\040\141\040" "\154\151\163\164\040\157\146\040\142\162\151\144\147\145\163\012" "\011\141\144\144\142\162\040\102\122\111\104\107\105\011\011\103" "\162\145\141\164\145\040\102\122\111\104\107\105\012\011\144\145" "\154\142\162\040\102\122\111\104\107\105\011\011\104\145\154\145" "\164\145\040\102\122\111\104\107\105\012\011\141\144\144\151\146" "\040\102\122\111\104\107\105\040\111\106\101\103\105\011\101\144" "\144\040\111\106\101\103\105\040\164\157\040\102\122\111\104\107" "\105\012\011\144\145\154\151\146\040\102\122\111\104\107\105\040" "\111\106\101\103\105\011\104\145\154\145\164\145\040\111\106\101" "\103\105\040\146\162\157\155\040\102\122\111\104\107\105\012\011" "\163\145\164\141\147\145\151\156\147\040\102\122\111\104\107\105" "\040\124\111\115\105\011\011\123\145\164\040\141\147\145\151\156" "\147\040\164\151\155\145\012\011\163\145\164\146\144\040\102\122" "\111\104\107\105\040\124\111\115\105\011\011\123\145\164\040\142" "\162\151\144\147\145\040\146\157\162\167\141\162\144\040\144\145" "\154\141\171\012\011\163\145\164\150\145\154\154\157\040\102\122" "\111\104\107\105\040\124\111\115\105\011\011\123\145\164\040\150" "\145\154\154\157\040\164\151\155\145\012\011\163\145\164\155\141" "\170\141\147\145\040\102\122\111\104\107\105\040\124\111\115\105" "\011\011\123\145\164\040\155\141\170\040\155\145\163\163\141\147" "\145\040\141\147\145\012\011\163\145\164\160\141\164\150\143\157" "\163\164\040\102\122\111\104\107\105\040\103\117\123\124\011\011" "\123\145\164\040\160\141\164\150\040\143\157\163\164\012\011\163" "\145\164\160\157\162\164\160\162\151\157\040\102\122\111\104\107" "\105\040\120\122\111\117\011\011\123\145\164\040\160\157\162\164" "\040\160\162\151\157\162\151\164\171\012\011\163\145\164\142\162" "\151\144\147\145\160\162\151\157\040\102\122\111\104\107\105\040" "\120\122\111\117\011\123\145\164\040\142\162\151\144\147\145\040" "\160\162\151\157\162\151\164\171\012\011\163\164\160\040\102\122" "\111\104\107\105\040\133\061\057\171\145\163\057\157\156\174\060" "\057\156\157\057\157\146\146\135\011\123\124\120\040\157\156\057" "\157\146\146\000\133\055\143\146\135\040\133\106\111\114\105\135" "\056\056\056\012\012\104\145\143\157\155\160\162\145\163\163\040" "\106\111\114\105\163\040\050\157\162\040\163\164\144\151\156\051" "\012\012\011\055\143\011\127\162\151\164\145\040\164\157\040\163" "\164\144\157\165\164\012\011\055\146\011\106\157\162\143\145\000" "\133\106\111\114\105\135\056\056\056\012\012\104\145\143\157\155" "\160\162\145\163\163\040\164\157\040\163\164\144\157\165\164\000" "\133\117\120\124\111\117\116\123\135\040\133\106\111\114\105\135" "\056\056\056\012\012\103\157\155\160\162\145\163\163\040\106\111" "\114\105\163\040\050\157\162\040\163\164\144\151\156\051\040\167" "\151\164\150\040\142\172\151\160\062\040\141\154\147\157\162\151" "\164\150\155\012\012\011\055\061\056\056\071\011\103\157\155\160" "\162\145\163\163\151\157\156\040\154\145\166\145\154\012\011\055" "\144\011\104\145\143\157\155\160\162\145\163\163\012\011\055\143" "\011\127\162\151\164\145\040\164\157\040\163\164\144\157\165\164" "\012\011\055\146\011\106\157\162\143\145\000\133\055\152\171\135" "\040\133\133\115\117\116\124\110\135\040\131\105\101\122\135\012" "\012\104\151\163\160\154\141\171\040\141\040\143\141\154\145\156" "\144\141\162\012\012\011\055\152\011\125\163\145\040\152\165\154" "\151\141\156\040\144\141\164\145\163\012\011\055\171\011\104\151" "\163\160\154\141\171\040\164\150\145\040\145\156\164\151\162\145" "\040\171\145\141\162\000\133\106\111\114\105\135\056\056\056\012" "\012\103\157\156\143\141\164\145\156\141\164\145\040\106\111\114" "\105\163\040\141\156\144\040\160\162\151\156\164\040\164\150\145" "\155\040\164\157\040\163\164\144\157\165\164\000\133\055\145\164" "\166\135\040\133\106\111\114\105\135\056\056\056\012\012\104\151" "\163\160\154\141\171\040\156\157\156\160\162\151\156\164\151\156" "\147\040\143\150\141\162\141\143\164\145\162\163\040\141\163\040" "\136\170\040\157\162\040\115\055\170\012\012\011\055\145\011\105" "\156\144\040\145\141\143\150\040\154\151\156\145\040\167\151\164" "\150\040\044\012\011\055\164\011\123\150\157\167\040\164\141\142" "\163\040\141\163\040\136\111\012\011\055\166\011\104\157\156\047" "\164\040\165\163\145\040\136\170\040\157\162\040\115\055\170\040" "\145\163\143\141\160\145\163\000\105\130\120\105\103\124\040\133" "\123\105\116\104\040\133\105\130\120\105\103\124\040\133\123\105" "\116\104\056\056\056\135\135\135\012\012\125\163\145\146\165\154" "\040\146\157\162\040\151\156\164\145\162\141\143\164\151\156\147" "\040\167\151\164\150\040\141\040\155\157\144\145\155\040\143\157" "\156\156\145\143\164\145\144\040\164\157\040\163\164\144\151\156" "\057\163\164\144\157\165\164\056\012\101\040\163\143\162\151\160" "\164\040\143\157\156\163\151\163\164\163\040\157\146\040\157\156" "\145\040\157\162\040\155\157\162\145\040\042\145\170\160\145\143" "\164\055\163\145\156\144\042\040\160\141\151\162\163\040\157\146" "\040\163\164\162\151\156\147\163\054\012\145\141\143\150\040\160" "\141\151\162\040\151\163\040\141\040\160\141\151\162\040\157\146" "\040\141\162\147\165\155\145\156\164\163\056\040\105\170\141\155" "\160\154\145\072\012\143\150\141\164\040\047\047\040\101\124\132" "\040\117\113\040\101\124\104\061\062\063\064\065\066\040\103\117" "\116\116\105\103\124\040\047\047\040\157\147\151\156\072\040\160" "\160\160\165\163\145\162\040\167\157\162\144\072\040\160\160\160" "\160\141\163\163\040\047\176\047\000\133\055\122\135\040\133\055" "\053\075\101\141\143\104\144\151\152\163\123\164\124\165\135\040" "\133\055\166\040\126\105\122\123\111\117\116\135\040\133\106\111" "\114\105\135\056\056\056\012\012\103\150\141\156\147\145\040\146" "\151\154\145\040\141\164\164\162\151\142\165\164\145\163\040\157" "\156\040\141\156\040\145\170\164\062\040\146\163\012\012\115\157" "\144\151\146\151\145\162\163\072\012\011\055\011\122\145\155\157" "\166\145\040\141\164\164\162\151\142\165\164\145\163\012\011\053" "\011\101\144\144\040\141\164\164\162\151\142\165\164\145\163\012" "\011\075\011\123\145\164\040\141\164\164\162\151\142\165\164\145" "\163\012\101\164\164\162\151\142\165\164\145\163\072\012\011\101" "\011\104\157\156\047\164\040\164\162\141\143\153\040\141\164\151" "\155\145\012\011\141\011\101\160\160\145\156\144\040\155\157\144" "\145\040\157\156\154\171\012\011\143\011\105\156\141\142\154\145" "\040\143\157\155\160\162\145\163\163\012\011\104\011\127\162\151" "\164\145\040\144\151\162\040\143\157\156\164\145\156\164\163\040" "\163\171\156\143\150\162\157\156\157\165\163\154\171\012\011\144" "\011\104\157\156\047\164\040\142\141\143\153\165\160\040\167\151" "\164\150\040\144\165\155\160\012\011\151\011\103\141\156\156\157" "\164\040\142\145\040\155\157\144\151\146\151\145\144\040\050\151" "\155\155\165\164\141\142\154\145\051\012\011\152\011\127\162\151" "\164\145\040\141\154\154\040\144\141\164\141\040\164\157\040\152" "\157\165\162\156\141\154\040\146\151\162\163\164\012\011\163\011" "\132\145\162\157\040\144\151\163\153\040\163\164\157\162\141\147" "\145\040\167\150\145\156\040\144\145\154\145\164\145\144\012\011" "\123\011\127\162\151\164\145\040\146\151\154\145\040\143\157\156" "\164\145\156\164\163\040\163\171\156\143\150\162\157\156\157\165" "\163\154\171\012\011\164\011\104\151\163\141\142\154\145\040\164" "\141\151\154\055\155\145\162\147\151\156\147\040\157\146\040\160" "\141\162\164\151\141\154\040\142\154\157\143\153\163\040\167\151" "\164\150\040\157\164\150\145\162\040\146\151\154\145\163\012\011" "\165\011\101\154\154\157\167\040\146\151\154\145\040\164\157\040" "\142\145\040\165\156\144\145\154\145\164\145\144\012\011\055\122" "\011\122\145\143\165\162\163\145\012\011\055\166\011\123\145\164" "\040\164\150\145\040\146\151\154\145\047\163\040\166\145\162\163" "\151\157\156\057\147\145\156\145\162\141\164\151\157\156\040\156" "\165\155\142\145\162\000\133\055\122\150\114\110\120\143\166\146" "\135\056\056\056\040\107\122\117\125\120\040\106\111\114\105\056" "\056\056\012\012\103\150\141\156\147\145\040\164\150\145\040\147" "\162\157\165\160\040\155\145\155\142\145\162\163\150\151\160\040" "\157\146\040\145\141\143\150\040\106\111\114\105\040\164\157\040" "\107\122\117\125\120\012\012\011\055\122\011\122\145\143\165\162" "\163\145\012\011\055\150\011\101\146\146\145\143\164\040\163\171" "\155\154\151\156\153\163\040\151\156\163\164\145\141\144\040\157" "\146\040\163\171\155\154\151\156\153\040\164\141\162\147\145\164" "\163\012\011\055\114\011\124\162\141\166\145\162\163\145\040\141" "\154\154\040\163\171\155\154\151\156\153\163\040\164\157\040\144" "\151\162\145\143\164\157\162\151\145\163\012\011\055\110\011\124" "\162\141\166\145\162\163\145\040\163\171\155\154\151\156\153\163" "\040\157\156\040\143\157\155\155\141\156\144\040\154\151\156\145" "\040\157\156\154\171\012\011\055\120\011\104\157\156\047\164\040" "\164\162\141\166\145\162\163\145\040\163\171\155\154\151\156\153" "\163\040\050\144\145\146\141\165\154\164\051\012\011\055\143\011" "\114\151\163\164\040\143\150\141\156\147\145\144\040\146\151\154" "\145\163\012\011\055\166\011\126\145\162\142\157\163\145\012\011" "\055\146\011\110\151\144\145\040\145\162\162\157\162\163\000\133" "\055\122\143\166\146\135\040\115\117\104\105\133\054\115\117\104" "\105\135\056\056\056\040\106\111\114\105\056\056\056\012\012\105" "\141\143\150\040\115\117\104\105\040\151\163\040\157\156\145\040" "\157\162\040\155\157\162\145\040\157\146\040\164\150\145\040\154" "\145\164\164\145\162\163\040\165\147\157\141\054\040\157\156\145" "\040\157\146\040\164\150\145\012\163\171\155\142\157\154\163\040" "\053\055\075\040\141\156\144\040\157\156\145\040\157\162\040\155" "\157\162\145\040\157\146\040\164\150\145\040\154\145\164\164\145" "\162\163\040\162\167\170\163\164\012\012\011\055\122\011\122\145" "\143\165\162\163\145\012\011\055\143\011\114\151\163\164\040\143" "\150\141\156\147\145\144\040\146\151\154\145\163\012\011\055\166" "\011\114\151\163\164\040\141\154\154\040\146\151\154\145\163\012" "\011\055\146\011\110\151\144\145\040\145\162\162\157\162\163\000" "\133\055\122\150\114\110\120\143\166\146\135\056\056\056\040\117" "\127\116\105\122\133\074\056\174\072\076\133\107\122\117\125\120" "\135\135\040\106\111\114\105\056\056\056\012\012\103\150\141\156" "\147\145\040\164\150\145\040\157\167\156\145\162\040\141\156\144" "\057\157\162\040\147\162\157\165\160\040\157\146\040\145\141\143" "\150\040\106\111\114\105\040\164\157\040\117\127\116\105\122\040" "\141\156\144\057\157\162\040\107\122\117\125\120\012\012\011\055" "\122\011\122\145\143\165\162\163\145\012\011\055\150\011\101\146" "\146\145\143\164\040\163\171\155\154\151\156\153\163\040\151\156" "\163\164\145\141\144\040\157\146\040\163\171\155\154\151\156\153" "\040\164\141\162\147\145\164\163\012\011\055\114\011\124\162\141" "\166\145\162\163\145\040\141\154\154\040\163\171\155\154\151\156" "\153\163\040\164\157\040\144\151\162\145\143\164\157\162\151\145" "\163\012\011\055\110\011\124\162\141\166\145\162\163\145\040\163" "\171\155\154\151\156\153\163\040\157\156\040\143\157\155\155\141" "\156\144\040\154\151\156\145\040\157\156\154\171\012\011\055\120" "\011\104\157\156\047\164\040\164\162\141\166\145\162\163\145\040" "\163\171\155\154\151\156\153\163\040\050\144\145\146\141\165\154" "\164\051\012\011\055\143\011\114\151\163\164\040\143\150\141\156" "\147\145\144\040\146\151\154\145\163\012\011\055\166\011\114\151" "\163\164\040\141\154\154\040\146\151\154\145\163\012\011\055\146" "\011\110\151\144\145\040\145\162\162\157\162\163\000\133\055\055" "\155\144\065\174\055\055\145\156\143\162\171\160\164\145\144\135" "\012\012\122\145\141\144\040\165\163\145\162\072\160\141\163\163" "\167\157\162\144\040\146\162\157\155\040\163\164\144\151\156\040" "\141\156\144\040\165\160\144\141\164\145\040\057\145\164\143\057" "\160\141\163\163\167\144\012\012\011\055\145\054\055\055\145\156" "\143\162\171\160\164\145\144\011\123\165\160\160\154\151\145\144" "\040\160\141\163\163\167\157\162\144\163\040\141\162\145\040\151" "\156\040\145\156\143\162\171\160\164\145\144\040\146\157\162\155" "\012\011\055\155\054\055\055\155\144\065\011\125\163\145\040\115" "\104\065\040\145\156\143\162\171\160\164\151\157\156\040\151\156" "\163\164\145\141\144\040\157\146\040\104\105\123\000\133\055\166" "\120\060\061\062\135\040\133\055\165\040\125\123\105\122\133\072" "\107\122\120\135\135\040\133\055\125\040\125\123\105\122\133\072" "\107\122\120\135\135\040\133\055\145\040\104\111\122\135\012\011" "\133\055\057\040\104\111\122\135\040\133\055\156\040\116\111\103" "\105\135\040\133\055\155\040\102\131\124\105\123\135\040\133\055" "\144\040\102\131\124\105\123\135\040\133\055\157\040\116\135\012" "\011\133\055\160\040\116\135\040\133\055\146\040\102\131\124\105" "\123\135\040\133\055\143\040\102\131\124\105\123\135\040\120\122" "\117\107\040\101\122\107\123\012\012\103\150\141\156\147\145\040" "\164\150\145\040\160\162\157\143\145\163\163\040\163\164\141\164" "\145\054\040\162\165\156\040\120\122\117\107\012\012\011\055\165" "\040\125\123\105\122\133\072\107\122\120\135\011\123\145\164\040" "\165\151\144\040\141\156\144\040\147\151\144\012\011\055\125\040" "\125\123\105\122\133\072\107\122\120\135\011\123\145\164\040\044" "\125\111\104\040\141\156\144\040\044\107\111\104\040\151\156\040" "\145\156\166\151\162\157\156\155\145\156\164\012\011\055\145\040" "\104\111\122\011\011\123\145\164\040\145\156\166\151\162\157\156" "\155\145\156\164\040\166\141\162\151\141\142\154\145\163\040\141" "\163\040\163\160\145\143\151\146\151\145\144\040\142\171\040\146" "\151\154\145\163\012\011\011\011\151\156\040\104\111\122\072\040" "\146\151\154\145\075\061\163\164\137\154\151\156\145\137\157\146" "\137\146\151\154\145\012\011\055\057\040\104\111\122\011\011\103" "\150\162\157\157\164\040\164\157\040\104\111\122\012\011\055\156" "\040\116\111\103\105\011\011\101\144\144\040\116\111\103\105\040" "\164\157\040\156\151\143\145\040\166\141\154\165\145\012\011\055" "\155\040\102\131\124\105\123\011\123\141\155\145\040\141\163\040" "\055\144\040\102\131\124\105\123\040\055\163\040\102\131\124\105" "\123\040\055\154\040\102\131\124\105\123\012\011\055\144\040\102" "\131\124\105\123\011\114\151\155\151\164\040\144\141\164\141\040" "\163\145\147\155\145\156\164\012\011\055\157\040\116\011\011\114" "\151\155\151\164\040\156\165\155\142\145\162\040\157\146\040\157" "\160\145\156\040\146\151\154\145\163\040\160\145\162\040\160\162" "\157\143\145\163\163\012\011\055\160\040\116\011\011\114\151\155" "\151\164\040\156\165\155\142\145\162\040\157\146\040\160\162\157" "\143\145\163\163\145\163\040\160\145\162\040\165\151\144\012\011" "\055\146\040\102\131\124\105\123\011\114\151\155\151\164\040\157" "\165\164\160\165\164\040\146\151\154\145\040\163\151\172\145\163" "\012\011\055\143\040\102\131\124\105\123\011\114\151\155\151\164" "\040\143\157\162\145\040\146\151\154\145\040\163\151\172\145\012" "\011\055\166\011\011\126\145\162\142\157\163\145\012\011\055\120" "\011\011\103\162\145\141\164\145\040\156\145\167\040\160\162\157" "\143\145\163\163\040\147\162\157\165\160\012\011\055\060\011\011" "\103\154\157\163\145\040\163\164\144\151\156\012\011\055\061\011" "\011\103\154\157\163\145\040\163\164\144\157\165\164\012\011\055" "\062\011\011\103\154\157\163\145\040\163\164\144\145\162\162\000" "\116\105\127\122\117\117\124\040\133\120\122\117\107\040\101\122" "\107\123\135\012\012\122\165\156\040\120\122\117\107\040\167\151" "\164\150\040\162\157\157\164\040\144\151\162\145\143\164\157\162" "\171\040\163\145\164\040\164\157\040\116\105\127\122\117\117\124" "\000\133\055\160\162\146\157\155\135\040\133\120\122\111\117\135" "\040\133\120\111\104\040\174\040\120\122\117\107\040\101\122\107" "\123\135\012\012\103\150\141\156\147\145\040\163\143\150\145\144" "\165\154\151\156\147\040\160\162\151\157\162\151\164\171\040\141" "\156\144\040\143\154\141\163\163\040\146\157\162\040\141\040\160" "\162\157\143\145\163\163\012\012\011\055\160\011\117\160\145\162" "\141\164\145\040\157\156\040\120\111\104\012\011\055\162\011\123" "\145\164\040\123\103\110\105\104\137\122\122\040\143\154\141\163" "\163\012\011\055\146\011\123\145\164\040\123\103\110\105\104\137" "\106\111\106\117\040\143\154\141\163\163\012\011\055\157\011\123" "\145\164\040\123\103\110\105\104\137\117\124\110\105\122\040\143" "\154\141\163\163\012\011\055\155\011\123\150\157\167\040\155\151" "\156\057\155\141\170\040\160\162\151\157\162\151\164\151\145\163" "\000\116\012\012\103\150\141\156\147\145\040\164\150\145\040\146" "\157\162\145\147\162\157\165\156\144\040\166\151\162\164\165\141" "\154\040\164\145\162\155\151\156\141\154\040\164\157\040\057\144" "\145\166\057\164\164\171\116\000\106\111\114\105\123\056\056\056" "\012\012\103\141\154\143\165\154\141\164\145\040\164\150\145\040" "\103\122\103\063\062\040\143\150\145\143\153\163\165\155\163\040" "\157\146\040\106\111\114\105\123\000\012\012\103\154\145\141\162" "\040\163\143\162\145\145\156\000\133\055\154\135\040\133\055\163" "\135\040\106\111\114\105\061\040\133\106\111\114\105\062\040\133" "\123\113\111\120\061\040\133\123\113\111\120\062\135\135\135\012" "\012\103\157\155\160\141\162\145\040\106\111\114\105\061\040\167" "\151\164\150\040\106\111\114\105\062\040\050\157\162\040\163\164" "\144\151\156\051\012\012\011\055\154\011\127\162\151\164\145\040" "\164\150\145\040\142\171\164\145\040\156\165\155\142\145\162\163" "\040\050\144\145\143\151\155\141\154\051\040\141\156\144\040\166" "\141\154\165\145\163\040\050\157\143\164\141\154\051\012\011\011" "\146\157\162\040\141\154\154\040\144\151\146\146\145\162\151\156" "\147\040\142\171\164\145\163\012\011\055\163\011\121\165\151\145" "\164\000\133\055\061\062\063\135\040\106\111\114\105\061\040\106" "\111\114\105\062\012\012\103\157\155\160\141\162\145\040\106\111" "\114\105\061\040\167\151\164\150\040\106\111\114\105\062\012\012" "\011\055\061\011\123\165\160\160\162\145\163\163\040\154\151\156" "\145\163\040\165\156\151\161\165\145\040\164\157\040\106\111\114" "\105\061\012\011\055\062\011\123\165\160\160\162\145\163\163\040" "\154\151\156\145\163\040\165\156\151\161\165\145\040\164\157\040" "\106\111\114\105\062\012\011\055\063\011\123\165\160\160\162\145" "\163\163\040\154\151\156\145\163\040\143\157\155\155\157\156\040" "\164\157\040\142\157\164\150\040\146\151\154\145\163\000\133\055" "\166\143\163\156\144\146\106\121\135\040\133\055\170\040\103\117" "\114\135\040\133\055\171\040\114\111\116\105\135\040\133\103\117" "\116\123\117\114\105\137\116\117\135\012\012\101\040\164\145\170" "\164\055\155\157\144\145\040\126\116\103\040\154\151\153\145\040" "\160\162\157\147\162\141\155\040\146\157\162\040\114\151\156\165" "\170\040\166\151\162\164\165\141\154\040\143\157\156\163\157\154" "\145\163\056\012\124\157\040\145\170\151\164\054\040\161\165\151" "\143\153\154\171\040\160\162\145\163\163\040\105\123\103\040\063" "\040\164\151\155\145\163\056\012\012\011\055\166\011\104\157\156" "\047\164\040\163\145\156\144\040\153\145\171\163\164\162\157\153" "\145\163\040\164\157\040\164\150\145\040\143\157\156\163\157\154" "\145\012\011\055\143\011\103\162\145\141\164\145\040\155\151\163" "\163\151\156\147\040\057\144\145\166\057\173\164\164\171\054\166" "\143\163\141\175\116\012\011\055\163\011\117\160\145\156\040\141" "\040\123\110\105\114\114\040\163\145\163\163\151\157\156\012\011" "\055\156\011\102\154\141\143\153\040\046\040\167\150\151\164\145" "\012\011\055\144\011\104\165\155\160\040\143\157\156\163\157\154" "\145\040\164\157\040\163\164\144\157\165\164\012\011\055\146\011" "\106\157\154\154\157\167\040\143\165\162\163\157\162\012\011\055" "\106\011\101\163\163\165\155\145\040\143\157\156\163\157\154\145" "\040\151\163\040\157\156\040\141\040\146\162\141\155\145\142\165" "\146\146\145\162\040\144\145\166\151\143\145\012\011\055\121\011" "\104\151\163\141\142\154\145\040\145\170\151\164\040\157\156\040" "\105\123\103\055\105\123\103\055\105\123\103\012\011\055\170\040" "\103\117\114\011\123\164\141\162\164\151\156\147\040\143\157\154" "\165\155\156\012\011\055\171\040\114\111\116\105\011\123\164\141" "\162\164\151\156\147\040\154\151\156\145\000\133\117\120\124\111" "\117\116\123\135\040\123\117\125\122\103\105\056\056\056\040\104" "\105\123\124\012\012\103\157\160\171\040\123\117\125\122\103\105" "\050\163\051\040\164\157\040\104\105\123\124\012\012\011\055\141" "\011\123\141\155\145\040\141\163\040\055\144\160\122\012\011\055" "\122\054\055\162\011\122\145\143\165\162\163\145\012\011\055\144" "\054\055\120\011\120\162\145\163\145\162\166\145\040\163\171\155" "\154\151\156\153\163\040\050\144\145\146\141\165\154\164\040\151" "\146\040\055\122\051\012\011\055\114\011\106\157\154\154\157\167" "\040\141\154\154\040\163\171\155\154\151\156\153\163\012\011\055" "\110\011\106\157\154\154\157\167\040\163\171\155\154\151\156\153" "\163\040\157\156\040\143\157\155\155\141\156\144\040\154\151\156" "\145\012\011\055\160\011\120\162\145\163\145\162\166\145\040\146" "\151\154\145\040\141\164\164\162\151\142\165\164\145\163\040\151" "\146\040\160\157\163\163\151\142\154\145\012\011\055\146\011\117" "\166\145\162\167\162\151\164\145\012\011\055\151\011\120\162\157" "\155\160\164\040\142\145\146\157\162\145\040\157\166\145\162\167" "\162\151\164\145\012\011\055\154\054\055\163\011\103\162\145\141" "\164\145\040\050\163\171\155\051\154\151\156\153\163\000\133\055" "\144\155\166\165\135\040\133\055\106\040\106\111\114\105\135\040" "\133\055\110\040\156\145\167\143\135\040\133\055\164\151\157\135" "\040\133\055\160\040\104\111\122\135\040\133\105\130\124\122\137" "\106\111\114\105\135\056\056\056\012\012\105\170\164\162\141\143" "\164\040\157\162\040\154\151\163\164\040\146\151\154\145\163\040" "\146\162\157\155\040\141\040\143\160\151\157\040\141\162\143\150" "\151\166\145\054\040\157\162\012\143\162\145\141\164\145\040\141" "\156\040\141\162\143\150\151\166\145\040\050\055\157\051\040\157" "\162\040\143\157\160\171\040\146\151\154\145\163\040\050\055\160" "\051\040\165\163\151\156\147\040\146\151\154\145\040\154\151\163" "\164\040\157\156\040\163\164\144\151\156\012\012\115\141\151\156" "\040\157\160\145\162\141\164\151\157\156\040\155\157\144\145\072" "\012\011\055\164\011\114\151\163\164\012\011\055\151\011\105\170" "\164\162\141\143\164\040\105\130\124\122\137\106\111\114\105\163" "\040\050\157\162\040\141\154\154\051\012\011\055\157\011\103\162" "\145\141\164\145\040\050\162\145\161\165\151\162\145\163\040\055" "\110\040\156\145\167\143\051\012\011\055\160\040\104\111\122\011" "\103\157\160\171\040\146\151\154\145\163\040\164\157\040\104\111" "\122\012\011\055\144\011\115\141\153\145\040\154\145\141\144\151" "\156\147\040\144\151\162\145\143\164\157\162\151\145\163\012\011" "\055\155\011\120\162\145\163\145\162\166\145\040\155\164\151\155" "\145\012\011\055\166\011\126\145\162\142\157\163\145\012\011\055" "\165\011\117\166\145\162\167\162\151\164\145\012\011\055\106\040" "\106\111\114\105\011\111\156\160\165\164\040\050\055\164\054\055" "\151\054\055\160\051\040\157\162\040\157\165\164\160\165\164\040" "\050\055\157\051\040\146\151\154\145\012\011\055\110\040\156\145" "\167\143\011\101\162\143\150\151\166\145\040\146\157\162\155\141" "\164\000\055\146\142\123\040\055\154\040\116\040\055\144\040\116" "\040\055\114\040\114\117\107\106\111\114\105\040\055\143\040\104" "\111\122\012\012\011\055\146\011\106\157\162\145\147\162\157\165" "\156\144\012\011\055\142\011\102\141\143\153\147\162\157\165\156" "\144\040\050\144\145\146\141\165\154\164\051\012\011\055\123\011" "\114\157\147\040\164\157\040\163\171\163\154\157\147\040\050\144" "\145\146\141\165\154\164\051\012\011\055\154\011\123\145\164\040" "\154\157\147\040\154\145\166\145\154\056\040\060\040\151\163\040" "\164\150\145\040\155\157\163\164\040\166\145\162\142\157\163\145" "\054\040\144\145\146\141\165\154\164\040\070\012\011\055\144\011" "\123\145\164\040\154\157\147\040\154\145\166\145\154\054\040\154" "\157\147\040\164\157\040\163\164\144\145\162\162\012\011\055\114" "\011\114\157\147\040\164\157\040\146\151\154\145\012\011\055\143" "\011\127\157\162\153\151\156\147\040\144\151\162\000\133\055\143" "\040\104\111\122\135\040\133\055\165\040\125\123\105\122\135\040" "\133\055\154\145\162\135\174\133\106\111\114\105\135\012\012\011" "\055\143\011\103\162\157\156\164\141\142\040\144\151\162\145\143" "\164\157\162\171\012\011\055\165\011\125\163\145\162\012\011\055" "\154\011\114\151\163\164\040\143\162\157\156\164\141\142\012\011" "\055\145\011\105\144\151\164\040\143\162\157\156\164\141\142\012" "\011\055\162\011\104\145\154\145\164\145\040\143\162\157\156\164" "\141\142\012\011\106\111\114\105\011\122\145\160\154\141\143\145" "\040\143\162\157\156\164\141\142\040\142\171\040\106\111\114\105" "\040\050\047\055\047\072\040\163\164\144\151\156\051\000\133\117" "\120\124\111\117\116\123\135\040\133\120\101\123\123\127\117\122" "\104\135\040\133\123\101\114\124\135\012\012\103\162\171\160\164" "\040\120\101\123\123\127\117\122\104\040\165\163\151\156\147\040" "\143\162\171\160\164\050\063\051\012\012\011\055\120\054\055\055" "\160\141\163\163\167\157\162\144\055\146\144\075\116\011\122\145" "\141\144\040\160\141\163\163\167\157\162\144\040\146\162\157\155" "\040\146\144\040\116\012\011\055\155\054\055\055\155\145\164\150" "\157\144\075\124\131\120\105\011\105\156\143\162\171\160\164\151" "\157\156\040\155\145\164\150\157\144\012\011\055\123\054\055\055" "\163\141\154\164\075\123\101\114\124\000\133\120\122\117\107\040" "\101\122\107\123\135\012\012\107\151\166\145\040\120\122\117\107" "\040\141\040\143\157\156\164\162\157\154\154\151\156\147\040\164" "\164\171\040\151\146\040\160\157\163\163\151\142\154\145\056\012" "\105\170\141\155\160\154\145\040\146\157\162\040\057\145\164\143" "\057\151\156\151\164\164\141\142\040\050\146\157\162\040\142\165" "\163\171\142\157\170\040\151\156\151\164\051\072\012\011\072\072" "\162\145\163\160\141\167\156\072\057\142\151\156\057\143\164\164" "\171\150\141\143\153\040\057\142\151\156\057\163\150\012\107\151" "\166\151\156\147\040\143\157\156\164\162\157\154\154\151\156\147" "\040\164\164\171\040\164\157\040\163\150\145\154\154\040\162\165" "\156\156\151\156\147\040\167\151\164\150\040\120\111\104\040\061" "\072\012\011\044\040\145\170\145\143\040\143\164\164\171\150\141" "\143\153\040\163\150\012\123\164\141\162\164\151\156\147\040\151" "\156\164\145\162\141\143\164\151\166\145\040\163\150\145\154\154" "\040\146\162\157\155\040\142\157\157\164\040\163\150\145\154\154" "\040\163\143\162\151\160\164\072\012\011\163\145\164\163\151\144" "\040\143\164\164\171\150\141\143\153\040\163\150\000\133\117\120" "\124\111\117\116\123\135\040\133\106\111\114\105\135\056\056\056" "\012\012\120\162\151\156\164\040\163\145\154\145\143\164\145\144" "\040\146\151\145\154\144\163\040\146\162\157\155\040\145\141\143" "\150\040\151\156\160\165\164\040\106\111\114\105\040\164\157\040" "\163\164\144\157\165\164\012\012\011\055\142\040\114\111\123\124" "\011\117\165\164\160\165\164\040\157\156\154\171\040\142\171\164" "\145\163\040\146\162\157\155\040\114\111\123\124\012\011\055\143" "\040\114\111\123\124\011\117\165\164\160\165\164\040\157\156\154" "\171\040\143\150\141\162\141\143\164\145\162\163\040\146\162\157" "\155\040\114\111\123\124\012\011\055\144\040\103\110\101\122\011" "\125\163\145\040\103\110\101\122\040\151\156\163\164\145\141\144" "\040\157\146\040\164\141\142\040\141\163\040\164\150\145\040\146" "\151\145\154\144\040\144\145\154\151\155\151\164\145\162\012\011" "\055\163\011\117\165\164\160\165\164\040\157\156\154\171\040\164" "\150\145\040\154\151\156\145\163\040\143\157\156\164\141\151\156" "\151\156\147\040\144\145\154\151\155\151\164\145\162\012\011\055" "\146\040\116\011\120\162\151\156\164\040\157\156\154\171\040\164" "\150\145\163\145\040\146\151\145\154\144\163\012\011\055\156\011" "\111\147\156\157\162\145\144\000\133\117\120\124\111\117\116\123" "\135\040\133\053\106\115\124\135\040\133\124\111\115\105\135\012" "\012\104\151\163\160\154\141\171\040\164\151\155\145\040\050\165" "\163\151\156\147\040\053\106\115\124\051\054\040\157\162\040\163" "\145\164\040\164\151\155\145\012\012\011\133\055\163\054\055\055" "\163\145\164\135\040\124\111\115\105\011\123\145\164\040\164\151" "\155\145\040\164\157\040\124\111\115\105\012\011\055\165\054\055" "\055\165\164\143\011\127\157\162\153\040\151\156\040\125\124\103" "\040\050\144\157\156\047\164\040\143\157\156\166\145\162\164\040" "\164\157\040\154\157\143\141\154\040\164\151\155\145\051\012\011" "\055\122\054\055\055\162\146\143\055\062\070\062\062\011\117\165" "\164\160\165\164\040\122\106\103\055\062\070\062\062\040\143\157" "\155\160\154\151\141\156\164\040\144\141\164\145\040\163\164\162" "\151\156\147\012\011\055\111\133\123\120\105\103\135\011\117\165" "\164\160\165\164\040\111\123\117\055\070\066\060\061\040\143\157" "\155\160\154\151\141\156\164\040\144\141\164\145\040\163\164\162" "\151\156\147\012\011\011\011\123\120\105\103\075\047\144\141\164" "\145\047\040\050\144\145\146\141\165\154\164\051\040\146\157\162" "\040\144\141\164\145\040\157\156\154\171\054\012\011\011\011\047" "\150\157\165\162\163\047\054\040\047\155\151\156\165\164\145\163" "\047\054\040\157\162\040\047\163\145\143\157\156\144\163\047\040" "\146\157\162\040\144\141\164\145\040\141\156\144\012\011\011\011" "\164\151\155\145\040\164\157\040\164\150\145\040\151\156\144\151" "\143\141\164\145\144\040\160\162\145\143\151\163\151\157\156\012" "\011\055\162\054\055\055\162\145\146\145\162\145\156\143\145\040" "\106\111\114\105\011\104\151\163\160\154\141\171\040\154\141\163" "\164\040\155\157\144\151\146\151\143\141\164\151\157\156\040\164" "\151\155\145\040\157\146\040\106\111\114\105\012\011\055\144\054" "\055\055\144\141\164\145\040\124\111\115\105\011\104\151\163\160" "\154\141\171\040\124\111\115\105\054\040\156\157\164\040\047\156" "\157\167\047\012\011\055\104\040\106\115\124\011\011\125\163\145" "\040\106\115\124\040\146\157\162\040\055\144\040\124\111\115\105" "\040\143\157\156\166\145\162\163\151\157\156\012\012\122\145\143" "\157\147\156\151\172\145\144\040\124\111\115\105\040\146\157\162" "\155\141\164\163\072\012\011\150\150\072\155\155\133\072\163\163" "\135\012\011\133\131\131\131\131\056\135\115\115\056\104\104\055" "\150\150\072\155\155\133\072\163\163\135\012\011\131\131\131\131" "\055\115\115\055\104\104\040\150\150\072\155\155\133\072\163\163" "\135\012\011\133\133\133\133\133\131\131\135\131\131\135\115\115" "\135\104\104\135\150\150\135\155\155\133\056\163\163\135\012\011" "\047\144\141\164\145\040\124\111\115\105\047\040\146\157\162\155" "\040\141\143\143\145\160\164\163\040\115\115\104\104\150\150\155" "\155\133\133\131\131\135\131\131\135\133\056\163\163\135\040\151" "\156\163\164\145\141\144\000\105\130\120\122\105\123\123\111\117" "\116\056\056\056\012\012\124\151\156\171\040\122\120\116\040\143" "\141\154\143\165\154\141\164\157\162\056\040\117\160\145\162\141" "\164\151\157\156\163\072\012\053\054\040\141\144\144\054\040\055" "\054\040\163\165\142\054\040\052\054\040\155\165\154\054\040\057" "\054\040\144\151\166\054\040\045\054\040\155\157\144\054\040\052" "\052\054\040\145\170\160\054\040\141\156\144\054\040\157\162\054" "\040\156\157\164\054\040\170\157\162\054\012\160\040\055\040\160" "\162\151\156\164\040\164\157\160\040\157\146\040\164\150\145\040" "\163\164\141\143\153\040\050\167\151\164\150\157\165\164\040\160" "\157\160\160\151\156\147\051\054\012\146\040\055\040\160\162\151" "\156\164\040\145\156\164\151\162\145\040\163\164\141\143\153\054" "\012\157\040\055\040\160\157\160\040\164\150\145\040\166\141\154" "\165\145\040\141\156\144\040\163\145\164\040\157\165\164\160\165" "\164\040\162\141\144\151\170\040\050\155\165\163\164\040\142\145" "\040\061\060\054\040\061\066\054\040\070\040\157\162\040\062\051" "\056\012\105\170\141\155\160\154\145\163\072\040\047\144\143\040" "\062\040\062\040\141\144\144\040\160\047\040\055\076\040\064\054" "\040\047\144\143\040\070\040\070\040\155\165\154\040\062\040\062" "\040\053\040\057\040\160\047\040\055\076\040\061\066\000\133\151" "\146\075\106\111\114\105\135\040\133\157\146\075\106\111\114\105" "\135\040\133\151\142\163\075\116\135\040\133\157\142\163\075\116" "\135\040\133\142\163\075\116\135\040\133\143\157\165\156\164\075" "\116\135\040\133\163\153\151\160\075\116\135\012\011\133\163\145" "\145\153\075\116\135\040\133\143\157\156\166\075\156\157\164\162" "\165\156\143\174\156\157\145\162\162\157\162\174\163\171\156\143" "\174\146\163\171\156\143\135\012\012\103\157\160\171\040\141\040" "\146\151\154\145\040\167\151\164\150\040\143\157\156\166\145\162" "\164\151\156\147\040\141\156\144\040\146\157\162\155\141\164\164" "\151\156\147\012\012\011\151\146\075\106\111\114\105\011\011\122" "\145\141\144\040\146\162\157\155\040\106\111\114\105\040\151\156" "\163\164\145\141\144\040\157\146\040\163\164\144\151\156\012\011" "\157\146\075\106\111\114\105\011\011\127\162\151\164\145\040\164" "\157\040\106\111\114\105\040\151\156\163\164\145\141\144\040\157" "\146\040\163\164\144\157\165\164\012\011\142\163\075\116\011\011" "\122\145\141\144\040\141\156\144\040\167\162\151\164\145\040\116" "\040\142\171\164\145\163\040\141\164\040\141\040\164\151\155\145" "\012\011\151\142\163\075\116\011\011\122\145\141\144\040\116\040" "\142\171\164\145\163\040\141\164\040\141\040\164\151\155\145\012" "\011\157\142\163\075\116\011\011\127\162\151\164\145\040\116\040" "\142\171\164\145\163\040\141\164\040\141\040\164\151\155\145\012" "\011\143\157\165\156\164\075\116\011\011\103\157\160\171\040\157" "\156\154\171\040\116\040\151\156\160\165\164\040\142\154\157\143" "\153\163\012\011\163\153\151\160\075\116\011\011\123\153\151\160" "\040\116\040\151\156\160\165\164\040\142\154\157\143\153\163\012" "\011\163\145\145\153\075\116\011\011\123\153\151\160\040\116\040" "\157\165\164\160\165\164\040\142\154\157\143\153\163\012\011\143" "\157\156\166\075\156\157\164\162\165\156\143\011\104\157\156\047" "\164\040\164\162\165\156\143\141\164\145\040\157\165\164\160\165" "\164\040\146\151\154\145\012\011\143\157\156\166\075\156\157\145" "\162\162\157\162\011\103\157\156\164\151\156\165\145\040\141\146" "\164\145\162\040\162\145\141\144\040\145\162\162\157\162\163\012" "\011\143\157\156\166\075\163\171\156\143\011\120\141\144\040\142" "\154\157\143\153\163\040\167\151\164\150\040\172\145\162\157\163" "\012\011\143\157\156\166\075\146\163\171\156\143\011\120\150\171" "\163\151\143\141\154\154\171\040\167\162\151\164\145\040\144\141" "\164\141\040\157\165\164\040\142\145\146\157\162\145\040\146\151" "\156\151\163\150\151\156\147\012\011\143\157\156\166\075\163\167" "\141\142\011\123\167\141\160\040\145\166\145\162\171\040\160\141" "\151\162\040\157\146\040\142\171\164\145\163\012\012\116\040\155" "\141\171\040\142\145\040\163\165\146\146\151\170\145\144\040\142" "\171\040\143\040\050\061\051\054\040\167\040\050\062\051\054\040" "\142\040\050\065\061\062\051\054\040\153\104\040\050\061\060\060" "\060\051\054\040\153\040\050\061\060\062\064\051\054\040\115\104" "\054\040\115\054\040\107\104\054\040\107\000\133\116\135\012\012" "\104\145\141\154\154\157\143\141\164\145\040\165\156\165\163\145" "\144\040\166\151\162\164\165\141\154\040\164\145\162\155\151\156" "\141\154\040\057\144\145\166\057\164\164\171\116\000\133\125\123" "\105\122\135\040\107\122\117\125\120\012\012\104\145\154\145\164" "\145\040\147\162\157\165\160\040\107\122\117\125\120\040\146\162" "\157\155\040\164\150\145\040\163\171\163\164\145\155\040\157\162" "\040\165\163\145\162\040\125\123\105\122\040\146\162\157\155\040" "\147\162\157\165\160\040\107\122\117\125\120\000\125\123\105\122" "\012\012\104\145\154\145\164\145\040\125\123\105\122\040\146\162" "\157\155\040\164\150\145\040\163\171\163\164\145\155\000\133\055" "\161\146\167\162\163\166\135\040\115\117\104\125\114\105\040\133" "\163\171\155\142\157\154\075\166\141\154\165\145\135\056\056\056" "\012\012\011\055\162\011\122\145\155\157\166\145\040\115\117\104" "\125\114\105\040\050\163\164\141\143\153\163\051\040\157\162\040" "\144\157\040\141\165\164\157\143\154\145\141\156\012\011\055\161" "\011\121\165\151\145\164\012\011\055\166\011\126\145\162\142\157" "\163\145\012\011\055\146\011\106\157\162\143\145\012\011\055\167" "\011\127\141\151\164\040\146\157\162\040\165\156\154\157\141\144" "\012\011\055\163\011\122\145\160\157\162\164\040\166\151\141\040" "\163\171\163\154\157\147\040\151\156\163\164\145\141\144\040\157" "\146\040\163\164\144\145\162\162\000\101\104\104\122\105\123\123" "\040\133\127\111\104\124\110\040\133\126\101\114\125\105\135\135" "\012\012\122\145\141\144\057\167\162\151\164\145\040\146\162\157" "\155\040\160\150\171\163\151\143\141\154\040\141\144\144\162\145" "\163\163\012\012\011\101\104\104\122\105\123\123\011\101\144\144" "\162\145\163\163\040\164\157\040\141\143\164\040\165\160\157\156" "\012\011\127\111\104\124\110\011\127\151\144\164\150\040\050\070" "\057\061\066\057\056\056\056\051\012\011\126\101\114\125\105\011" "\104\141\164\141\040\164\157\040\142\145\040\167\162\151\164\164" "\145\156\000\133\055\120\153\155\150\141\151\135\040\133\055\102" "\040\123\111\132\105\135\040\133\106\111\114\105\123\131\123\124" "\105\115\135\056\056\056\012\012\120\162\151\156\164\040\146\151" "\154\145\163\171\163\164\145\155\040\165\163\141\147\145\040\163" "\164\141\164\151\163\164\151\143\163\012\012\011\055\120\011\120" "\117\123\111\130\040\157\165\164\160\165\164\040\146\157\162\155" "\141\164\012\011\055\153\011\061\060\062\064\055\142\171\164\145" "\040\142\154\157\143\153\163\040\050\144\145\146\141\165\154\164" "\051\012\011\055\155\011\061\115\055\142\171\164\145\040\142\154" "\157\143\153\163\012\011\055\150\011\110\165\155\141\156\040\162" "\145\141\144\141\142\154\145\040\050\145\056\147\056\040\061\113" "\040\062\064\063\115\040\062\107\051\012\011\055\141\011\123\150" "\157\167\040\141\154\154\040\146\151\154\145\163\171\163\164\145" "\155\163\012\011\055\151\011\111\156\157\144\145\163\012\011\055" "\102\040\123\111\132\105\011\102\154\157\143\153\163\151\172\145" "\000\103\114\111\105\116\124\137\111\106\101\103\105\133\054\103" "\114\111\105\116\124\137\111\106\101\103\105\062\135\056\056\056" "\040\123\105\122\126\105\122\137\111\106\101\103\105\040\133\123" "\105\122\126\105\122\137\111\120\135\012\012\122\145\154\141\171" "\040\104\110\103\120\040\162\145\161\165\145\163\164\163\040\142" "\145\164\167\145\145\156\040\143\154\151\145\156\164\163\040\141" "\156\144\040\163\145\162\166\145\162\000\133\055\141\142\102\144" "\151\116\161\162\124\163\164\167\135\040\133\055\114\040\114\101" "\102\105\114\135\040\133\055\123\040\106\111\114\105\135\040\133" "\055\125\040\114\111\116\105\123\135\040\106\111\114\105\061\040" "\106\111\114\105\062\012\012\103\157\155\160\141\162\145\040\146" "\151\154\145\163\040\154\151\156\145\040\142\171\040\154\151\156" "\145\040\141\156\144\040\157\165\164\160\165\164\040\164\150\145" "\040\144\151\146\146\145\162\145\156\143\145\163\040\142\145\164" "\167\145\145\156\040\164\150\145\155\056\012\124\150\151\163\040" "\151\155\160\154\145\155\145\156\164\141\164\151\157\156\040\163" "\165\160\160\157\162\164\163\040\165\156\151\146\151\145\144\040" "\144\151\146\146\163\040\157\156\154\171\056\012\012\011\055\141" "\011\124\162\145\141\164\040\141\154\154\040\146\151\154\145\163" "\040\141\163\040\164\145\170\164\012\011\055\142\011\111\147\156" "\157\162\145\040\143\150\141\156\147\145\163\040\151\156\040\164" "\150\145\040\141\155\157\165\156\164\040\157\146\040\167\150\151" "\164\145\163\160\141\143\145\012\011\055\102\011\111\147\156\157" "\162\145\040\143\150\141\156\147\145\163\040\167\150\157\163\145" "\040\154\151\156\145\163\040\141\162\145\040\141\154\154\040\142" "\154\141\156\153\012\011\055\144\011\124\162\171\040\150\141\162" "\144\040\164\157\040\146\151\156\144\040\141\040\163\155\141\154" "\154\145\162\040\163\145\164\040\157\146\040\143\150\141\156\147" "\145\163\012\011\055\151\011\111\147\156\157\162\145\040\143\141" "\163\145\040\144\151\146\146\145\162\145\156\143\145\163\012\011" "\055\114\011\125\163\145\040\114\101\102\105\114\040\151\156\163" "\164\145\141\144\040\157\146\040\164\150\145\040\146\151\154\145" "\156\141\155\145\040\151\156\040\164\150\145\040\165\156\151\146" "\151\145\144\040\150\145\141\144\145\162\012\011\055\116\011\124" "\162\145\141\164\040\141\142\163\145\156\164\040\146\151\154\145" "\163\040\141\163\040\145\155\160\164\171\012\011\055\161\011\117" "\165\164\160\165\164\040\157\156\154\171\040\167\150\145\164\150" "\145\162\040\146\151\154\145\163\040\144\151\146\146\145\162\012" "\011\055\162\011\122\145\143\165\162\163\145\012\011\055\123\011" "\123\164\141\162\164\040\167\151\164\150\040\106\111\114\105\040" "\167\150\145\156\040\143\157\155\160\141\162\151\156\147\040\144" "\151\162\145\143\164\157\162\151\145\163\012\011\055\124\011\115" "\141\153\145\040\164\141\142\163\040\154\151\156\145\040\165\160" "\040\142\171\040\160\162\145\146\151\170\151\156\147\040\141\040" "\164\141\142\040\167\150\145\156\040\156\145\143\145\163\163\141" "\162\171\012\011\055\163\011\122\145\160\157\162\164\040\167\150" "\145\156\040\164\167\157\040\146\151\154\145\163\040\141\162\145" "\040\164\150\145\040\163\141\155\145\012\011\055\164\011\105\170" "\160\141\156\144\040\164\141\142\163\040\164\157\040\163\160\141" "\143\145\163\040\151\156\040\157\165\164\160\165\164\012\011\055" "\125\011\117\165\164\160\165\164\040\114\111\116\105\123\040\154" "\151\156\145\163\040\157\146\040\143\157\156\164\145\170\164\012" "\011\055\167\011\111\147\156\157\162\145\040\141\154\154\040\167" "\150\151\164\145\163\160\141\143\145\000\106\111\114\105\116\101" "\115\105\012\012\123\164\162\151\160\040\156\157\156\055\144\151" "\162\145\143\164\157\162\171\040\163\165\146\146\151\170\040\146" "\162\157\155\040\106\111\114\105\116\101\115\105\000\133\055\143" "\135\040\133\055\156\040\114\105\126\105\114\135\040\133\055\163" "\040\123\111\132\105\135\012\012\120\162\151\156\164\040\157\162" "\040\143\157\156\164\162\157\154\040\164\150\145\040\153\145\162" "\156\145\154\040\162\151\156\147\040\142\165\146\146\145\162\012" "\012\011\055\143\011\011\103\154\145\141\162\040\162\151\156\147" "\040\142\165\146\146\145\162\040\141\146\164\145\162\040\160\162" "\151\156\164\151\156\147\012\011\055\156\040\114\105\126\105\114" "\011\123\145\164\040\143\157\156\163\157\154\145\040\154\157\147" "\147\151\156\147\040\154\145\166\145\154\012\011\055\163\040\123" "\111\132\105\011\011\102\165\146\146\145\162\040\163\151\172\145" "\000\133\055\144\166\163\135\040\133\055\143\040\103\117\116\106" "\106\111\114\105\135\040\133\055\164\040\124\124\114\137\123\105" "\103\135\040\133\055\160\040\120\117\122\124\135\040\133\055\151" "\040\101\104\104\122\135\012\012\123\155\141\154\154\040\163\164" "\141\164\151\143\040\104\116\123\040\163\145\162\166\145\162\040" "\144\141\145\155\157\156\012\012\011\055\143\040\106\111\114\105" "\011\103\157\156\146\151\147\040\146\151\154\145\012\011\055\164" "\040\123\105\103\011\124\124\114\012\011\055\160\040\120\117\122" "\124\011\114\151\163\164\145\156\040\157\156\040\120\117\122\124" "\012\011\055\151\040\101\104\104\122\011\114\151\163\164\145\156" "\040\157\156\040\101\104\104\122\012\011\055\144\011\104\141\145" "\155\157\156\151\172\145\012\011\055\166\011\126\145\162\142\157" "\163\145\012\011\055\163\011\123\145\156\144\040\163\165\143\143" "\145\163\163\146\165\154\040\162\145\160\154\151\145\163\040\157" "\156\154\171\056\040\125\163\145\040\164\150\151\163\040\151\146" "\040\171\157\165\040\167\141\156\164\012\011\011\164\157\040\165" "\163\145\040\057\145\164\143\057\162\145\163\157\154\166\056\143" "\157\156\146\040\167\151\164\150\040\164\167\157\040\156\141\155" "\145\163\145\162\166\145\162\040\154\151\156\145\163\072\012\011" "\011\011\156\141\155\145\163\145\162\166\145\162\040\104\116\123" "\104\137\123\105\122\126\105\122\012\011\011\011\156\141\155\145" "\163\145\162\166\145\162\040\116\117\122\115\101\114\137\104\116" "\123\137\123\105\122\126\105\122\000\010\000\133\055\165\144\135" "\040\133\106\111\114\105\135\012\012\103\157\156\166\145\162\164" "\040\106\111\114\105\040\151\156\055\160\154\141\143\145\040\146" "\162\157\155\040\104\117\123\040\164\157\040\125\156\151\170\040" "\146\157\162\155\141\164\056\012\127\150\145\156\040\156\157\040" "\146\151\154\145\040\151\163\040\147\151\166\145\156\054\040\165" "\163\145\040\163\164\144\151\156\057\163\164\144\157\165\164\056" "\012\012\011\055\165\011\144\157\163\062\165\156\151\170\012\011" "\055\144\011\165\156\151\170\062\144\157\163\000\133\055\141\110" "\114\144\143\154\163\170\150\155\153\135\040\133\106\111\114\105" "\135\056\056\056\012\012\123\165\155\155\141\162\151\172\145\040" "\144\151\163\153\040\163\160\141\143\145\040\165\163\145\144\040" "\146\157\162\040\145\141\143\150\040\106\111\114\105\040\141\156" "\144\057\157\162\040\144\151\162\145\143\164\157\162\171\012\012" "\011\055\141\011\123\150\157\167\040\146\151\154\145\040\163\151" "\172\145\163\040\164\157\157\012\011\055\114\011\106\157\154\154" "\157\167\040\141\154\154\040\163\171\155\154\151\156\153\163\012" "\011\055\110\011\106\157\154\154\157\167\040\163\171\155\154\151" "\156\153\163\040\157\156\040\143\157\155\155\141\156\144\040\154" "\151\156\145\012\011\055\144\040\116\011\114\151\155\151\164\040" "\157\165\164\160\165\164\040\164\157\040\144\151\162\145\143\164" "\157\162\151\145\163\040\050\141\156\144\040\146\151\154\145\163" "\040\167\151\164\150\040\055\141\051\040\157\146\040\144\145\160" "\164\150\040\074\040\116\012\011\055\143\011\123\150\157\167\040" "\147\162\141\156\144\040\164\157\164\141\154\012\011\055\154\011" "\103\157\165\156\164\040\163\151\172\145\163\040\155\141\156\171" "\040\164\151\155\145\163\040\151\146\040\150\141\162\144\040\154" "\151\156\153\145\144\012\011\055\163\011\104\151\163\160\154\141" "\171\040\157\156\154\171\040\141\040\164\157\164\141\154\040\146" "\157\162\040\145\141\143\150\040\141\162\147\165\155\145\156\164" "\012\011\055\170\011\123\153\151\160\040\144\151\162\145\143\164" "\157\162\151\145\163\040\157\156\040\144\151\146\146\145\162\145" "\156\164\040\146\151\154\145\163\171\163\164\145\155\163\012\011" "\055\150\011\123\151\172\145\163\040\151\156\040\150\165\155\141" "\156\040\162\145\141\144\141\142\154\145\040\146\157\162\155\141" "\164\040\050\145\056\147\056\054\040\061\113\040\062\064\063\115" "\040\062\107\051\012\011\055\155\011\123\151\172\145\163\040\151" "\156\040\155\145\147\141\142\171\164\145\163\012\011\055\153\011" "\123\151\172\145\163\040\151\156\040\153\151\154\157\142\171\164" "\145\163\040\050\144\145\146\141\165\154\164\051\000\076\040\153" "\145\171\155\141\160\012\012\120\162\151\156\164\040\141\040\142" "\151\156\141\162\171\040\153\145\171\142\157\141\162\144\040\164" "\162\141\156\163\154\141\164\151\157\156\040\164\141\142\154\145" "\040\164\157\040\163\164\144\157\165\164\000\133\055\162\174\055" "\141\135\040\133\055\146\040\114\105\101\123\105\106\111\114\105" "\135\012\012\104\151\163\160\154\141\171\040\104\110\103\120\040" "\154\145\141\163\145\163\040\147\162\141\156\164\145\144\040\142" "\171\040\165\144\150\143\160\144\012\012\011\055\146\054\055\055" "\146\151\154\145\075\106\111\114\105\011\114\145\141\163\145\040" "\146\151\154\145\012\011\055\162\054\055\055\162\145\155\141\151" "\156\151\156\147\011\123\150\157\167\040\162\145\155\141\151\156" "\151\156\147\040\164\151\155\145\012\011\055\141\054\055\055\141" "\142\163\157\154\165\164\145\011\123\150\157\167\040\145\170\160" "\151\162\141\164\151\157\156\040\164\151\155\145\000\133\055\156" "\145\105\135\040\133\101\122\107\135\056\056\056\012\012\120\162" "\151\156\164\040\164\150\145\040\163\160\145\143\151\146\151\145" "\144\040\101\122\107\163\040\164\157\040\163\164\144\157\165\164" "\012\012\011\055\156\011\123\165\160\160\162\145\163\163\040\164" "\162\141\151\154\151\156\147\040\156\145\167\154\151\156\145\012" "\011\055\145\011\111\156\164\145\162\160\162\145\164\040\142\141" "\143\153\163\154\141\163\150\040\145\163\143\141\160\145\163\040" "\050\151\056\145\056\054\040\134\164\075\164\141\142\051\012\011" "\055\105\011\104\157\156\047\164\040\151\156\164\145\162\160\162" "\145\164\040\142\141\143\153\163\154\141\163\150\040\145\163\143" "\141\160\145\163\040\050\144\145\146\141\165\154\164\051\000\000" "\010\000\133\055\164\135\040\133\055\124\135\040\133\104\105\126" "\111\103\105\135\012\012\105\152\145\143\164\040\104\105\126\111" "\103\105\040\157\162\040\144\145\146\141\165\154\164\040\057\144" "\145\166\057\143\144\162\157\155\012\012\011\055\163\011\123\103" "\123\111\040\144\145\166\151\143\145\012\011\055\164\011\103\154" "\157\163\145\040\164\162\141\171\012\011\055\124\011\117\160\145" "\156\057\143\154\157\163\145\040\164\162\141\171\040\050\164\157" "\147\147\154\145\051\000\133\055\151\165\135\040\133\055\135\040" "\133\156\141\155\145\075\166\141\154\165\145\135\056\056\056\040" "\133\120\122\117\107\040\101\122\107\123\135\012\012\120\162\151" "\156\164\040\164\150\145\040\143\165\162\162\145\156\164\040\145" "\156\166\151\162\157\156\155\145\156\164\040\157\162\040\162\165" "\156\040\120\122\117\107\040\141\146\164\145\162\040\163\145\164" "\164\151\156\147\040\165\160\012\164\150\145\040\163\160\145\143" "\151\146\151\145\144\040\145\156\166\151\162\157\156\155\145\156" "\164\012\012\011\055\054\040\055\151\011\123\164\141\162\164\040" "\167\151\164\150\040\141\156\040\145\155\160\164\171\040\145\156" "\166\151\162\157\156\155\145\156\164\012\011\055\165\011\122\145" "\155\157\166\145\040\166\141\162\151\141\142\154\145\040\146\162" "\157\155\040\164\150\145\040\145\156\166\151\162\157\156\155\145" "\156\164\000\104\111\122\040\120\122\117\107\040\101\122\107\123" "\012\012\123\145\164\040\166\141\162\151\157\165\163\040\145\156" "\166\151\162\157\156\155\145\156\164\040\166\141\162\151\141\142" "\154\145\163\040\141\163\040\163\160\145\143\151\146\151\145\144" "\040\142\171\040\146\151\154\145\163\012\151\156\040\164\150\145" "\040\144\151\162\145\143\164\157\162\171\040\104\111\122\054\040" "\162\165\156\040\120\122\117\107\000\125\123\105\122\040\120\122" "\117\107\040\101\122\107\123\012\012\123\145\164\040\044\125\111" "\104\040\164\157\040\125\123\105\122\047\163\040\165\151\144\040" "\141\156\144\040\044\107\111\104\040\164\157\040\125\123\105\122" "\047\163\040\147\151\144\054\040\162\165\156\040\120\122\117\107" "\000\133\055\142\135\040\133\055\151\040\111\106\101\103\105\135" "\040\133\055\160\040\141\141\072\142\142\072\143\143\072\144\144" "\133\072\145\145\072\146\146\135\057\141\056\142\056\143\056\144" "\135\040\115\101\103\012\012\123\145\156\144\040\141\040\155\141" "\147\151\143\040\160\141\143\153\145\164\040\164\157\040\167\141" "\153\145\040\165\160\040\163\154\145\145\160\151\156\147\040\155" "\141\143\150\151\156\145\163\056\012\115\101\103\040\155\165\163" "\164\040\142\145\040\141\040\163\164\141\164\151\157\156\040\141" "\144\144\162\145\163\163\040\050\060\060\072\061\061\072\062\062" "\072\063\063\072\064\064\072\065\065\051\040\157\162\012\141\040" "\150\157\163\164\156\141\155\145\040\167\151\164\150\040\141\040" "\153\156\157\167\156\040\047\145\164\150\145\162\163\047\040\145" "\156\164\162\171\056\012\012\011\055\142\011\011\102\162\157\141" "\144\143\141\163\164\040\164\150\145\040\160\141\143\153\145\164" "\012\011\055\151\040\111\106\101\103\105\011\111\156\164\145\162" "\146\141\143\145\040\164\157\040\165\163\145\040\050\144\145\146" "\141\165\154\164\040\145\164\150\060\051\012\011\055\160\040\120" "\101\123\123\127\117\122\104\011\101\160\160\145\156\144\040\146" "\157\165\162\040\157\162\040\163\151\170\040\142\171\164\145\040" "\120\101\123\123\127\117\122\104\040\164\157\040\164\150\145\040" "\160\141\143\153\145\164\000\133\055\151\135\040\133\055\164\040" "\116\135\040\133\106\111\114\105\135\056\056\056\012\012\103\157" "\156\166\145\162\164\040\164\141\142\163\040\164\157\040\163\160" "\141\143\145\163\054\040\167\162\151\164\151\156\147\040\164\157" "\040\163\164\144\157\165\164\012\012\011\055\151\054\055\055\151" "\156\151\164\151\141\154\011\104\157\156\047\164\040\143\157\156" "\166\145\162\164\040\164\141\142\163\040\141\146\164\145\162\040" "\156\157\156\040\142\154\141\156\153\163\012\011\055\164\054\055" "\055\164\141\142\163\075\116\011\124\141\142\163\164\157\160\163" "\040\145\166\145\162\171\040\116\040\143\150\141\162\163\000\105" "\130\120\122\105\123\123\111\117\116\012\012\120\162\151\156\164" "\040\164\150\145\040\166\141\154\165\145\040\157\146\040\105\130" "\120\122\105\123\123\111\117\116\040\164\157\040\163\164\144\157" "\165\164\012\012\105\130\120\122\105\123\123\111\117\116\040\155" "\141\171\040\142\145\072\012\011\101\122\107\061\040\174\040\101" "\122\107\062\011\101\122\107\061\040\151\146\040\151\164\040\151" "\163\040\156\145\151\164\150\145\162\040\156\165\154\154\040\156" "\157\162\040\060\054\040\157\164\150\145\162\167\151\163\145\040" "\101\122\107\062\012\011\101\122\107\061\040\046\040\101\122\107" "\062\011\101\122\107\061\040\151\146\040\156\145\151\164\150\145" "\162\040\141\162\147\165\155\145\156\164\040\151\163\040\156\165" "\154\154\040\157\162\040\060\054\040\157\164\150\145\162\167\151" "\163\145\040\060\012\011\101\122\107\061\040\074\040\101\122\107" "\062\011\061\040\151\146\040\101\122\107\061\040\151\163\040\154" "\145\163\163\040\164\150\141\156\040\101\122\107\062\054\040\145" "\154\163\145\040\060\056\040\123\151\155\151\154\141\162\154\171" "\072\012\011\101\122\107\061\040\074\075\040\101\122\107\062\012" "\011\101\122\107\061\040\075\040\101\122\107\062\012\011\101\122" "\107\061\040\041\075\040\101\122\107\062\012\011\101\122\107\061" "\040\076\075\040\101\122\107\062\012\011\101\122\107\061\040\076" "\040\101\122\107\062\012\011\101\122\107\061\040\053\040\101\122" "\107\062\011\123\165\155\040\157\146\040\101\122\107\061\040\141" "\156\144\040\101\122\107\062\056\040\123\151\155\151\154\141\162" "\154\171\072\012\011\101\122\107\061\040\055\040\101\122\107\062" "\012\011\101\122\107\061\040\052\040\101\122\107\062\012\011\101" "\122\107\061\040\057\040\101\122\107\062\012\011\101\122\107\061" "\040\045\040\101\122\107\062\012\011\123\124\122\111\116\107\040" "\072\040\122\105\107\105\130\120\011\011\101\156\143\150\157\162" "\145\144\040\160\141\164\164\145\162\156\040\155\141\164\143\150" "\040\157\146\040\122\105\107\105\130\120\040\151\156\040\123\124" "\122\111\116\107\012\011\155\141\164\143\150\040\123\124\122\111" "\116\107\040\122\105\107\105\130\120\011\123\141\155\145\040\141" "\163\040\123\124\122\111\116\107\040\072\040\122\105\107\105\130" "\120\012\011\163\165\142\163\164\162\040\123\124\122\111\116\107" "\040\120\117\123\040\114\105\116\107\124\110\040\123\165\142\163" "\164\162\151\156\147\040\157\146\040\123\124\122\111\116\107\054" "\040\120\117\123\040\143\157\165\156\164\145\144\040\146\162\157" "\155\040\061\012\011\151\156\144\145\170\040\123\124\122\111\116" "\107\040\103\110\101\122\123\011\111\156\144\145\170\040\151\156" "\040\123\124\122\111\116\107\040\167\150\145\162\145\040\141\156" "\171\040\103\110\101\122\123\040\151\163\040\146\157\165\156\144" "\054\040\157\162\040\060\012\011\154\145\156\147\164\150\040\123" "\124\122\111\116\107\011\011\114\145\156\147\164\150\040\157\146" "\040\123\124\122\111\116\107\012\011\161\165\157\164\145\040\124" "\117\113\105\116\011\011\111\156\164\145\162\160\162\145\164\040" "\124\117\113\105\116\040\141\163\040\141\040\163\164\162\151\156" "\147\054\040\145\166\145\156\040\151\146\012\011\011\011\011\151" "\164\040\151\163\040\141\040\153\145\171\167\157\162\144\040\154" "\151\153\145\040\047\155\141\164\143\150\047\040\157\162\040\141" "\156\012\011\011\011\011\157\160\145\162\141\164\157\162\040\154" "\151\153\145\040\047\057\047\012\011\050\105\130\120\122\105\123" "\123\111\117\116\051\011\011\126\141\154\165\145\040\157\146\040" "\105\130\120\122\105\123\123\111\117\116\012\012\102\145\167\141" "\162\145\040\164\150\141\164\040\155\141\156\171\040\157\160\145" "\162\141\164\157\162\163\040\156\145\145\144\040\164\157\040\142" "\145\040\145\163\143\141\160\145\144\040\157\162\040\161\165\157" "\164\145\144\040\146\157\162\040\163\150\145\154\154\163\056\012" "\103\157\155\160\141\162\151\163\157\156\163\040\141\162\145\040" "\141\162\151\164\150\155\145\164\151\143\040\151\146\040\142\157" "\164\150\040\101\122\107\163\040\141\162\145\040\156\165\155\142" "\145\162\163\054\040\145\154\163\145\012\154\145\170\151\143\157" "\147\162\141\160\150\151\143\141\154\056\040\120\141\164\164\145" "\162\156\040\155\141\164\143\150\145\163\040\162\145\164\165\162" "\156\040\164\150\145\040\163\164\162\151\156\147\040\155\141\164" "\143\150\145\144\040\142\145\164\167\145\145\156\012\134\050\040" "\141\156\144\040\134\051\040\157\162\040\156\165\154\154\073\040" "\151\146\040\134\050\040\141\156\144\040\134\051\040\141\162\145" "\040\156\157\164\040\165\163\145\144\054\040\164\150\145\171\040" "\162\145\164\165\162\156\040\164\150\145\040\156\165\155\142\145" "\162\012\157\146\040\143\150\141\162\141\143\164\145\162\163\040" "\155\141\164\143\150\145\144\040\157\162\040\060\056\000\133\055" "\146\151\167\135\040\133\055\142\040\101\104\104\122\135\040\133" "\123\124\122\111\116\107\135\012\012\120\162\157\166\151\144\145" "\040\146\141\153\145\040\151\144\145\156\164\040\050\141\165\164" "\150\051\040\163\145\162\166\151\143\145\012\012\011\055\146\011" "\122\165\156\040\151\156\040\146\157\162\145\147\162\157\165\156" "\144\012\011\055\151\011\111\156\145\164\144\040\155\157\144\145" "\012\011\055\167\011\111\156\145\164\144\040\047\167\141\151\164" "\047\040\155\157\144\145\012\011\055\142\040\101\104\104\122\011" "\102\151\156\144\040\164\157\040\163\160\145\143\151\146\151\145" "\144\040\141\144\144\162\145\163\163\012\011\123\124\122\111\116" "\107\011\111\144\145\156\164\040\141\156\163\167\145\162\040\163" "\164\162\151\156\147\040\050\144\145\146\141\165\154\164\072\040" "\156\157\142\157\144\171\051\000\012\012\122\145\164\165\162\156" "\040\141\156\040\145\170\151\164\040\143\157\144\145\040\157\146" "\040\106\101\114\123\105\040\050\061\051\000\133\117\120\124\111" "\117\116\123\135\040\133\115\117\104\105\135\012\012\123\150\157" "\167\040\141\156\144\040\155\157\144\151\146\171\040\146\162\141" "\155\145\040\142\165\146\146\145\162\040\163\145\164\164\151\156" "\147\163\000\055\163\040\111\115\107\106\111\114\105\040\133\055" "\143\135\040\133\055\144\040\104\105\126\135\040\133\055\151\040" "\111\116\111\106\111\114\105\135\040\133\055\146\040\103\115\104" "\135\012\012\011\055\163\011\111\155\141\147\145\012\011\055\143" "\011\110\151\144\145\040\143\165\162\163\157\162\012\011\055\144" "\011\106\162\141\155\145\142\165\146\146\145\162\040\144\145\166" "\151\143\145\040\050\144\145\146\141\165\154\164\040\057\144\145" "\166\057\146\142\060\051\012\011\055\151\011\103\157\156\146\151" "\147\040\146\151\154\145\040\050\166\141\162\075\166\141\154\165" "\145\051\072\012\011\011\011\102\101\122\137\114\105\106\124\054" "\102\101\122\137\124\117\120\054\102\101\122\137\127\111\104\124" "\110\054\102\101\122\137\110\105\111\107\110\124\012\011\011\011" "\102\101\122\137\122\054\102\101\122\137\107\054\102\101\122\137" "\102\012\011\055\146\011\103\157\156\164\162\157\154\040\160\151" "\160\145\040\050\145\154\163\145\040\145\170\151\164\040\141\146" "\164\145\162\040\144\162\141\167\151\156\147\040\151\155\141\147" "\145\051\012\011\011\011\143\157\155\155\141\156\144\163\072\040" "\047\116\116\047\040\050\045\040\146\157\162\040\160\162\157\147" "\162\145\163\163\040\142\141\162\051\040\157\162\040\047\145\170" "\151\164\047\000\104\105\126\111\103\105\012\012\106\157\162\143" "\145\040\146\154\157\160\160\171\040\144\151\163\153\040\144\162" "\151\166\145\040\164\157\040\144\145\164\145\143\164\040\144\151" "\163\153\040\143\150\141\156\147\145\000\133\055\156\135\040\104" "\105\126\111\103\105\012\012\106\157\162\155\141\164\040\146\154" "\157\160\160\171\040\144\151\163\153\012\012\011\055\156\011\104" "\157\156\047\164\040\166\145\162\151\146\171\040\141\146\164\145" "\162\040\146\157\162\155\141\164\000\133\055\165\154\135\040\133" "\055\103\040\103\131\114\111\116\104\105\122\123\135\040\133\055" "\110\040\110\105\101\104\123\135\040\133\055\123\040\123\105\103" "\124\117\122\123\135\040\133\055\142\040\123\123\132\135\040\104" "\111\123\113\012\012\103\150\141\156\147\145\040\160\141\162\164" "\151\164\151\157\156\040\164\141\142\154\145\012\012\011\055\165" "\011\011\123\164\141\162\164\040\141\156\144\040\105\156\144\040" "\141\162\145\040\151\156\040\163\145\143\164\157\162\163\040\050" "\151\156\163\164\145\141\144\040\157\146\040\143\171\154\151\156" "\144\145\162\163\051\012\011\055\154\011\011\123\150\157\167\040" "\160\141\162\164\151\164\151\157\156\040\164\141\142\154\145\040" "\146\157\162\040\145\141\143\150\040\104\111\123\113\054\040\164" "\150\145\156\040\145\170\151\164\012\011\055\142\040\062\060\064" "\070\011\011\050\146\157\162\040\143\145\162\164\141\151\156\040" "\115\117\040\144\151\163\153\163\051\040\165\163\145\040\062\060" "\064\070\055\142\171\164\145\040\163\145\143\164\157\162\163\012" "\011\055\103\040\103\131\114\111\116\104\105\122\123\011\123\145" "\164\040\156\165\155\142\145\162\040\157\146\040\143\171\154\151" "\156\144\145\162\163\057\150\145\141\144\163\057\163\145\143\164" "\157\162\163\012\011\055\110\040\110\105\101\104\123\012\011\055" "\123\040\123\105\103\124\117\122\123\000\012\012\107\145\164\040" "\141\143\164\151\166\145\040\143\157\156\163\157\154\145\000\010" "\000\133\055\110\114\135\040\133\120\101\124\110\135\056\056\056" "\040\133\117\120\124\111\117\116\123\135\040\133\101\103\124\111" "\117\116\123\135\012\012\123\145\141\162\143\150\040\146\157\162" "\040\146\151\154\145\163\040\141\156\144\040\160\145\162\146\157" "\162\155\040\141\143\164\151\157\156\163\040\157\156\040\164\150" "\145\155\056\012\106\151\162\163\164\040\146\141\151\154\145\144" "\040\141\143\164\151\157\156\040\163\164\157\160\163\040\160\162" "\157\143\145\163\163\151\156\147\040\157\146\040\143\165\162\162" "\145\156\164\040\146\151\154\145\056\012\104\145\146\141\165\154" "\164\163\072\040\120\101\124\110\040\151\163\040\143\165\162\162" "\145\156\164\040\144\151\162\145\143\164\157\162\171\054\040\141" "\143\164\151\157\156\040\151\163\040\047\055\160\162\151\156\164" "\047\012\012\011\055\114\054\055\146\157\154\154\157\167\011\106" "\157\154\154\157\167\040\163\171\155\154\151\156\153\163\012\011" "\055\110\011\011\056\056\056\157\156\040\143\157\155\155\141\156" "\144\040\154\151\156\145\040\157\156\154\171\012\011\055\170\144" "\145\166\011\011\104\157\156\047\164\040\144\145\163\143\145\156" "\144\040\144\151\162\145\143\164\157\162\151\145\163\040\157\156" "\040\157\164\150\145\162\040\146\151\154\145\163\171\163\164\145" "\155\163\012\011\055\155\141\170\144\145\160\164\150\040\116\011" "\104\145\163\143\145\156\144\040\141\164\040\155\157\163\164\040" "\116\040\154\145\166\145\154\163\056\040\055\155\141\170\144\145" "\160\164\150\040\060\040\141\160\160\154\151\145\163\012\011\011" "\011\141\143\164\151\157\156\163\040\164\157\040\143\157\155\155" "\141\156\144\040\154\151\156\145\040\141\162\147\165\155\145\156" "\164\163\040\157\156\154\171\012\011\055\155\151\156\144\145\160" "\164\150\040\116\011\104\157\156\047\164\040\141\143\164\040\157" "\156\040\146\151\162\163\164\040\116\040\154\145\166\145\154\163" "\012\011\055\144\145\160\164\150\011\011\101\143\164\040\157\156" "\040\144\151\162\145\143\164\157\162\171\040\052\141\146\164\145" "\162\052\040\164\162\141\166\145\162\163\151\156\147\040\151\164" "\012\012\101\143\164\151\157\156\163\072\012\011\050\040\101\103" "\124\111\117\116\123\040\051\011\107\162\157\165\160\040\141\143" "\164\151\157\156\163\040\146\157\162\040\055\157\040\057\040\055" "\141\012\011\041\040\101\103\124\011\011\111\156\166\145\162\164" "\040\101\103\124\047\163\040\163\165\143\143\145\163\163\057\146" "\141\151\154\165\162\145\012\011\101\103\124\061\040\133\055\141" "\135\040\101\103\124\062\011\111\146\040\101\103\124\061\040\146" "\141\151\154\163\054\040\163\164\157\160\054\040\145\154\163\145" "\040\144\157\040\101\103\124\062\012\011\101\103\124\061\040\055" "\157\040\101\103\124\062\011\111\146\040\101\103\124\061\040\163" "\165\143\143\145\145\144\163\054\040\163\164\157\160\054\040\145" "\154\163\145\040\144\157\040\101\103\124\062\012\011\011\011\116" "\157\164\145\072\040\055\141\040\150\141\163\040\150\151\147\150" "\145\162\040\160\162\151\157\162\151\164\171\040\164\150\141\156" "\040\055\157\012\011\055\156\141\155\145\040\120\101\124\124\105" "\122\116\011\115\141\164\143\150\040\146\151\154\145\040\156\141" "\155\145\040\050\167\057\157\040\144\151\162\145\143\164\157\162" "\171\040\156\141\155\145\051\040\164\157\040\120\101\124\124\105" "\122\116\012\011\055\151\156\141\155\145\040\120\101\124\124\105" "\122\116\011\103\141\163\145\040\151\156\163\145\156\163\151\164" "\151\166\145\040\055\156\141\155\145\012\011\055\160\141\164\150" "\040\120\101\124\124\105\122\116\011\115\141\164\143\150\040\160" "\141\164\150\040\164\157\040\120\101\124\124\105\122\116\012\011" "\055\151\160\141\164\150\040\120\101\124\124\105\122\116\011\103" "\141\163\145\040\151\156\163\145\156\163\151\164\151\166\145\040" "\055\160\141\164\150\012\011\055\162\145\147\145\170\040\120\101" "\124\124\105\122\116\011\115\141\164\143\150\040\160\141\164\150" "\040\164\157\040\162\145\147\145\170\040\120\101\124\124\105\122" "\116\012\011\055\164\171\160\145\040\130\011\011\106\151\154\145" "\040\164\171\160\145\040\151\163\040\130\040\050\157\156\145\040" "\157\146\072\040\146\054\144\054\154\054\142\054\143\054\056\056" "\056\051\012\011\055\160\145\162\155\040\115\101\123\113\011\101" "\164\040\154\145\141\163\164\040\157\156\145\040\155\141\163\153" "\040\142\151\164\040\050\053\115\101\123\113\051\054\040\141\154" "\154\040\142\151\164\163\040\050\055\115\101\123\113\051\054\012" "\011\011\011\157\162\040\145\170\141\143\164\154\171\040\115\101" "\123\113\040\142\151\164\163\040\141\162\145\040\163\145\164\040" "\151\156\040\146\151\154\145\047\163\040\155\157\144\145\012\011" "\055\155\164\151\155\145\040\104\101\131\123\011\155\164\151\155" "\145\040\151\163\040\147\162\145\141\164\145\162\040\164\150\141" "\156\040\050\053\116\051\054\040\154\145\163\163\040\164\150\141" "\156\040\050\055\116\051\054\012\011\011\011\157\162\040\145\170" "\141\143\164\154\171\040\116\040\144\141\171\163\040\151\156\040" "\164\150\145\040\160\141\163\164\012\011\055\155\155\151\156\040" "\115\111\116\123\011\155\164\151\155\145\040\151\163\040\147\162" "\145\141\164\145\162\040\164\150\141\156\040\050\053\116\051\054" "\040\154\145\163\163\040\164\150\141\156\040\050\055\116\051\054" "\012\011\011\011\157\162\040\145\170\141\143\164\154\171\040\116" "\040\155\151\156\165\164\145\163\040\151\156\040\164\150\145\040" "\160\141\163\164\012\011\055\156\145\167\145\162\040\106\111\114" "\105\011\155\164\151\155\145\040\151\163\040\155\157\162\145\040" "\162\145\143\145\156\164\040\164\150\141\156\040\106\111\114\105" "\047\163\012\011\055\151\156\165\155\040\116\011\011\106\151\154" "\145\040\150\141\163\040\151\156\157\144\145\040\156\165\155\142" "\145\162\040\116\012\011\055\165\163\145\162\040\116\101\115\105" "\057\111\104\011\106\151\154\145\040\151\163\040\157\167\156\145" "\144\040\142\171\040\147\151\166\145\156\040\165\163\145\162\012" "\011\055\147\162\157\165\160\040\116\101\115\105\057\111\104\011" "\106\151\154\145\040\151\163\040\157\167\156\145\144\040\142\171" "\040\147\151\166\145\156\040\147\162\157\165\160\012\011\055\163" "\151\172\145\040\116\133\142\143\153\135\011\106\151\154\145\040" "\163\151\172\145\040\151\163\040\116\040\050\143\072\142\171\164" "\145\163\054\153\072\153\142\171\164\145\163\054\142\072\065\061" "\062\040\142\171\164\145\163\050\144\145\146\056\051\051\012\011" "\011\011\053\057\055\116\072\040\146\151\154\145\040\163\151\172" "\145\040\151\163\040\142\151\147\147\145\162\057\163\155\141\154" "\154\145\162\040\164\150\141\156\040\116\012\011\055\154\151\156" "\153\163\040\116\011\116\165\155\142\145\162\040\157\146\040\154" "\151\156\153\163\040\151\163\040\147\162\145\141\164\145\162\040" "\164\150\141\156\040\050\053\116\051\054\040\154\145\163\163\040" "\164\150\141\156\040\050\055\116\051\054\012\011\011\011\157\162" "\040\145\170\141\143\164\154\171\040\116\012\011\055\160\162\165" "\156\145\011\011\111\146\040\143\165\162\162\145\156\164\040\146" "\151\154\145\040\151\163\040\144\151\162\145\143\164\157\162\171" "\054\040\144\157\156\047\164\040\144\145\163\143\145\156\144\040" "\151\156\164\157\040\151\164\012\111\146\040\156\157\156\145\040" "\157\146\040\164\150\145\040\146\157\154\154\157\167\151\156\147" "\040\141\143\164\151\157\156\163\040\151\163\040\163\160\145\143" "\151\146\151\145\144\054\040\055\160\162\151\156\164\040\151\163" "\040\141\163\163\165\155\145\144\012\011\055\160\162\151\156\164" "\011\011\120\162\151\156\164\040\146\151\154\145\040\156\141\155" "\145\012\011\055\160\162\151\156\164\060\011\011\120\162\151\156" "\164\040\146\151\154\145\040\156\141\155\145\054\040\116\125\114" "\040\164\145\162\155\151\156\141\164\145\144\012\011\055\145\170" "\145\143\040\103\115\104\040\101\122\107\040\073\011\122\165\156" "\040\103\115\104\040\167\151\164\150\040\141\154\154\040\151\156" "\163\164\141\156\143\145\163\040\157\146\040\173\175\040\162\145" "\160\154\141\143\145\144\040\142\171\012\011\011\011\146\151\154" "\145\040\156\141\155\145\056\040\106\141\151\154\163\040\151\146" "\040\103\115\104\040\145\170\151\164\163\040\167\151\164\150\040" "\156\157\156\172\145\162\157\012\011\055\144\145\154\145\164\145" "\011\011\104\145\154\145\164\145\040\143\165\162\162\145\156\164" "\040\146\151\154\145\057\144\151\162\145\143\164\157\162\171\056" "\040\124\165\162\156\163\040\157\156\040\055\144\145\160\164\150" "\040\157\160\164\151\157\156\000\114\101\102\105\114\075\154\141" "\142\145\154\040\157\162\040\125\125\111\104\075\165\165\151\144" "\012\012\106\151\156\144\040\141\040\146\151\154\145\163\171\163" "\164\145\155\040\144\145\166\151\143\145\040\142\141\163\145\144" "\040\157\156\040\141\040\154\141\142\145\154\040\157\162\040\125" "\125\111\104\000\133\055\163\170\165\156\135\040\106\104\174\173" "\106\111\114\105\040\133\055\143\135\040\120\122\117\107\040\101" "\122\107\123\175\012\012\133\125\156\135\154\157\143\153\040\146" "\151\154\145\040\144\145\163\143\162\151\160\164\157\162\054\040" "\157\162\040\154\157\143\153\040\106\111\114\105\054\040\162\165" "\156\040\120\122\117\107\012\012\011\055\163\011\123\150\141\162" "\145\144\040\154\157\143\153\012\011\055\170\011\105\170\143\154" "\165\163\151\166\145\040\154\157\143\153\040\050\144\145\146\141" "\165\154\164\051\012\011\055\165\011\125\156\154\157\143\153\040" "\106\104\012\011\055\156\011\106\141\151\154\040\162\141\164\150" "\145\162\040\164\150\141\156\040\167\141\151\164\000\133\055\142" "\163\135\040\133\055\167\040\127\111\104\124\110\135\040\133\106" "\111\114\105\135\056\056\056\012\012\127\162\141\160\040\151\156" "\160\165\164\040\154\151\156\145\163\040\151\156\040\145\141\143" "\150\040\106\111\114\105\040\050\157\162\040\163\164\144\151\156" "\051\054\040\167\162\151\164\151\156\147\040\164\157\040\163\164" "\144\157\165\164\012\012\011\055\142\011\103\157\165\156\164\040" "\142\171\164\145\163\040\162\141\164\150\145\162\040\164\150\141" "\156\040\143\157\154\165\155\156\163\012\011\055\163\011\102\162" "\145\141\153\040\141\164\040\163\160\141\143\145\163\012\011\055" "\167\011\125\163\145\040\127\111\104\124\110\040\143\157\154\165" "\155\156\163\040\151\156\163\164\145\141\144\040\157\146\040\070" "\060\000\133\055\142\057\153\057\155\057\147\135\012\012\104\151" "\163\160\154\141\171\040\164\150\145\040\141\155\157\165\156\164" "\040\157\146\040\146\162\145\145\040\141\156\144\040\165\163\145" "\144\040\163\171\163\164\145\155\040\155\145\155\157\162\171\000" "\104\105\126\111\103\105\012\012\106\162\145\145\040\141\154\154" "\040\155\145\155\157\162\171\040\165\163\145\144\040\142\171\040" "\164\150\145\040\163\160\145\143\151\146\151\145\144\040\162\141" "\155\144\151\163\153\000\133\055\101\116\120\122\124\126\135\040" "\133\055\103\040\106\104\135\040\133\055\164\040\106\123\124\131" "\120\105\135\040\133\106\123\137\117\120\124\123\135\040\133\102" "\114\117\103\113\104\105\126\135\056\056\056\012\012\103\150\145" "\143\153\040\141\156\144\040\162\145\160\141\151\162\040\146\151" "\154\145\163\171\163\164\145\155\163\012\012\011\055\101\011\127" "\141\154\153\040\057\145\164\143\057\146\163\164\141\142\040\141" "\156\144\040\143\150\145\143\153\040\141\154\154\040\146\151\154" "\145\163\171\163\164\145\155\163\012\011\055\116\011\104\157\156" "\047\164\040\145\170\145\143\165\164\145\054\040\152\165\163\164" "\040\163\150\157\167\040\167\150\141\164\040\167\157\165\154\144" "\040\142\145\040\144\157\156\145\012\011\055\120\011\127\151\164" "\150\040\055\101\054\040\143\150\145\143\153\040\146\151\154\145" "\163\171\163\164\145\155\163\040\151\156\040\160\141\162\141\154" "\154\145\154\012\011\055\122\011\127\151\164\150\040\055\101\054" "\040\163\153\151\160\040\164\150\145\040\162\157\157\164\040\146" "\151\154\145\163\171\163\164\145\155\012\011\055\124\011\104\157" "\156\047\164\040\163\150\157\167\040\164\151\164\154\145\040\157" "\156\040\163\164\141\162\164\165\160\012\011\055\126\011\126\145" "\162\142\157\163\145\012\011\055\103\040\156\011\127\162\151\164" "\145\040\163\164\141\164\165\163\040\151\156\146\157\162\155\141" "\164\151\157\156\040\164\157\040\163\160\145\143\151\146\151\145" "\144\040\146\151\154\145\144\145\163\143\162\151\160\164\157\162" "\012\011\055\164\040\124\131\120\105\011\114\151\163\164\040\157" "\146\040\146\151\154\145\163\171\163\164\145\155\040\164\171\160" "\145\163\040\164\157\040\143\150\145\143\153\000\133\055\154\141" "\162\166\163\155\146\135\040\102\114\117\103\113\104\105\126\012" "\012\103\150\145\143\153\040\115\111\116\111\130\040\146\151\154" "\145\163\171\163\164\145\155\012\012\011\055\154\011\114\151\163" "\164\040\141\154\154\040\146\151\154\145\156\141\155\145\163\012" "\011\055\162\011\120\145\162\146\157\162\155\040\151\156\164\145" "\162\141\143\164\151\166\145\040\162\145\160\141\151\162\163\012" "\011\055\141\011\120\145\162\146\157\162\155\040\141\165\164\157" "\155\141\164\151\143\040\162\145\160\141\151\162\163\012\011\055" "\166\011\126\145\162\142\157\163\145\012\011\055\163\011\117\165" "\164\160\165\164\040\163\165\160\145\162\142\154\157\143\153\040" "\151\156\146\157\162\155\141\164\151\157\156\012\011\055\155\011" "\123\150\157\167\040\042\155\157\144\145\040\156\157\164\040\143" "\154\145\141\162\145\144\042\040\167\141\162\156\151\156\147\163" "\012\011\055\146\011\106\157\162\143\145\040\146\151\154\145\040" "\163\171\163\164\145\155\040\143\150\145\143\153\000\133\117\120" "\124\111\117\116\123\135\040\115\117\125\116\124\120\117\111\116" "\124\012\012\011\055\157\054\055\055\157\146\146\163\145\164\075" "\117\106\106\123\105\124\011\117\146\146\163\145\164\040\151\156" "\040\142\171\164\145\163\040\164\157\040\144\151\163\143\141\162" "\144\040\146\162\157\155\012\011\055\154\054\055\055\154\145\156" "\147\164\150\075\114\105\116\011\011\102\171\164\145\163\040\164" "\157\040\144\151\163\143\141\162\144\012\011\055\155\054\055\055" "\155\151\156\151\155\165\155\075\115\111\116\011\115\151\156\151" "\155\165\155\040\145\170\164\145\156\164\040\154\145\156\147\164" "\150\012\011\055\166\054\055\055\166\145\162\142\157\163\145\011" "\011\120\162\151\156\164\040\156\165\155\142\145\162\040\157\146" "\040\144\151\163\143\141\162\144\145\144\040\142\171\164\145\163" "\000\133\055\144\135\040\106\111\114\105\056\056\056\012\012\127" "\162\151\164\145\040\146\151\154\145\163\047\040\142\165\146\146" "\145\162\145\144\040\142\154\157\143\153\163\040\164\157\040\144" "\151\163\153\012\012\011\055\144\011\101\166\157\151\144\040\163" "\171\156\143\151\156\147\040\155\145\164\141\144\141\164\141\000" "\133\055\167\166\123\135\040\133\055\164\040\116\135\040\133\055" "\124\040\116\135\040\133\104\111\122\135\012\012\101\156\157\156" "\171\155\157\165\163\040\106\124\120\040\163\145\162\166\145\162" "\012\012\146\164\160\144\040\163\150\157\165\154\144\040\142\145" "\040\165\163\145\144\040\141\163\040\141\156\040\151\156\145\164" "\144\040\163\145\162\166\151\143\145\056\012\146\164\160\144\047" "\163\040\154\151\156\145\040\146\157\162\040\151\156\145\164\144" "\056\143\157\156\146\072\012\011\062\061\040\163\164\162\145\141" "\155\040\164\143\160\040\156\157\167\141\151\164\040\162\157\157" "\164\040\146\164\160\144\040\146\164\160\144\040\057\146\151\154" "\145\163\057\164\157\057\163\145\162\166\145\012\111\164\040\141" "\154\163\157\040\143\141\156\040\142\145\040\162\141\156\040\146" "\162\157\155\040\164\143\160\163\166\144\072\012\011\164\143\160" "\163\166\144\040\055\166\105\040\060\056\060\056\060\056\060\040" "\062\061\040\146\164\160\144\040\057\146\151\154\145\163\057\164" "\157\057\163\145\162\166\145\012\012\011\055\167\011\101\154\154" "\157\167\040\165\160\154\157\141\144\012\011\055\166\011\114\157" "\147\040\145\162\162\157\162\163\040\164\157\040\163\164\144\145" "\162\162\056\040\055\166\166\072\040\166\145\162\142\157\163\145" "\040\154\157\147\012\011\055\123\011\114\157\147\040\145\162\162" "\157\162\163\040\164\157\040\163\171\163\154\157\147\056\040\055" "\123\123\072\040\166\145\162\142\157\163\145\040\154\157\147\012" "\011\055\164\054\055\124\011\111\144\154\145\040\141\156\144\040" "\141\142\163\157\154\165\164\145\040\164\151\155\145\157\165\164" "\163\012\011\104\111\122\011\103\150\141\156\147\145\040\162\157" "\157\164\040\164\157\040\164\150\151\163\040\144\151\162\145\143" "\164\157\162\171\000\133\117\120\124\111\117\116\123\135\040\110" "\117\123\124\040\133\114\117\103\101\114\137\106\111\114\105\135" "\040\122\105\115\117\124\105\137\106\111\114\105\012\012\104\157" "\167\156\154\157\141\144\040\141\040\146\151\154\145\040\166\151" "\141\040\106\124\120\012\012\011\055\143\054\055\055\143\157\156" "\164\151\156\165\145\011\011\103\157\156\164\151\156\165\145\040" "\160\162\145\166\151\157\165\163\040\164\162\141\156\163\146\145" "\162\012\011\055\166\054\055\055\166\145\162\142\157\163\145\011" "\011\126\145\162\142\157\163\145\012\011\055\165\054\055\055\165" "\163\145\162\156\141\155\145\040\125\123\105\122\011\125\163\145" "\162\156\141\155\145\012\011\055\160\054\055\055\160\141\163\163" "\167\157\162\144\040\120\101\123\123\011\120\141\163\163\167\157" "\162\144\012\011\055\120\054\055\055\160\157\162\164\040\116\125" "\115\011\011\120\157\162\164\000\133\117\120\124\111\117\116\123" "\135\040\110\117\123\124\040\133\122\105\115\117\124\105\137\106" "\111\114\105\135\040\114\117\103\101\114\137\106\111\114\105\012" "\012\125\160\154\157\141\144\040\141\040\146\151\154\145\040\164" "\157\040\141\040\106\124\120\040\163\145\162\166\145\162\012\012" "\011\055\166\054\055\055\166\145\162\142\157\163\145\011\011\126" "\145\162\142\157\163\145\012\011\055\165\054\055\055\165\163\145" "\162\156\141\155\145\040\125\123\105\122\011\125\163\145\162\156" "\141\155\145\012\011\055\160\054\055\055\160\141\163\163\167\157" "\162\144\040\120\101\123\123\011\120\141\163\163\167\157\162\144" "\012\011\055\120\054\055\055\160\157\162\164\040\116\125\115\011" "\011\120\157\162\164\000\133\117\120\124\111\117\116\123\135\040" "\106\111\114\105\040\157\162\040\120\117\122\124\057\120\122\117" "\124\117\012\012\106\151\156\144\040\160\162\157\143\145\163\163" "\145\163\040\167\150\151\143\150\040\165\163\145\040\106\111\114" "\105\163\040\157\162\040\120\117\122\124\163\012\012\011\055\155" "\011\106\151\156\144\040\160\162\157\143\145\163\163\145\163\040" "\167\150\151\143\150\040\165\163\145\040\163\141\155\145\040\146" "\163\040\141\163\040\106\111\114\105\163\012\011\055\064\054\055" "\066\011\123\145\141\162\143\150\040\157\156\154\171\040\111\120" "\166\064\057\111\120\166\066\040\163\160\141\143\145\012\011\055" "\163\011\104\157\156\047\164\040\144\151\163\160\154\141\171\040" "\120\111\104\163\012\011\055\153\011\113\151\154\154\040\146\157" "\165\156\144\040\160\162\157\143\145\163\163\145\163\012\011\055" "\123\111\107\116\101\114\011\123\151\147\156\141\154\040\164\157" "\040\163\145\156\144\040\050\144\145\146\141\165\154\164\072\040" "\113\111\114\114\051\000\133\117\120\124\111\117\116\123\135\040" "\133\055\055\135\040\117\120\124\123\124\122\111\116\107\040\120" "\101\122\101\115\123\012\012\011\055\141\054\055\055\141\154\164" "\145\162\156\141\164\151\166\145\011\011\101\154\154\157\167\040" "\154\157\156\147\040\157\160\164\151\157\156\163\040\163\164\141" "\162\164\151\156\147\040\167\151\164\150\040\163\151\156\147\154" "\145\040\055\012\011\055\154\054\055\055\154\157\156\147\157\160" "\164\151\157\156\163\075\114\117\120\124\133\054\056\056\056\135" "\011\114\157\156\147\040\157\160\164\151\157\156\163\040\164\157" "\040\162\145\143\157\147\156\151\172\145\012\011\055\156\054\055" "\055\156\141\155\145\075\120\122\117\107\116\101\115\105\011\011" "\124\150\145\040\156\141\155\145\040\165\156\144\145\162\040\167" "\150\151\143\150\040\145\162\162\157\162\163\040\141\162\145\040" "\162\145\160\157\162\164\145\144\012\011\055\157\054\055\055\157" "\160\164\151\157\156\163\075\117\120\124\123\124\122\111\116\107" "\011\011\123\150\157\162\164\040\157\160\164\151\157\156\163\040" "\164\157\040\162\145\143\157\147\156\151\172\145\012\011\055\161" "\054\055\055\161\165\151\145\164\011\011\011\116\157\040\145\162" "\162\157\162\040\155\145\163\163\141\147\145\163\040\157\156\040" "\165\156\162\145\143\157\147\156\151\172\145\144\040\157\160\164" "\151\157\156\163\012\011\055\121\054\055\055\161\165\151\145\164" "\055\157\165\164\160\165\164\011\011\116\157\040\156\157\162\155" "\141\154\040\157\165\164\160\165\164\012\011\055\163\054\055\055" "\163\150\145\154\154\075\123\110\105\114\114\011\011\123\145\164" "\040\163\150\145\154\154\040\161\165\157\164\151\156\147\040\143" "\157\156\166\145\156\164\151\157\156\163\012\011\055\124\054\055" "\055\164\145\163\164\011\011\011\126\145\162\163\151\157\156\040" "\164\145\163\164\040\050\145\170\151\164\163\040\167\151\164\150" "\040\064\051\012\011\055\165\054\055\055\165\156\161\165\157\164" "\145\144\011\011\011\104\157\156\047\164\040\161\165\157\164\145" "\040\157\165\164\160\165\164\012\012\105\170\141\155\160\154\145" "\072\012\012\117\075\140\147\145\164\157\160\164\040\055\154\040" "\142\142\072\040\055\055\040\141\142\072\143\072\072\040\042\044" "\100\042\140\040\174\174\040\145\170\151\164\040\061\012\145\166" "\141\154\040\163\145\164\040\055\055\040\042\044\117\042\012\167" "\150\151\154\145\040\164\162\165\145\073\040\144\157\012\011\143" "\141\163\145\040\042\044\061\042\040\151\156\012\011\055\141\051" "\011\145\143\150\157\040\101\073\040\163\150\151\146\164\073\073" "\012\011\055\142\174\055\055\142\142\051\040\145\143\150\157\040" "\042\102\072\047\044\062\047\042\073\040\163\150\151\146\164\040" "\062\073\073\012\011\055\143\051\011\143\141\163\145\040\042\044" "\062\042\040\151\156\012\011\011\042\042\051\011\145\143\150\157" "\040\103\073\040\163\150\151\146\164\040\062\073\073\012\011\011" "\052\051\011\145\143\150\157\040\042\103\072\047\044\062\047\042" "\073\040\163\150\151\146\164\040\062\073\073\012\011\011\145\163" "\141\143\073\073\012\011\055\055\051\011\163\150\151\146\164\073" "\040\142\162\145\141\153\073\073\012\011\052\051\011\145\143\150" "\157\040\105\162\162\157\162\073\040\145\170\151\164\040\061\073" "\073\012\011\145\163\141\143\012\144\157\156\145\000\133\117\120" "\124\111\117\116\123\135\040\102\101\125\104\137\122\101\124\105" "\133\054\102\101\125\104\137\122\101\124\105\135\056\056\056\040" "\124\124\131\040\133\124\105\122\115\124\131\120\105\135\012\012" "\117\160\145\156\040\124\124\131\054\040\160\162\157\155\160\164" "\040\146\157\162\040\154\157\147\151\156\040\156\141\155\145\054" "\040\164\150\145\156\040\151\156\166\157\153\145\040\057\142\151" "\156\057\154\157\147\151\156\012\012\011\055\150\011\011\105\156" "\141\142\154\145\040\150\141\162\144\167\141\162\145\040\122\124" "\123\057\103\124\123\040\146\154\157\167\040\143\157\156\164\162" "\157\154\012\011\055\114\011\011\123\145\164\040\103\114\117\103" "\101\114\040\050\151\147\156\157\162\145\040\103\141\162\162\151" "\145\162\040\104\145\164\145\143\164\040\163\164\141\164\145\051" "\012\011\055\155\011\011\107\145\164\040\142\141\165\144\040\162" "\141\164\145\040\146\162\157\155\040\155\157\144\145\155\047\163" "\040\103\117\116\116\105\103\124\040\163\164\141\164\165\163\040" "\155\145\163\163\141\147\145\012\011\055\156\011\011\104\157\156" "\047\164\040\160\162\157\155\160\164\040\146\157\162\040\154\157" "\147\151\156\040\156\141\155\145\012\011\055\167\011\011\127\141" "\151\164\040\146\157\162\040\103\122\040\157\162\040\114\106\040" "\142\145\146\157\162\145\040\163\145\156\144\151\156\147\040\057" "\145\164\143\057\151\163\163\165\145\012\011\055\151\011\011\104" "\157\156\047\164\040\144\151\163\160\154\141\171\040\057\145\164" "\143\057\151\163\163\165\145\012\011\055\146\040\111\123\123\125" "\105\137\106\111\114\105\011\104\151\163\160\154\141\171\040\111" "\123\123\125\105\137\106\111\114\105\040\151\156\163\164\145\141" "\144\040\157\146\040\057\145\164\143\057\151\163\163\165\145\012" "\011\055\154\040\114\117\107\111\116\011\111\156\166\157\153\145" "\040\114\117\107\111\116\040\151\156\163\164\145\141\144\040\157" "\146\040\057\142\151\156\057\154\157\147\151\156\012\011\055\164" "\040\123\105\103\011\011\124\145\162\155\151\156\141\164\145\040" "\141\146\164\145\162\040\123\105\103\040\151\146\040\156\157\040" "\154\157\147\151\156\040\156\141\155\145\040\151\163\040\162\145" "\141\144\012\011\055\111\040\111\116\111\124\123\124\122\011\123" "\145\156\144\040\111\116\111\124\123\124\122\040\142\145\146\157" "\162\145\040\141\156\171\164\150\151\156\147\040\145\154\163\145" "\012\011\055\110\040\110\117\123\124\011\011\114\157\147\040\110" "\117\123\124\040\151\156\164\157\040\164\150\145\040\165\164\155" "\160\040\146\151\154\145\040\141\163\040\164\150\145\040\150\157" "\163\164\156\141\155\145\012\012\102\101\125\104\137\122\101\124" "\105\040\157\146\040\060\040\154\145\141\166\145\163\040\151\164" "\040\165\156\143\150\141\156\147\145\144\000\133\055\110\150\156" "\154\114\157\161\166\163\162\151\167\106\105\135\040\133\055\155" "\040\116\135\040\133\055\101\057\102\057\103\040\116\135\040\120" "\101\124\124\105\122\116\057\055\145\040\120\101\124\124\105\122" "\116\056\056\056\057\055\146\040\106\111\114\105\040\133\106\111" "\114\105\135\056\056\056\012\012\123\145\141\162\143\150\040\146" "\157\162\040\120\101\124\124\105\122\116\040\151\156\040\106\111" "\114\105\163\040\050\157\162\040\163\164\144\151\156\051\012\012" "\011\055\110\011\101\144\144\040\047\146\151\154\145\156\141\155" "\145\072\047\040\160\162\145\146\151\170\012\011\055\150\011\104" "\157\040\156\157\164\040\141\144\144\040\047\146\151\154\145\156" "\141\155\145\072\047\040\160\162\145\146\151\170\012\011\055\156" "\011\101\144\144\040\047\154\151\156\145\137\156\157\072\047\040" "\160\162\145\146\151\170\012\011\055\154\011\123\150\157\167\040" "\157\156\154\171\040\156\141\155\145\163\040\157\146\040\146\151" "\154\145\163\040\164\150\141\164\040\155\141\164\143\150\012\011" "\055\114\011\123\150\157\167\040\157\156\154\171\040\156\141\155" "\145\163\040\157\146\040\146\151\154\145\163\040\164\150\141\164" "\040\144\157\156\047\164\040\155\141\164\143\150\012\011\055\143" "\011\123\150\157\167\040\157\156\154\171\040\143\157\165\156\164" "\040\157\146\040\155\141\164\143\150\151\156\147\040\154\151\156" "\145\163\012\011\055\157\011\123\150\157\167\040\157\156\154\171" "\040\164\150\145\040\155\141\164\143\150\151\156\147\040\160\141" "\162\164\040\157\146\040\154\151\156\145\012\011\055\161\011\121" "\165\151\145\164\056\040\122\145\164\165\162\156\040\060\040\151" "\146\040\120\101\124\124\105\122\116\040\151\163\040\146\157\165" "\156\144\054\040\061\040\157\164\150\145\162\167\151\163\145\012" "\011\055\166\011\123\145\154\145\143\164\040\156\157\156\055\155" "\141\164\143\150\151\156\147\040\154\151\156\145\163\012\011\055" "\163\011\123\165\160\160\162\145\163\163\040\157\160\145\156\040" "\141\156\144\040\162\145\141\144\040\145\162\162\157\162\163\012" "\011\055\162\011\122\145\143\165\162\163\145\012\011\055\151\011" "\111\147\156\157\162\145\040\143\141\163\145\012\011\055\167\011" "\115\141\164\143\150\040\167\150\157\154\145\040\167\157\162\144" "\163\040\157\156\154\171\012\011\055\170\011\115\141\164\143\150" "\040\167\150\157\154\145\040\154\151\156\145\163\040\157\156\154" "\171\012\011\055\106\011\120\101\124\124\105\122\116\040\151\163" "\040\141\040\154\151\164\145\162\141\154\040\050\156\157\164\040" "\162\145\147\145\170\160\051\012\011\055\105\011\120\101\124\124" "\105\122\116\040\151\163\040\141\156\040\145\170\164\145\156\144" "\145\144\040\162\145\147\145\170\160\012\011\055\155\040\116\011" "\115\141\164\143\150\040\165\160\040\164\157\040\116\040\164\151" "\155\145\163\040\160\145\162\040\146\151\154\145\012\011\055\101" "\040\116\011\120\162\151\156\164\040\116\040\154\151\156\145\163" "\040\157\146\040\164\162\141\151\154\151\156\147\040\143\157\156" "\164\145\170\164\012\011\055\102\040\116\011\120\162\151\156\164" "\040\116\040\154\151\156\145\163\040\157\146\040\154\145\141\144" "\151\156\147\040\143\157\156\164\145\170\164\012\011\055\103\040" "\116\011\123\141\155\145\040\141\163\040\047\055\101\040\116\040" "\055\102\040\116\047\012\011\055\145\040\120\124\122\116\011\120" "\141\164\164\145\162\156\040\164\157\040\155\141\164\143\150\012" "\011\055\146\040\106\111\114\105\011\122\145\141\144\040\160\141" "\164\164\145\162\156\040\146\162\157\155\040\146\151\154\145\000" "\133\125\123\105\122\135\012\012\120\162\151\156\164\040\164\150" "\145\040\147\162\157\165\160\040\155\145\155\142\145\162\163\150" "\151\160\163\040\157\146\040\125\123\105\122\040\157\162\040\146" "\157\162\040\164\150\145\040\143\165\162\162\145\156\164\040\160" "\162\157\143\145\163\163\000\133\055\143\146\164\135\040\133\106" "\111\114\105\135\056\056\056\012\012\104\145\143\157\155\160\162" "\145\163\163\040\106\111\114\105\163\040\050\157\162\040\163\164" "\144\151\156\051\012\012\011\055\143\011\127\162\151\164\145\040" "\164\157\040\163\164\144\157\165\164\012\011\055\146\011\106\157" "\162\143\145\012\011\055\164\011\124\145\163\164\040\146\151\154" "\145\040\151\156\164\145\147\162\151\164\171\000\133\055\143\146" "\144\135\040\133\106\111\114\105\135\056\056\056\012\012\103\157" "\155\160\162\145\163\163\040\106\111\114\105\163\040\050\157\162" "\040\163\164\144\151\156\051\012\012\011\055\144\011\104\145\143" "\157\155\160\162\145\163\163\012\011\055\143\011\127\162\151\164" "\145\040\164\157\040\163\164\144\157\165\164\012\011\055\146\011" "\106\157\162\143\145\000\133\055\144\040\104\105\114\101\131\135" "\040\133\055\156\135\040\133\055\146\135\040\133\055\167\135\012" "\012\110\141\154\164\040\164\150\145\040\163\171\163\164\145\155" "\012\012\011\055\144\040\123\105\103\011\104\145\154\141\171\040" "\151\156\164\145\162\166\141\154\012\011\055\156\011\104\157\040" "\156\157\164\040\163\171\156\143\012\011\055\146\011\106\157\162" "\143\145\040\050\144\157\156\047\164\040\147\157\040\164\150\162" "\157\165\147\150\040\151\156\151\164\051\012\011\055\167\011\117" "\156\154\171\040\167\162\151\164\145\040\141\040\167\164\155\160" "\040\162\145\143\157\162\144\000\106\111\114\105\056\056\056\012" "\012\150\144\040\151\163\040\141\156\040\141\154\151\141\163\040" "\146\157\162\040\150\145\170\144\165\155\160\040\055\103\000\133" "\117\120\124\111\117\116\123\135\040\133\104\105\126\111\103\105" "\135\012\012\011\055\141\011\107\145\164\057\163\145\164\040\146" "\163\040\162\145\141\144\141\150\145\141\144\012\011\055\101\011" "\123\145\164\040\144\162\151\166\145\040\162\145\141\144\055\154" "\157\157\153\141\150\145\141\144\040\146\154\141\147\040\050\060" "\057\061\051\012\011\055\142\011\107\145\164\057\163\145\164\040" "\142\165\163\040\163\164\141\164\145\040\050\060\040\075\075\040" "\157\146\146\054\040\061\040\075\075\040\157\156\054\040\062\040" "\075\075\040\164\162\151\163\164\141\164\145\051\012\011\055\102" "\011\123\145\164\040\101\144\166\141\156\143\145\144\040\120\157" "\167\145\162\040\115\141\156\141\147\145\155\145\156\164\040\163" "\145\164\164\151\156\147\040\050\061\055\062\065\065\051\012\011" "\055\143\011\107\145\164\057\163\145\164\040\111\104\105\040\063" "\062\055\142\151\164\040\111\117\040\163\145\164\164\151\156\147" "\012\011\055\103\011\103\150\145\143\153\040\111\104\105\040\160" "\157\167\145\162\040\155\157\144\145\040\163\164\141\164\165\163" "\012\011\055\144\011\107\145\164\057\163\145\164\040\165\163\151" "\156\147\137\144\155\141\040\146\154\141\147\012\011\055\104\011" "\105\156\141\142\154\145\057\144\151\163\141\142\154\145\040\144" "\162\151\166\145\040\144\145\146\145\143\164\055\155\147\155\164" "\012\011\055\146\011\106\154\165\163\150\040\142\165\146\146\145" "\162\040\143\141\143\150\145\040\146\157\162\040\144\145\166\151" "\143\145\040\157\156\040\145\170\151\164\012\011\055\147\011\104" "\151\163\160\154\141\171\040\144\162\151\166\145\040\147\145\157" "\155\145\164\162\171\012\011\055\150\011\104\151\163\160\154\141" "\171\040\164\145\162\163\145\040\165\163\141\147\145\040\151\156" "\146\157\162\155\141\164\151\157\156\012\011\055\151\011\104\151" "\163\160\154\141\171\040\144\162\151\166\145\040\151\144\145\156" "\164\151\146\151\143\141\164\151\157\156\012\011\055\111\011\104" "\145\164\141\151\154\145\144\057\143\165\162\162\145\156\164\040" "\151\156\146\157\162\155\141\164\151\157\156\040\144\151\162\145" "\143\164\154\171\040\146\162\157\155\040\144\162\151\166\145\012" "\011\055\153\011\107\145\164\057\163\145\164\040\153\145\145\160" "\137\163\145\164\164\151\156\147\163\137\157\166\145\162\137\162" "\145\163\145\164\040\146\154\141\147\040\050\060\057\061\051\012" "\011\055\113\011\123\145\164\040\144\162\151\166\145\040\153\145" "\145\160\137\146\145\141\164\165\162\145\163\137\157\166\145\162" "\137\162\145\163\145\164\040\146\154\141\147\040\050\060\057\061" "\051\012\011\055\114\011\123\145\164\040\144\162\151\166\145\040" "\144\157\157\162\154\157\143\153\040\050\060\057\061\051\040\050" "\162\145\155\157\166\141\142\154\145\040\150\141\162\144\144\151" "\163\153\163\040\157\156\154\171\051\012\011\055\155\011\107\145" "\164\057\163\145\164\040\155\165\154\164\151\160\154\145\040\163" "\145\143\164\157\162\040\143\157\165\156\164\012\011\055\156\011" "\107\145\164\057\163\145\164\040\151\147\156\157\162\145\055\167" "\162\151\164\145\055\145\162\162\157\162\163\040\146\154\141\147" "\040\050\060\057\061\051\012\011\055\160\011\123\145\164\040\120" "\111\117\040\155\157\144\145\040\157\156\040\111\104\105\040\151" "\156\164\145\162\146\141\143\145\040\143\150\151\160\163\145\164" "\040\050\060\054\061\054\062\054\063\054\064\054\056\056\056\051" "\012\011\055\120\011\123\145\164\040\144\162\151\166\145\040\160" "\162\145\146\145\164\143\150\040\143\157\165\156\164\012\011\055" "\121\011\107\145\164\057\163\145\164\040\104\115\101\040\164\141" "\147\147\145\144\055\161\165\145\165\151\156\147\040\144\145\160" "\164\150\040\050\151\146\040\163\165\160\160\157\162\164\145\144" "\051\012\011\055\162\011\107\145\164\057\163\145\164\040\162\145" "\141\144\157\156\154\171\040\146\154\141\147\040\050\104\101\116" "\107\105\122\117\125\123\040\164\157\040\163\145\164\051\012\011" "\055\122\011\122\145\147\151\163\164\145\162\040\141\156\040\111" "\104\105\040\151\156\164\145\162\146\141\143\145\040\050\104\101" "\116\107\105\122\117\125\123\051\012\011\055\123\011\123\145\164" "\040\163\164\141\156\144\142\171\040\050\163\160\151\156\144\157" "\167\156\051\040\164\151\155\145\157\165\164\012\011\055\164\011" "\120\145\162\146\157\162\155\040\144\145\166\151\143\145\040\162" "\145\141\144\040\164\151\155\151\156\147\163\012\011\055\124\011" "\120\145\162\146\157\162\155\040\143\141\143\150\145\040\162\145" "\141\144\040\164\151\155\151\156\147\163\012\011\055\165\011\107" "\145\164\057\163\145\164\040\165\156\155\141\163\153\151\162\161" "\040\146\154\141\147\040\050\060\057\061\051\012\011\055\125\011" "\125\156\162\145\147\151\163\164\145\162\040\141\156\040\111\104" "\105\040\151\156\164\145\162\146\141\143\145\040\050\104\101\116" "\107\105\122\117\125\123\051\012\011\055\166\011\104\145\146\141" "\165\154\164\163\073\040\163\141\155\145\040\141\163\040\055\155" "\143\165\144\153\162\141\147\040\146\157\162\040\111\104\105\040" "\144\162\151\166\145\163\012\011\055\126\011\104\151\163\160\154" "\141\171\040\160\162\157\147\162\141\155\040\166\145\162\163\151" "\157\156\040\141\156\144\040\145\170\151\164\040\151\155\155\145" "\144\151\141\164\145\154\171\012\011\055\167\011\120\145\162\146" "\157\162\155\040\144\145\166\151\143\145\040\162\145\163\145\164" "\040\050\104\101\116\107\105\122\117\125\123\051\012\011\055\127" "\011\123\145\164\040\144\162\151\166\145\040\167\162\151\164\145" "\055\143\141\143\150\151\156\147\040\146\154\141\147\040\050\060" "\057\061\051\040\050\104\101\116\107\105\122\117\125\123\051\012" "\011\055\170\011\124\162\151\163\164\141\164\145\040\144\145\166" "\151\143\145\040\146\157\162\040\150\157\164\163\167\141\160\040" "\050\060\057\061\051\040\050\104\101\116\107\105\122\117\125\123" "\051\012\011\055\130\011\123\145\164\040\111\104\105\040\170\146" "\145\162\040\155\157\144\145\040\050\104\101\116\107\105\122\117" "\125\123\051\012\011\055\171\011\120\165\164\040\111\104\105\040" "\144\162\151\166\145\040\151\156\040\163\164\141\156\144\142\171" "\040\155\157\144\145\012\011\055\131\011\120\165\164\040\111\104" "\105\040\144\162\151\166\145\040\164\157\040\163\154\145\145\160" "\012\011\055\132\011\104\151\163\141\142\154\145\040\123\145\141" "\147\141\164\145\040\141\165\164\157\055\160\157\167\145\162\163" "\141\166\151\156\147\040\155\157\144\145\012\011\055\172\011\122" "\145\162\145\141\144\040\160\141\162\164\151\164\151\157\156\040" "\164\141\142\154\145\000\133\117\120\124\111\117\116\123\135\040" "\133\106\111\114\105\135\056\056\056\012\012\120\162\151\156\164" "\040\146\151\162\163\164\040\061\060\040\154\151\156\145\163\040" "\157\146\040\145\141\143\150\040\106\111\114\105\040\050\157\162" "\040\163\164\144\151\156\051\040\164\157\040\163\164\144\157\165" "\164\056\012\127\151\164\150\040\155\157\162\145\040\164\150\141" "\156\040\157\156\145\040\106\111\114\105\054\040\160\162\145\143" "\145\144\145\040\145\141\143\150\040\167\151\164\150\040\141\040" "\146\151\154\145\156\141\155\145\040\150\145\141\144\145\162\056" "\012\012\011\055\156\040\116\133\153\142\155\135\011\120\162\151" "\156\164\040\146\151\162\163\164\040\116\040\154\151\156\145\163" "\012\011\055\156\040\055\116\133\153\142\155\135\011\120\162\151" "\156\164\040\141\154\154\040\145\170\143\145\160\164\040\116\040" "\154\141\163\164\040\154\151\156\145\163\012\011\055\143\040\133" "\055\135\116\133\153\142\155\135\011\120\162\151\156\164\040\146" "\151\162\163\164\040\116\040\142\171\164\145\163\012\011\055\161" "\011\011\116\145\166\145\162\040\160\162\151\156\164\040\150\145" "\141\144\145\162\163\012\011\055\166\011\011\101\154\167\141\171" "\163\040\160\162\151\156\164\040\150\145\141\144\145\162\163\012" "\012\116\040\155\141\171\040\142\145\040\163\165\146\146\151\170" "\145\144\040\142\171\040\153\040\050\170\061\060\062\064\051\054" "\040\142\040\050\170\065\061\062\051\054\040\157\162\040\155\040" "\050\170\061\060\062\064\136\062\051\056\000\133\055\142\143\103" "\144\145\146\156\157\163\166\170\122\135\040\133\106\111\114\105" "\135\056\056\056\012\012\104\151\163\160\154\141\171\040\106\111" "\114\105\163\040\050\157\162\040\163\164\144\151\156\051\040\151" "\156\040\141\040\165\163\145\162\040\163\160\145\143\151\146\151" "\145\144\040\146\157\162\155\141\164\012\012\011\055\142\011\011" "\117\156\145\055\142\171\164\145\040\157\143\164\141\154\040\144" "\151\163\160\154\141\171\012\011\055\143\011\011\117\156\145\055" "\142\171\164\145\040\143\150\141\162\141\143\164\145\162\040\144" "\151\163\160\154\141\171\012\011\055\103\011\011\103\141\156\157" "\156\151\143\141\154\040\150\145\170\053\101\123\103\111\111\054" "\040\061\066\040\142\171\164\145\163\040\160\145\162\040\154\151" "\156\145\012\011\055\144\011\011\124\167\157\055\142\171\164\145" "\040\144\145\143\151\155\141\154\040\144\151\163\160\154\141\171" "\012\011\055\145\040\106\117\122\115\101\124\137\123\124\122\111" "\116\107\012\011\055\146\040\106\117\122\115\101\124\137\106\111" "\114\105\012\011\055\156\040\114\105\116\107\124\110\011\111\156" "\164\145\162\160\162\145\164\040\157\156\154\171\040\114\105\116" "\107\124\110\040\142\171\164\145\163\040\157\146\040\151\156\160" "\165\164\012\011\055\157\011\011\124\167\157\055\142\171\164\145" "\040\157\143\164\141\154\040\144\151\163\160\154\141\171\012\011" "\055\163\040\117\106\106\123\105\124\011\123\153\151\160\040\117" "\106\106\123\105\124\040\142\171\164\145\163\012\011\055\166\011" "\011\104\151\163\160\154\141\171\040\141\154\154\040\151\156\160" "\165\164\040\144\141\164\141\012\011\055\170\011\011\124\167\157" "\055\142\171\164\145\040\150\145\170\141\144\145\143\151\155\141" "\154\040\144\151\163\160\154\141\171\012\011\055\122\011\011\122" "\145\166\145\162\163\145\040\157\146\040\047\150\145\170\144\165" "\155\160\040\055\103\166\047\000\012\012\120\162\151\156\164\040" "\157\165\164\040\141\040\165\156\151\161\165\145\040\063\062\055" "\142\151\164\040\151\144\145\156\164\151\146\151\145\162\040\146" "\157\162\040\164\150\145\040\155\141\143\150\151\156\145\000\133" "\117\120\124\111\117\116\123\135\040\133\110\117\123\124\116\101" "\115\105\040\174\040\055\106\040\106\111\114\105\135\012\012\107" "\145\164\040\157\162\040\163\145\164\040\150\157\163\164\156\141" "\155\145\040\157\162\040\104\116\123\040\144\157\155\141\151\156" "\040\156\141\155\145\012\012\011\055\163\011\123\150\157\162\164" "\012\011\055\151\011\101\144\144\162\145\163\163\145\163\040\146" "\157\162\040\164\150\145\040\150\157\163\164\156\141\155\145\012" "\011\055\144\011\104\116\123\040\144\157\155\141\151\156\040\156" "\141\155\145\012\011\055\146\011\106\165\154\154\171\040\161\165" "\141\154\151\146\151\145\144\040\144\157\155\141\151\156\040\156" "\141\155\145\012\011\055\106\040\106\111\114\105\011\125\163\145" "\040\106\111\114\105\047\163\040\143\157\156\164\145\156\164\040" "\141\163\040\150\157\163\164\156\141\155\145\000\133\055\151\146" "\166\133\166\135\135\040\133\055\143\040\103\117\116\106\106\111" "\114\105\135\040\133\055\160\040\133\111\120\072\135\120\117\122" "\124\135\040\133\055\165\040\125\123\105\122\133\072\107\122\120" "\135\135\040\133\055\162\040\122\105\101\114\115\135\040\133\055" "\150\040\110\117\115\105\135\012\157\162\040\150\164\164\160\144" "\040\055\144\057\055\145\057\055\155\040\123\124\122\111\116\107" "\012\012\114\151\163\164\145\156\040\146\157\162\040\151\156\143" "\157\155\151\156\147\040\110\124\124\120\040\162\145\161\165\145" "\163\164\163\012\012\011\055\151\011\011\111\156\145\164\144\040" "\155\157\144\145\012\011\055\146\011\011\104\157\156\047\164\040" "\144\141\145\155\157\156\151\172\145\012\011\055\166\133\166\135" "\011\011\126\145\162\142\157\163\145\012\011\055\160\040\133\111" "\120\072\135\120\117\122\124\011\102\151\156\144\040\164\157\040" "\111\120\072\120\117\122\124\040\050\144\145\146\141\165\154\164" "\040\052\072\070\060\051\012\011\055\165\040\125\123\105\122\133" "\072\107\122\120\135\011\123\145\164\040\165\151\144\057\147\151" "\144\040\141\146\164\145\162\040\142\151\156\144\151\156\147\040" "\164\157\040\160\157\162\164\012\011\055\162\040\122\105\101\114" "\115\011\101\165\164\150\145\156\164\151\143\141\164\151\157\156" "\040\122\145\141\154\155\040\146\157\162\040\102\141\163\151\143" "\040\101\165\164\150\145\156\164\151\143\141\164\151\157\156\012" "\011\055\150\040\110\117\115\105\011\011\110\157\155\145\040\144" "\151\162\145\143\164\157\162\171\040\050\144\145\146\141\165\154" "\164\040\056\051\012\011\055\143\040\106\111\114\105\011\011\103" "\157\156\146\151\147\165\162\141\164\151\157\156\040\146\151\154" "\145\040\050\144\145\146\141\165\154\164\040\173\057\145\164\143" "\054\110\117\115\105\175\057\150\164\164\160\144\056\143\157\156" "\146\051\012\011\055\155\040\123\124\122\111\116\107\011\115\104" "\065\040\143\162\171\160\164\040\123\124\122\111\116\107\012\011" "\055\145\040\123\124\122\111\116\107\011\110\124\115\114\040\145" "\156\143\157\144\145\040\123\124\122\111\116\107\012\011\055\144" "\040\123\124\122\111\116\107\011\125\122\114\040\144\145\143\157" "\144\145\040\123\124\122\111\116\107\000\133\055\156\170\154\135" "\040\133\055\143\040\047\123\103\122\111\120\124\047\040\133\101" "\122\107\060\040\133\101\122\107\123\135\135\040\057\040\106\111" "\114\105\040\133\101\122\107\123\135\135\012\012\125\156\151\170" "\040\163\150\145\154\154\040\151\156\164\145\162\160\162\145\164" "\145\162\000\133\055\162\174\055\055\163\150\157\167\135\040\133" "\055\163\174\055\055\150\143\164\157\163\171\163\135\040\133\055" "\167\174\055\055\163\171\163\164\157\150\143\135\040\133\055\164" "\174\055\055\163\171\163\164\172\135\040\133\055\154\174\055\055" "\154\157\143\141\154\164\151\155\145\135\040\133\055\165\174\055" "\055\165\164\143\135\040\133\055\146\174\055\055\162\164\143\040" "\106\111\114\105\135\012\012\121\165\145\162\171\040\141\156\144" "\040\163\145\164\040\150\141\162\144\167\141\162\145\040\143\154" "\157\143\153\040\050\122\124\103\051\012\012\011\055\162\011\123" "\150\157\167\040\150\141\162\144\167\141\162\145\040\143\154\157" "\143\153\040\164\151\155\145\012\011\055\163\011\123\145\164\040" "\163\171\163\164\145\155\040\164\151\155\145\040\146\162\157\155" "\040\150\141\162\144\167\141\162\145\040\143\154\157\143\153\012" "\011\055\167\011\123\145\164\040\150\141\162\144\167\141\162\145" "\040\143\154\157\143\153\040\146\162\157\155\040\163\171\163\164" "\145\155\040\164\151\155\145\012\011\055\164\011\123\145\164\040" "\151\156\055\153\145\162\156\145\154\040\164\151\155\145\172\157" "\156\145\054\040\143\157\162\162\145\143\164\040\163\171\163\164" "\145\155\040\164\151\155\145\012\011\011\151\146\040\150\141\162" "\144\167\141\162\145\040\143\154\157\143\153\040\151\163\040\151" "\156\040\154\157\143\141\154\040\164\151\155\145\012\011\055\165" "\011\101\163\163\165\155\145\040\150\141\162\144\167\141\162\145" "\040\143\154\157\143\153\040\151\163\040\153\145\160\164\040\151" "\156\040\125\124\103\012\011\055\154\011\101\163\163\165\155\145" "\040\150\141\162\144\167\141\162\145\040\143\154\157\143\153\040" "\151\163\040\153\145\160\164\040\151\156\040\154\157\143\141\154" "\040\164\151\155\145\012\011\055\146\040\106\111\114\105\011\125" "\163\145\040\163\160\145\143\151\146\151\145\144\040\144\145\166" "\151\143\145\040\050\145\056\147\056\040\057\144\145\166\057\162" "\164\143\062\051\000\133\117\120\124\111\117\116\123\135\040\133" "\125\123\105\122\135\012\012\120\162\151\156\164\040\151\156\146" "\157\162\155\141\164\151\157\156\040\141\142\157\165\164\040\125" "\123\105\122\040\157\162\040\164\150\145\040\143\165\162\162\145" "\156\164\040\165\163\145\162\012\012\011\055\165\011\125\163\145" "\162\040\111\104\012\011\055\147\011\107\162\157\165\160\040\111" "\104\012\011\055\107\011\123\165\160\160\154\145\155\145\156\164" "\141\162\171\040\147\162\157\165\160\040\111\104\163\012\011\055" "\156\011\120\162\151\156\164\040\156\141\155\145\163\040\151\156" "\163\164\145\141\144\040\157\146\040\156\165\155\142\145\162\163" "\012\011\055\162\011\120\162\151\156\164\040\162\145\141\154\040" "\111\104\040\151\156\163\164\145\141\144\040\157\146\040\145\146" "\146\145\143\164\151\166\145\040\111\104\000\133\055\141\135\040" "\151\156\164\145\162\146\141\143\145\040\133\141\144\144\162\145" "\163\163\135\012\012\103\157\156\146\151\147\165\162\145\040\141" "\040\156\145\164\167\157\162\153\040\151\156\164\145\162\146\141" "\143\145\012\012\011\133\141\144\144\040\101\104\104\122\105\123" "\123\133\057\120\122\105\106\111\130\114\105\116\135\135\012\011" "\133\144\145\154\040\101\104\104\122\105\123\123\133\057\120\122" "\105\106\111\130\114\105\116\135\135\012\011\133\133\055\135\142" "\162\157\141\144\143\141\163\164\040\133\101\104\104\122\105\123" "\123\135\135\040\133\133\055\135\160\157\151\156\164\157\160\157" "\151\156\164\040\133\101\104\104\122\105\123\123\135\135\012\011" "\133\156\145\164\155\141\163\153\040\101\104\104\122\105\123\123" "\135\040\133\144\163\164\141\144\144\162\040\101\104\104\122\105" "\123\123\135\012\011\133\157\165\164\146\151\154\154\040\116\116" "\135\040\133\153\145\145\160\141\154\151\166\145\040\116\116\135" "\012\011\133\150\167\040\145\164\150\145\162\174\151\156\146\151" "\156\151\142\141\156\144\040\101\104\104\122\105\123\123\135\040" "\133\155\145\164\162\151\143\040\116\116\135\040\133\155\164\165" "\040\116\116\135\012\011\133\133\055\135\164\162\141\151\154\145" "\162\163\135\040\133\133\055\135\141\162\160\135\040\133\133\055" "\135\141\154\154\155\165\154\164\151\135\012\011\133\155\165\154" "\164\151\143\141\163\164\135\040\133\133\055\135\160\162\157\155" "\151\163\143\135\040\133\164\170\161\165\145\165\145\154\145\156" "\040\116\116\135\040\133\133\055\135\144\171\156\141\155\151\143" "\135\012\011\133\155\145\155\137\163\164\141\162\164\040\116\116" "\135\040\133\151\157\137\141\144\144\162\040\116\116\135\040\133" "\151\162\161\040\116\116\135\012\011\133\165\160\174\144\157\167" "\156\135\040\056\056\056\000\133\055\141\156\155\166\146\135\040" "\133\055\151\040\106\111\114\105\135\040\111\106\101\103\105\056" "\056\056\012\012\011\055\141\011\104\145\057\143\157\156\146\151" "\147\165\162\145\040\141\154\154\040\151\156\164\145\162\146\141" "\143\145\163\040\141\165\164\157\155\141\164\151\143\141\154\154" "\171\012\011\055\151\040\106\111\114\105\011\125\163\145\040\106" "\111\114\105\040\146\157\162\040\151\156\164\145\162\146\141\143" "\145\040\144\145\146\151\156\151\164\151\157\156\163\012\011\055" "\156\011\120\162\151\156\164\040\157\165\164\040\167\150\141\164" "\040\167\157\165\154\144\040\150\141\160\160\145\156\054\040\142" "\165\164\040\144\157\156\047\164\040\144\157\040\151\164\012\011" "\011\050\156\157\164\145\072\040\144\157\145\163\156\047\164\040" "\144\151\163\141\142\154\145\040\155\141\160\160\151\156\147\163" "\051\012\011\055\155\011\104\157\156\047\164\040\162\165\156\040" "\141\156\171\040\155\141\160\160\151\156\147\163\012\011\055\166" "\011\120\162\151\156\164\040\157\165\164\040\167\150\141\164\040" "\167\157\165\154\144\040\150\141\160\160\145\156\040\142\145\146" "\157\162\145\040\144\157\151\156\147\040\151\164\012\011\055\146" "\011\106\157\162\143\145\040\144\145\057\143\157\156\146\151\147" "\165\162\141\164\151\157\156\000\133\055\143\144\146\135\040\115" "\101\123\124\105\122\137\111\106\101\103\105\040\123\114\101\126" "\105\137\111\106\101\103\105\056\056\056\012\012\103\157\156\146" "\151\147\165\162\145\040\156\145\164\167\157\162\153\040\151\156" "\164\145\162\146\141\143\145\163\040\146\157\162\040\160\141\162" "\141\154\154\145\154\040\162\157\165\164\151\156\147\012\012\011" "\055\143\054\055\055\143\150\141\156\147\145\055\141\143\164\151" "\166\145\011\103\150\141\156\147\145\040\141\143\164\151\166\145" "\040\163\154\141\166\145\012\011\055\144\054\055\055\144\145\164" "\141\143\150\011\011\122\145\155\157\166\145\040\163\154\141\166" "\145\040\151\156\164\145\162\146\141\143\145\040\146\162\157\155" "\040\142\157\156\144\151\156\147\040\144\145\166\151\143\145\012" "\011\055\146\054\055\055\146\157\162\143\145\011\011\106\157\162" "\143\145\054\040\145\166\145\156\040\151\146\040\151\156\164\145" "\162\146\141\143\145\040\151\163\040\156\157\164\040\105\164\150" "\145\162\156\145\164\000\133\117\120\124\111\117\116\123\135\012" "\012\116\145\164\167\157\162\153\040\151\156\164\145\162\146\141" "\143\145\040\160\154\165\147\040\144\145\164\145\143\164\151\157" "\156\040\144\141\145\155\157\156\012\012\011\055\156\011\011\104" "\157\156\047\164\040\144\141\145\155\157\156\151\172\145\012\011" "\055\163\011\011\104\157\156\047\164\040\154\157\147\040\164\157" "\040\163\171\163\154\157\147\012\011\055\151\040\111\106\101\103" "\105\011\111\156\164\145\162\146\141\143\145\012\011\055\146\057" "\055\106\011\011\124\162\145\141\164\040\154\151\156\153\040\144" "\145\164\145\143\164\151\157\156\040\145\162\162\157\162\040\141" "\163\040\154\151\156\153\040\144\157\167\156\057\154\151\156\153" "\040\165\160\012\011\011\011\050\157\164\150\145\162\167\151\163" "\145\040\145\170\151\164\040\157\156\040\145\162\162\157\162\051" "\012\011\055\141\011\011\104\157\156\047\164\040\165\160\040\151" "\156\164\145\162\146\141\143\145\040\141\164\040\145\141\143\150" "\040\154\151\156\153\040\160\162\157\142\145\012\011\055\115\011" "\011\115\157\156\151\164\157\162\040\143\162\145\141\164\151\157" "\156\057\144\145\163\164\162\165\143\164\151\157\156\040\157\146" "\040\151\156\164\145\162\146\141\143\145\012\011\011\011\050\157" "\164\150\145\162\167\151\163\145\040\151\164\040\155\165\163\164" "\040\145\170\151\163\164\051\012\011\055\162\040\120\122\117\107" "\011\011\123\143\162\151\160\164\040\164\157\040\162\165\156\012" "\011\055\170\040\101\122\107\011\011\105\170\164\162\141\040\141" "\162\147\165\155\145\156\164\040\146\157\162\040\163\143\162\151" "\160\164\012\011\055\111\011\011\104\157\156\047\164\040\145\170" "\151\164\040\157\156\040\156\157\156\172\145\162\157\040\145\170" "\151\164\040\143\157\144\145\040\146\162\157\155\040\163\143\162" "\151\160\164\012\011\055\160\011\011\104\157\156\047\164\040\162" "\165\156\040\042\165\160\042\040\163\143\162\151\160\164\040\157" "\156\040\163\164\141\162\164\165\160\012\011\055\161\011\011\104" "\157\156\047\164\040\162\165\156\040\042\144\157\167\156\042\040" "\163\143\162\151\160\164\040\157\156\040\145\170\151\164\012\011" "\055\154\011\011\101\154\167\141\171\163\040\162\165\156\040\163" "\143\162\151\160\164\040\157\156\040\163\164\141\162\164\165\160" "\012\011\055\164\040\123\105\103\123\011\011\120\157\154\154\040" "\164\151\155\145\040\151\156\040\163\145\143\157\156\144\163\012" "\011\055\165\040\123\105\103\123\011\011\104\145\154\141\171\040" "\142\145\146\157\162\145\040\162\165\156\156\151\156\147\040\163" "\143\162\151\160\164\040\141\146\164\145\162\040\154\151\156\153" "\040\165\160\012\011\055\144\040\123\105\103\123\011\011\104\145" "\154\141\171\040\141\146\164\145\162\040\154\151\156\153\040\144" "\157\167\156\012\011\055\155\040\115\117\104\105\011\011\101\120" "\111\040\155\157\144\145\040\050\155\151\151\054\040\160\162\151" "\166\054\040\145\164\150\164\157\157\154\054\040\167\154\141\156" "\054\040\151\146\146\054\040\141\165\164\157\051\012\011\055\153" "\011\011\113\151\154\154\040\162\165\156\156\151\156\147\040\144" "\141\145\155\157\156\000\133\055\141\156\155\166\146\135\040\133" "\055\151\040\106\111\114\105\135\040\111\106\101\103\105\056\056" "\056\012\012\011\055\141\011\104\145\057\143\157\156\146\151\147" "\165\162\145\040\141\154\154\040\151\156\164\145\162\146\141\143" "\145\163\040\141\165\164\157\155\141\164\151\143\141\154\154\171" "\012\011\055\151\040\106\111\114\105\011\125\163\145\040\106\111" "\114\105\040\146\157\162\040\151\156\164\145\162\146\141\143\145" "\040\144\145\146\151\156\151\164\151\157\156\163\012\011\055\156" "\011\120\162\151\156\164\040\157\165\164\040\167\150\141\164\040" "\167\157\165\154\144\040\150\141\160\160\145\156\054\040\142\165" "\164\040\144\157\156\047\164\040\144\157\040\151\164\012\011\011" "\050\156\157\164\145\072\040\144\157\145\163\156\047\164\040\144" "\151\163\141\142\154\145\040\155\141\160\160\151\156\147\163\051" "\012\011\055\155\011\104\157\156\047\164\040\162\165\156\040\141" "\156\171\040\155\141\160\160\151\156\147\163\012\011\055\166\011" "\120\162\151\156\164\040\157\165\164\040\167\150\141\164\040\167" "\157\165\154\144\040\150\141\160\160\145\156\040\142\145\146\157" "\162\145\040\144\157\151\156\147\040\151\164\012\011\055\146\011" "\106\157\162\143\145\040\144\145\057\143\157\156\146\151\147\165" "\162\141\164\151\157\156\000\133\055\146\145\135\040\133\055\161" "\040\116\135\040\133\055\122\040\116\135\040\133\103\117\116\106" "\106\111\114\105\135\012\012\114\151\163\164\145\156\040\146\157" "\162\040\156\145\164\167\157\162\153\040\143\157\156\156\145\143" "\164\151\157\156\163\040\141\156\144\040\154\141\165\156\143\150" "\040\160\162\157\147\162\141\155\163\012\012\011\055\146\011\122" "\165\156\040\151\156\040\146\157\162\145\147\162\157\165\156\144" "\012\011\055\145\011\114\157\147\040\164\157\040\163\164\144\145" "\162\162\012\011\055\161\040\116\011\123\157\143\153\145\164\040" "\154\151\163\164\145\156\040\161\165\145\165\145\040\050\144\145" "\146\141\165\154\164\072\040\061\062\070\051\012\011\055\122\040" "\116\011\120\141\165\163\145\040\163\145\162\166\151\143\145\163" "\040\141\146\164\145\162\040\116\040\143\157\156\156\145\143\164" "\163\057\155\151\156\012\011\011\050\144\145\146\141\165\154\164" "\072\040\060\040\055\040\144\151\163\141\142\154\145\144\051\000" "\012\012\111\156\151\164\040\151\163\040\164\150\145\040\146\151" "\162\163\164\040\160\162\157\143\145\163\163\040\163\164\141\162" "\164\145\144\040\144\165\162\151\156\147\040\142\157\157\164\056" "\040\111\164\040\156\145\166\145\162\040\145\170\151\164\163\056" "\012\111\164\040\050\162\145\051\163\160\141\167\156\163\040\143" "\150\151\154\144\162\145\156\040\141\143\143\157\162\144\151\156" "\147\040\164\157\040\057\145\164\143\057\151\156\151\164\164\141" "\142\056\000\133\055\161\146\167\162\163\166\135\040\115\117\104" "\125\114\105\040\133\163\171\155\142\157\154\075\166\141\154\165" "\145\135\056\056\056\012\012\011\055\162\011\122\145\155\157\166" "\145\040\115\117\104\125\114\105\040\050\163\164\141\143\153\163" "\051\040\157\162\040\144\157\040\141\165\164\157\143\154\145\141" "\156\012\011\055\161\011\121\165\151\145\164\012\011\055\166\011" "\126\145\162\142\157\163\145\012\011\055\146\011\106\157\162\143" "\145\012\011\055\167\011\127\141\151\164\040\146\157\162\040\165" "\156\154\157\141\144\012\011\055\163\011\122\145\160\157\162\164" "\040\166\151\141\040\163\171\163\154\157\147\040\151\156\163\164" "\145\141\144\040\157\146\040\163\164\144\145\162\162\000\133\055" "\143\144\104\163\160\135\040\133\055\157\040\125\123\105\122\135" "\040\133\055\147\040\107\122\120\135\040\133\055\155\040\115\117" "\104\105\135\040\133\123\117\125\122\103\105\135\056\056\056\040" "\104\105\123\124\012\012\103\157\160\171\040\146\151\154\145\163" "\040\141\156\144\040\163\145\164\040\141\164\164\162\151\142\165" "\164\145\163\012\012\011\055\143\011\112\165\163\164\040\143\157" "\160\171\040\050\144\145\146\141\165\154\164\051\012\011\055\144" "\011\103\162\145\141\164\145\040\144\151\162\145\143\164\157\162" "\151\145\163\012\011\055\104\011\103\162\145\141\164\145\040\154" "\145\141\144\151\156\147\040\164\141\162\147\145\164\040\144\151" "\162\145\143\164\157\162\151\145\163\012\011\055\163\011\123\164" "\162\151\160\040\163\171\155\142\157\154\040\164\141\142\154\145" "\012\011\055\160\011\120\162\145\163\145\162\166\145\040\144\141" "\164\145\012\011\055\157\040\125\123\105\122\011\123\145\164\040" "\157\167\156\145\162\163\150\151\160\012\011\055\147\040\107\122" "\120\011\123\145\164\040\147\162\157\165\160\040\157\167\156\145" "\162\163\150\151\160\012\011\055\155\040\115\117\104\105\011\123" "\145\164\040\160\145\162\155\151\163\163\151\157\156\163\000\133" "\055\143\040\061\055\063\135\040\133\055\156\040\060\055\067\135" "\040\133\055\160\040\120\111\104\135\040\133\120\122\117\107\135" "\012\012\103\150\141\156\147\145\040\111\057\117\040\160\162\151" "\157\162\151\164\171\040\141\156\144\040\143\154\141\163\163\012" "\012\011\055\143\011\103\154\141\163\163\056\040\061\072\162\145" "\141\154\164\151\155\145\040\062\072\142\145\163\164\055\145\146" "\146\157\162\164\040\063\072\151\144\154\145\012\011\055\156\011" "\120\162\151\157\162\151\164\171\000\133\055\143\135\040\133\055" "\144\135\040\133\055\164\135\040\133\055\172\135\040\133\055\153" "\174\055\155\135\040\133\101\114\114\174\102\114\117\103\113\104" "\105\126\056\056\056\135\040\133\111\116\124\105\122\126\101\114" "\040\133\103\117\125\116\124\135\135\012\012\122\145\160\157\162" "\164\040\103\120\125\040\141\156\144\040\111\057\117\040\163\164" "\141\164\151\163\164\151\143\163\012\012\011\055\143\011\123\150" "\157\167\040\103\120\125\040\165\164\151\154\151\172\141\164\151" "\157\156\012\011\055\144\011\123\150\157\167\040\144\145\166\151" "\143\145\040\165\164\151\154\151\172\141\164\151\157\156\012\011" "\055\164\011\120\162\151\156\164\040\143\165\162\162\145\156\164" "\040\164\151\155\145\012\011\055\172\011\117\155\151\164\040\144" "\145\166\151\143\145\163\040\167\151\164\150\040\156\157\040\141" "\143\164\151\166\151\164\171\012\011\055\153\011\125\163\145\040" "\153\142\057\163\012\011\055\155\011\125\163\145\040\115\142\057" "\163\000\133\117\120\124\111\117\116\123\135\040\173\141\144\144" "\162\145\163\163\040\174\040\162\157\165\164\145\040\174\040\154" "\151\156\153\040\174\040\164\165\156\156\145\154\040\174\040\162" "\165\154\145\175\040\173\103\117\115\115\101\116\104\175\012\012" "\151\160\040\133\117\120\124\111\117\116\123\135\040\117\102\112" "\105\103\124\040\173\103\117\115\115\101\116\104\175\012\167\150" "\145\162\145\040\117\102\112\105\103\124\040\072\075\040\173\141" "\144\144\162\145\163\163\040\174\040\162\157\165\164\145\040\174" "\040\154\151\156\153\040\174\040\164\165\156\156\145\154\040\174" "\040\162\165\154\145\175\012\117\120\124\111\117\116\123\040\072" "\075\040\173\040\055\146\133\141\155\151\154\171\135\040\173\040" "\151\156\145\164\040\174\040\151\156\145\164\066\040\174\040\154" "\151\156\153\040\175\040\174\040\055\157\133\156\145\154\151\156" "\145\135\040\175\000\173\040\173\141\144\144\174\144\145\154\175" "\040\111\106\101\104\104\122\040\144\145\166\040\123\124\122\111" "\116\107\040\174\040\173\163\150\157\167\174\146\154\165\163\150" "\175\012\011\011\133\144\145\166\040\123\124\122\111\116\107\135" "\040\133\164\157\040\120\122\105\106\111\130\135\040\175\012\012" "\151\160\141\144\144\162\040\173\141\144\144\174\144\145\154\145" "\164\145\175\040\111\106\101\104\104\122\040\144\145\166\040\123" "\124\122\111\116\107\012\151\160\141\144\144\162\040\173\163\150" "\157\167\174\146\154\165\163\150\175\040\133\144\145\166\040\123" "\124\122\111\116\107\135\040\133\163\143\157\160\145\040\123\103" "\117\120\105\055\111\104\135\012\011\133\164\157\040\120\122\105" "\106\111\130\135\040\133\154\141\142\145\154\040\120\101\124\124" "\105\122\116\135\012\011\111\106\101\104\104\122\040\072\075\040" "\120\122\105\106\111\130\040\174\040\101\104\104\122\040\160\145" "\145\162\040\120\122\105\106\111\130\012\011\133\142\162\157\141" "\144\143\141\163\164\040\101\104\104\122\135\040\133\141\156\171" "\143\141\163\164\040\101\104\104\122\135\012\011\133\154\141\142" "\145\154\040\123\124\122\111\116\107\135\040\133\163\143\157\160" "\145\040\123\103\117\120\105\055\111\104\135\012\011\123\103\117" "\120\105\055\111\104\040\072\075\040\133\150\157\163\164\040\174" "\040\154\151\156\153\040\174\040\147\154\157\142\141\154\040\174" "\040\116\125\115\102\105\122\135\000\133\117\120\124\111\117\116" "\123\135\040\101\104\104\122\105\123\123\133\133\057\135\116\105" "\124\115\101\123\113\135\040\133\116\105\124\115\101\123\113\135" "\012\012\103\141\154\143\165\154\141\164\145\040\111\120\040\156" "\145\164\167\157\162\153\040\163\145\164\164\151\156\147\163\040" "\146\162\157\155\040\141\040\111\120\040\141\144\144\162\145\163" "\163\012\012\011\055\142\054\055\055\142\162\157\141\144\143\141" "\163\164\011\104\151\163\160\154\141\171\040\143\141\154\143\165" "\154\141\164\145\144\040\142\162\157\141\144\143\141\163\164\040" "\141\144\144\162\145\163\163\012\011\055\156\054\055\055\156\145" "\164\167\157\162\153\011\104\151\163\160\154\141\171\040\143\141" "\154\143\165\154\141\164\145\144\040\156\145\164\167\157\162\153" "\040\141\144\144\162\145\163\163\012\011\055\155\054\055\055\156" "\145\164\155\141\163\153\011\104\151\163\160\154\141\171\040\144" "\145\146\141\165\154\164\040\156\145\164\155\141\163\153\040\146" "\157\162\040\111\120\012\011\055\160\054\055\055\160\162\145\146" "\151\170\011\104\151\163\160\154\141\171\040\164\150\145\040\160" "\162\145\146\151\170\040\146\157\162\040\111\120\057\116\105\124" "\115\101\123\113\012\011\055\150\054\055\055\150\157\163\164\156" "\141\155\145\011\104\151\163\160\154\141\171\040\146\151\162\163" "\164\040\162\145\163\157\154\166\145\144\040\150\157\163\164\040" "\156\141\155\145\012\011\055\163\054\055\055\163\151\154\145\156" "\164\011\104\157\156\047\164\040\145\166\145\162\040\144\151\163" "\160\154\141\171\040\145\162\162\157\162\040\155\145\163\163\141" "\147\145\163\000\133\055\115\121\123\040\153\145\171\135\040\133" "\055\155\161\163\040\151\144\135\012\012\125\160\160\145\162\055" "\143\141\163\145\040\157\160\164\151\157\156\163\040\115\121\123" "\040\162\145\155\157\166\145\040\141\156\040\157\142\152\145\143" "\164\040\142\171\040\163\150\155\153\145\171\040\166\141\154\165" "\145\056\012\114\157\167\145\162\055\143\141\163\145\040\157\160" "\164\151\157\156\163\040\162\145\155\157\166\145\040\141\156\040" "\157\142\152\145\143\164\040\142\171\040\163\150\155\151\144\040" "\166\141\154\165\145\056\012\012\011\055\155\115\011\122\145\155" "\157\166\145\040\155\145\155\157\162\171\040\163\145\147\155\145" "\156\164\040\141\146\164\145\162\040\154\141\163\164\040\144\145" "\164\141\143\150\012\011\055\161\121\011\122\145\155\157\166\145" "\040\155\145\163\163\141\147\145\040\161\165\145\165\145\012\011" "\055\163\123\011\122\145\155\157\166\145\040\163\145\155\141\160" "\150\157\162\145\000\133\133\055\163\155\161\135\040\055\151\040" "\163\150\155\151\144\135\040\174\040\133\133\055\141\163\155\161" "\135\040\133\055\164\143\160\154\165\135\135\012\012\011\055\151" "\011\123\150\157\167\040\163\160\145\143\151\146\151\143\040\162" "\145\163\157\165\162\143\145\012\122\145\163\157\165\162\143\145" "\040\163\160\145\143\151\146\151\143\141\164\151\157\156\072\012" "\011\055\155\011\123\150\141\162\145\144\040\155\145\155\157\162" "\171\040\163\145\147\155\145\156\164\163\012\011\055\161\011\115" "\145\163\163\141\147\145\040\161\165\145\165\145\163\012\011\055" "\163\011\123\145\155\141\160\150\157\162\145\040\141\162\162\141" "\171\163\012\011\055\141\011\101\154\154\040\050\144\145\146\141" "\165\154\164\051\012\117\165\164\160\165\164\040\146\157\162\155" "\141\164\072\012\011\055\164\011\124\151\155\145\012\011\055\143" "\011\103\162\145\141\164\157\162\012\011\055\160\011\120\151\144" "\012\011\055\154\011\114\151\155\151\164\163\012\011\055\165\011" "\123\165\155\155\141\162\171\000\173\040\163\145\164\040\104\105" "\126\111\103\105\040\173\040\165\160\040\174\040\144\157\167\156" "\040\174\040\141\162\160\040\173\040\157\156\040\174\040\157\146" "\146\040\175\040\174\040\163\150\157\167\040\133\104\105\126\111" "\103\105\135\040\175\012\012\151\160\154\151\156\153\040\163\145" "\164\040\104\105\126\111\103\105\040\173\040\165\160\040\174\040" "\144\157\167\156\040\174\040\141\162\160\040\174\040\155\165\154" "\164\151\143\141\163\164\040\173\040\157\156\040\174\040\157\146" "\146\040\175\040\174\012\011\011\011\144\171\156\141\155\151\143" "\040\173\040\157\156\040\174\040\157\146\146\040\175\040\174\012" "\011\011\011\155\164\165\040\115\124\125\040\175\012\151\160\154" "\151\156\153\040\163\150\157\167\040\133\104\105\126\111\103\105" "\135\000\173\040\154\151\163\164\040\174\040\146\154\165\163\150" "\040\174\040\141\144\144\040\174\040\144\145\154\040\174\040\143" "\150\141\156\147\145\040\174\040\141\160\160\145\156\144\040\174" "\012\011\011\162\145\160\154\141\143\145\040\174\040\164\145\163" "\164\040\175\040\122\117\125\124\105\012\012\151\160\162\157\165" "\164\145\040\173\040\154\151\163\164\040\174\040\146\154\165\163" "\150\040\175\040\123\105\114\105\103\124\117\122\012\151\160\162" "\157\165\164\145\040\147\145\164\040\101\104\104\122\105\123\123" "\040\133\146\162\157\155\040\101\104\104\122\105\123\123\040\151" "\151\146\040\123\124\122\111\116\107\135\012\011\133\157\151\146" "\040\123\124\122\111\116\107\135\040\133\164\157\163\040\124\117" "\123\135\012\151\160\162\157\165\164\145\040\173\040\141\144\144" "\040\174\040\144\145\154\040\174\040\143\150\141\156\147\145\040" "\174\040\141\160\160\145\156\144\040\174\040\162\145\160\154\141" "\143\145\040\174\040\164\145\163\164\040\175\040\122\117\125\124" "\105\012\011\123\105\114\105\103\124\117\122\040\072\075\040\133" "\162\157\157\164\040\120\122\105\106\111\130\135\040\133\155\141" "\164\143\150\040\120\122\105\106\111\130\135\040\133\160\162\157" "\164\157\040\122\124\120\122\117\124\117\135\012\011\122\117\125" "\124\105\040\072\075\040\133\124\131\120\105\135\040\120\122\105" "\106\111\130\040\133\164\157\163\040\124\117\123\135\040\133\160" "\162\157\164\157\040\122\124\120\122\117\124\117\135\040\133\155" "\145\164\162\151\143\040\115\105\124\122\111\103\135\000\173\133" "\154\151\163\164\040\174\040\141\144\144\040\174\040\144\145\154" "\135\040\122\125\114\105\175\012\012\151\160\162\165\154\145\040" "\133\154\151\163\164\040\174\040\141\144\144\040\174\040\144\145" "\154\135\040\123\105\114\105\103\124\117\122\040\101\103\124\111" "\117\116\012\011\123\105\114\105\103\124\117\122\040\072\075\040" "\133\146\162\157\155\040\120\122\105\106\111\130\135\040\133\164" "\157\040\120\122\105\106\111\130\135\040\133\164\157\163\040\124" "\117\123\135\040\133\146\167\155\141\162\153\040\106\127\115\101" "\122\113\135\012\011\011\011\133\144\145\166\040\123\124\122\111" "\116\107\135\040\133\160\162\145\146\040\116\125\115\102\105\122" "\135\012\011\101\103\124\111\117\116\040\072\075\040\133\164\141" "\142\154\145\040\124\101\102\114\105\137\111\104\135\040\133\156" "\141\164\040\101\104\104\122\105\123\123\135\012\011\011\011\133" "\160\162\157\150\151\142\151\164\040\174\040\162\145\152\145\143" "\164\040\174\040\165\156\162\145\141\143\150\141\142\154\145\135" "\012\011\011\011\133\162\145\141\154\155\163\040\133\123\122\103" "\122\105\101\114\115\057\135\104\123\124\122\105\101\114\115\135" "\012\011\124\101\102\114\105\137\111\104\040\072\075\040\133\154" "\157\143\141\154\040\174\040\155\141\151\156\040\174\040\144\145" "\146\141\165\154\164\040\174\040\116\125\115\102\105\122\135\000" "\173\040\141\144\144\040\174\040\143\150\141\156\147\145\040\174" "\040\144\145\154\040\174\040\163\150\157\167\040\175\040\133\116" "\101\115\105\135\012\011\133\155\157\144\145\040\173\040\151\160" "\151\160\040\174\040\147\162\145\040\174\040\163\151\164\040\175" "\135\012\011\133\162\145\155\157\164\145\040\101\104\104\122\135" "\040\133\154\157\143\141\154\040\101\104\104\122\135\040\133\164" "\164\154\040\124\124\114\135\012\012\151\160\164\165\156\156\145" "\154\040\173\040\141\144\144\040\174\040\143\150\141\156\147\145" "\040\174\040\144\145\154\040\174\040\163\150\157\167\040\175\040" "\133\116\101\115\105\135\012\011\133\155\157\144\145\040\173\040" "\151\160\151\160\040\174\040\147\162\145\040\174\040\163\151\164" "\040\175\135\040\133\162\145\155\157\164\145\040\101\104\104\122" "\135\040\133\154\157\143\141\154\040\101\104\104\122\135\012\011" "\133\133\151\174\157\135\163\145\161\135\040\133\133\151\174\157" "\135\153\145\171\040\113\105\131\135\040\133\133\151\174\157\135" "\143\163\165\155\135\012\011\133\164\164\154\040\124\124\114\135" "\040\133\164\157\163\040\124\117\123\135\040\133\133\156\157\135" "\160\155\164\165\144\151\163\143\135\040\133\144\145\166\040\120" "\110\131\123\137\104\105\126\135\000\133\055\141\174\153\174\163" "\174\165\135\040\133\055\103\040\124\124\131\135\012\012\122\145" "\160\157\162\164\040\157\162\040\163\145\164\040\164\150\145\040" "\153\145\171\142\157\141\162\144\040\155\157\144\145\012\012\011" "\055\141\011\104\145\146\141\165\154\164\040\050\101\123\103\111" "\111\051\012\011\055\153\011\115\145\144\151\165\155\055\162\141" "\167\040\050\153\145\171\142\157\141\162\144\051\012\011\055\163" "\011\122\141\167\040\050\163\143\141\156\143\157\144\145\051\012" "\011\055\165\011\125\156\151\143\157\144\145\040\050\165\164\146" "\055\070\051\012\011\055\103\040\124\124\131\011\101\146\146\145" "\143\164\040\124\124\131\040\151\156\163\164\145\141\144\040\157" "\146\040\057\144\145\166\057\164\164\171\000\133\055\154\135\040" "\133\055\123\111\107\135\040\120\111\104\056\056\056\012\012\123" "\145\156\144\040\141\040\163\151\147\156\141\154\040\050\144\145" "\146\141\165\154\164\072\040\124\105\122\115\051\040\164\157\040" "\147\151\166\145\156\040\120\111\104\163\012\012\011\055\154\011" "\114\151\163\164\040\141\154\154\040\163\151\147\156\141\154\040" "\156\141\155\145\163\040\141\156\144\040\156\165\155\142\145\162" "\163\000\133\055\154\135\040\133\055\161\135\040\133\055\123\111" "\107\135\040\120\122\117\103\105\123\123\137\116\101\115\105\056" "\056\056\012\012\123\145\156\144\040\141\040\163\151\147\156\141" "\154\040\050\144\145\146\141\165\154\164\072\040\124\105\122\115" "\051\040\164\157\040\147\151\166\145\156\040\160\162\157\143\145" "\163\163\145\163\012\012\011\055\154\011\114\151\163\164\040\141" "\154\154\040\163\151\147\156\141\154\040\156\141\155\145\163\040" "\141\156\144\040\156\165\155\142\145\162\163\012\011\055\161\011" "\104\157\156\047\164\040\143\157\155\160\154\141\151\156\040\151" "\146\040\156\157\040\160\162\157\143\145\163\163\145\163\040\167" "\145\162\145\040\153\151\154\154\145\144\000\133\055\154\135\040" "\133\055\123\111\107\135\040\133\055\157\040\120\111\104\135\056" "\056\056\012\012\123\145\156\144\040\141\040\163\151\147\156\141" "\154\040\050\144\145\146\141\165\154\164\072\040\124\105\122\115" "\051\040\164\157\040\141\154\154\040\160\162\157\143\145\163\163" "\145\163\040\157\165\164\163\151\144\145\040\143\165\162\162\145" "\156\164\040\163\145\163\163\151\157\156\012\012\011\055\154\011" "\114\151\163\164\040\141\154\154\040\163\151\147\156\141\154\040" "\156\141\155\145\163\040\141\156\144\040\156\165\155\142\145\162" "\163\012\011\055\157\040\120\111\104\011\104\157\156\047\164\040" "\163\151\147\156\141\154\040\164\150\151\163\040\120\111\104\000" "\133\055\143\040\116\135\040\133\055\156\135\012\012\113\145\162" "\156\145\154\040\154\157\147\147\145\162\012\012\011\055\143\040" "\116\011\120\162\151\156\164\040\164\157\040\143\157\156\163\157" "\154\145\040\155\145\163\163\141\147\145\163\040\155\157\162\145" "\040\165\162\147\145\156\164\040\164\150\141\156\040\160\162\151" "\157\040\116\040\050\061\055\070\051\012\011\055\156\011\122\165" "\156\040\151\156\040\146\157\162\145\147\162\157\165\156\144\000" "\133\055\110\127\135\040\133\055\146\040\106\111\114\105\135\012" "\012\123\150\157\167\040\154\151\163\164\151\156\147\040\157\146" "\040\164\150\145\040\154\141\163\164\040\165\163\145\162\163\040" "\164\150\141\164\040\154\157\147\147\145\144\040\151\156\164\157" "\040\164\150\145\040\163\171\163\164\145\155\012\012\011\055\127" "\011\104\151\163\160\154\141\171\040\167\151\164\150\040\156\157" "\040\150\157\163\164\040\143\157\154\165\155\156\040\164\162\165" "\156\143\141\164\151\157\156\012\011\055\146\040\106\111\114\105" "\040\122\145\141\144\040\146\162\157\155\040\106\111\114\105\040" "\151\156\163\164\145\141\144\040\157\146\040\057\166\141\162\057" "\154\157\147\057\167\164\155\160\000\133\055\105\111\115\155\116" "\150\176\135\040\133\106\111\114\105\135\056\056\056\012\012\126" "\151\145\167\040\106\111\114\105\040\050\157\162\040\163\164\144" "\151\156\051\040\157\156\145\040\163\143\162\145\145\156\146\165" "\154\040\141\164\040\141\040\164\151\155\145\012\012\011\055\105" "\011\121\165\151\164\040\157\156\143\145\040\164\150\145\040\145" "\156\144\040\157\146\040\141\040\146\151\154\145\040\151\163\040" "\162\145\141\143\150\145\144\012\011\055\111\011\111\147\156\157" "\162\145\040\143\141\163\145\040\151\156\040\141\154\154\040\163" "\145\141\162\143\150\145\163\012\011\055\115\054\055\155\011\104" "\151\163\160\154\141\171\040\163\164\141\164\165\163\040\154\151" "\156\145\040\167\151\164\150\040\154\151\156\145\040\156\165\155" "\142\145\162\163\012\011\011\141\156\144\040\160\145\162\143\145" "\156\164\141\147\145\040\164\150\162\157\165\147\150\040\164\150" "\145\040\146\151\154\145\012\011\055\116\011\120\162\145\146\151" "\170\040\154\151\156\145\040\156\165\155\142\145\162\040\164\157" "\040\145\141\143\150\040\154\151\156\145\012\011\055\176\011\123" "\165\160\160\162\145\163\163\040\176\163\040\144\151\163\160\154" "\141\171\145\144\040\160\141\163\164\040\105\117\106\000\010\000" "\010\000\010\000\133\117\120\124\111\117\116\123\135\040\124\101" "\122\107\105\124\056\056\056\040\114\111\116\113\174\104\111\122" "\012\012\103\162\145\141\164\145\040\141\040\154\151\156\153\040" "\114\111\116\113\040\157\162\040\104\111\122\057\124\101\122\107" "\105\124\040\164\157\040\164\150\145\040\163\160\145\143\151\146" "\151\145\144\040\124\101\122\107\105\124\050\163\051\012\012\011" "\055\163\011\115\141\153\145\040\163\171\155\154\151\156\153\163" "\040\151\156\163\164\145\141\144\040\157\146\040\150\141\162\144" "\154\151\156\153\163\012\011\055\146\011\122\145\155\157\166\145" "\040\145\170\151\163\164\151\156\147\040\144\145\163\164\151\156" "\141\164\151\157\156\163\012\011\055\156\011\104\157\156\047\164" "\040\144\145\162\145\146\145\162\145\156\143\145\040\163\171\155" "\154\151\156\153\163\040\055\040\164\162\145\141\164\040\154\151" "\153\145\040\156\157\162\155\141\154\040\146\151\154\145\012\011" "\055\142\011\115\141\153\145\040\141\040\142\141\143\153\165\160" "\040\157\146\040\164\150\145\040\164\141\162\147\145\164\040\050" "\151\146\040\145\170\151\163\164\163\051\040\142\145\146\157\162" "\145\040\154\151\156\153\040\157\160\145\162\141\164\151\157\156" "\012\011\055\123\040\163\165\146\011\125\163\145\040\163\165\146" "\146\151\170\040\151\156\163\164\145\141\144\040\157\146\040\176" "\040\167\150\145\156\040\155\141\153\151\156\147\040\142\141\143" "\153\165\160\040\146\151\154\145\163\012\011\055\124\011\062\156" "\144\040\141\162\147\040\155\165\163\164\040\142\145\040\141\040" "\104\111\122\012\011\055\166\011\126\145\162\142\157\163\145\000" "\074\040\146\157\156\164\012\012\114\157\141\144\040\141\040\143" "\157\156\163\157\154\145\040\146\157\156\164\040\146\162\157\155" "\040\163\164\144\151\156\000\074\040\153\145\171\155\141\160\012" "\012\114\157\141\144\040\141\040\142\151\156\141\162\171\040\153" "\145\171\142\157\141\162\144\040\164\162\141\156\163\154\141\164" "\151\157\156\040\164\141\142\154\145\040\146\162\157\155\040\163" "\164\144\151\156\012\000\133\117\120\124\111\117\116\123\135\040" "\133\115\105\123\123\101\107\105\135\012\012\127\162\151\164\145" "\040\115\105\123\123\101\107\105\040\050\157\162\040\163\164\144" "\151\156\051\040\164\157\040\163\171\163\154\157\147\012\012\011" "\055\163\011\114\157\147\040\164\157\040\163\164\144\145\162\162" "\040\141\163\040\167\145\154\154\040\141\163\040\164\150\145\040" "\163\171\163\164\145\155\040\154\157\147\012\011\055\164\040\124" "\101\107\011\114\157\147\040\165\163\151\156\147\040\164\150\145" "\040\163\160\145\143\151\146\151\145\144\040\164\141\147\040\050" "\144\145\146\141\165\154\164\163\040\164\157\040\165\163\145\162" "\040\156\141\155\145\051\012\011\055\160\040\120\122\111\117\011" "\120\162\151\157\162\151\164\171\040\050\156\165\155\145\162\151" "\143\040\157\162\040\146\141\143\151\154\151\164\171\056\154\145" "\166\145\154\040\160\141\151\162\051\000\133\055\160\135\040\133" "\055\150\040\110\117\123\124\135\040\133\133\055\146\135\040\125" "\123\105\122\135\012\012\102\145\147\151\156\040\141\040\156\145" "\167\040\163\145\163\163\151\157\156\040\157\156\040\164\150\145" "\040\163\171\163\164\145\155\012\012\011\055\146\011\104\157\156" "\047\164\040\141\165\164\150\145\156\164\151\143\141\164\145\040" "\050\165\163\145\162\040\141\154\162\145\141\144\171\040\141\165" "\164\150\145\156\164\151\143\141\164\145\144\051\012\011\055\150" "\011\116\141\155\145\040\157\146\040\164\150\145\040\162\145\155" "\157\164\145\040\150\157\163\164\012\011\055\160\011\120\162\145" "\163\145\162\166\145\040\145\156\166\151\162\157\156\155\145\156" "\164\000\012\012\120\162\151\156\164\040\164\150\145\040\156\141" "\155\145\040\157\146\040\164\150\145\040\143\165\162\162\145\156" "\164\040\165\163\145\162\000\133\055\146\135\012\012\123\150\157" "\167\040\155\145\163\163\141\147\145\163\040\151\156\040\163\171" "\163\154\157\147\144\047\163\040\143\151\162\143\165\154\141\162" "\040\142\165\146\146\145\162\012\012\011\055\146\011\117\165\164" "\160\165\164\040\144\141\164\141\040\141\163\040\154\157\147\040" "\147\162\157\167\163\000\133\055\162\135\040\133\055\157\040\117" "\106\123\135\040\173\055\146\174\114\117\117\120\104\105\126\175" "\040\106\111\114\105\040\055\040\141\163\163\157\143\151\141\164" "\145\040\154\157\157\160\040\144\145\166\151\143\145\163\012\011" "\154\157\163\145\164\165\160\040\055\144\040\114\117\117\120\104" "\105\126\040\055\040\144\151\163\141\163\163\157\143\151\141\164" "\145\012\011\154\157\163\145\164\165\160\040\055\141\040\055\040" "\163\150\157\167\040\163\164\141\164\165\163\012\011\154\157\163" "\145\164\165\160\040\055\146\040\055\040\163\150\157\167\040\156" "\145\170\164\040\146\162\145\145\040\154\157\157\160\040\144\145" "\166\151\143\145\012\012\011\055\157\040\117\106\123\011\123\164" "\141\162\164\040\117\106\123\040\142\171\164\145\163\040\151\156" "\164\157\040\106\111\114\105\012\011\055\162\011\122\145\141\144" "\055\157\156\154\171\012\011\055\146\011\123\150\157\167\057\165" "\163\145\040\156\145\170\164\040\146\162\145\145\040\154\157\157" "\160\040\144\145\166\151\143\145\000\123\120\117\117\114\104\111" "\122\040\133\110\105\114\120\105\122\040\133\101\122\107\123\135" "\135\012\012\123\120\117\117\114\104\111\122\040\155\165\163\164" "\040\143\157\156\164\141\151\156\040\050\163\171\155\154\151\156" "\153\163\040\164\157\051\040\144\145\166\151\143\145\040\156\157" "\144\145\163\040\157\162\040\144\151\162\145\143\164\157\162\151" "\145\163\012\167\151\164\150\040\156\141\155\145\163\040\155\141" "\164\143\150\151\156\147\040\160\162\151\156\164\040\161\165\145" "\165\145\040\156\141\155\145\163\056\040\111\156\040\164\150\145" "\040\146\151\162\163\164\040\143\141\163\145\054\040\152\157\142" "\163\040\141\162\145\012\163\145\156\164\040\144\151\162\145\143" "\164\154\171\040\164\157\040\164\150\145\040\144\145\166\151\143" "\145\056\040\117\164\150\145\162\167\151\163\145\040\145\141\143" "\150\040\152\157\142\040\151\163\040\163\164\157\162\145\144\040" "\151\156\040\161\165\145\165\145\012\144\151\162\145\143\164\157" "\162\171\040\141\156\144\040\110\105\114\120\105\122\040\160\162" "\157\147\162\141\155\040\151\163\040\143\141\154\154\145\144\056" "\040\116\141\155\145\040\157\146\040\146\151\154\145\040\164\157" "\040\160\162\151\156\164\012\151\163\040\160\141\163\163\145\144" "\040\151\156\040\044\104\101\124\101\106\111\114\105\040\166\141" "\162\151\141\142\154\145\056\012\105\170\141\155\160\154\145\072" "\012\011\164\143\160\163\166\144\040\055\105\040\060\040\065\061" "\065\040\163\157\146\164\154\151\155\151\164\040\055\155\040\071" "\071\071\071\071\071\040\154\160\144\040\057\166\141\162\057\163" "\160\157\157\154\040\056\057\160\162\151\156\164\000\133\055\120" "\040\161\165\145\165\145\133\100\150\157\163\164\133\072\160\157" "\162\164\135\135\135\040\133\055\125\040\125\123\105\122\116\101" "\115\105\135\040\133\055\144\040\112\117\102\111\104\135\056\056" "\056\040\133\055\146\163\135\012\012\011\055\120\011\154\160\040" "\163\145\162\166\151\143\145\040\164\157\040\143\157\156\156\145" "\143\164\040\164\157\040\050\145\154\163\145\040\165\163\145\163" "\040\044\120\122\111\116\124\105\122\051\012\011\055\144\011\104" "\145\154\145\164\145\040\152\157\142\163\012\011\055\146\011\106" "\157\162\143\145\040\141\156\171\040\167\141\151\164\151\156\147" "\040\152\157\142\040\164\157\040\142\145\040\160\162\151\156\164" "\145\144\012\011\055\163\011\123\150\157\162\164\040\144\151\163" "\160\154\141\171\000\055\120\040\161\165\145\165\145\133\100\150" "\157\163\164\133\072\160\157\162\164\135\135\040\055\125\040\125" "\123\105\122\116\101\115\105\040\055\112\040\124\111\124\114\105" "\040\055\126\155\150\040\133\106\111\114\105\135\056\056\056\012" "\012\011\055\120\011\154\160\040\163\145\162\166\151\143\145\040" "\164\157\040\143\157\156\156\145\143\164\040\164\157\040\050\145" "\154\163\145\040\165\163\145\163\040\044\120\122\111\116\124\105" "\122\051\012\011\055\155\011\123\145\156\144\040\155\141\151\154" "\040\157\156\040\143\157\155\160\154\145\164\151\157\156\012\011" "\055\150\011\120\162\151\156\164\040\142\141\156\156\145\162\040" "\160\141\147\145\040\164\157\157\012\011\055\126\011\126\145\162" "\142\157\163\145\000\133\055\061\101\141\103\170\144\114\110\122" "\106\160\154\151\156\163\145\150\162\123\130\166\143\164\165\135" "\040\133\055\167\040\127\111\104\124\110\135\040\133\106\111\114" "\105\135\056\056\056\012\012\114\151\163\164\040\144\151\162\145" "\143\164\157\162\171\040\143\157\156\164\145\156\164\163\012\012" "\011\055\061\011\117\156\145\040\143\157\154\165\155\156\040\157" "\165\164\160\165\164\012\011\055\141\011\111\156\143\154\165\144" "\145\040\145\156\164\162\151\145\163\040\167\150\151\143\150\040" "\163\164\141\162\164\040\167\151\164\150\040\056\012\011\055\101" "\011\114\151\153\145\040\055\141\054\040\142\165\164\040\145\170" "\143\154\165\144\145\040\056\040\141\156\144\040\056\056\012\011" "\055\103\011\114\151\163\164\040\142\171\040\143\157\154\165\155" "\156\163\012\011\055\170\011\114\151\163\164\040\142\171\040\154" "\151\156\145\163\012\011\055\144\011\114\151\163\164\040\144\151" "\162\145\143\164\157\162\171\040\145\156\164\162\151\145\163\040" "\151\156\163\164\145\141\144\040\157\146\040\143\157\156\164\145" "\156\164\163\012\011\055\114\011\106\157\154\154\157\167\040\163" "\171\155\154\151\156\153\163\012\011\055\110\011\106\157\154\154" "\157\167\040\163\171\155\154\151\156\153\163\040\157\156\040\143" "\157\155\155\141\156\144\040\154\151\156\145\012\011\055\122\011" "\122\145\143\165\162\163\145\012\011\055\160\011\101\160\160\145" "\156\144\040\057\040\164\157\040\144\151\162\040\145\156\164\162" "\151\145\163\012\011\055\106\011\101\160\160\145\156\144\040\151" "\156\144\151\143\141\164\157\162\040\050\157\156\145\040\157\146" "\040\052\057\075\100\174\051\040\164\157\040\145\156\164\162\151" "\145\163\012\011\055\154\011\114\157\156\147\040\154\151\163\164" "\151\156\147\040\146\157\162\155\141\164\012\011\055\151\011\114" "\151\163\164\040\151\156\157\144\145\040\156\165\155\142\145\162" "\163\012\011\055\156\011\114\151\163\164\040\156\165\155\145\162" "\151\143\040\125\111\104\163\040\141\156\144\040\107\111\104\163" "\040\151\156\163\164\145\141\144\040\157\146\040\156\141\155\145" "\163\012\011\055\163\011\114\151\163\164\040\141\154\154\157\143" "\141\164\145\144\040\142\154\157\143\153\163\012\011\055\145\011" "\114\151\163\164\040\146\165\154\154\040\144\141\164\145\040\141" "\156\144\040\164\151\155\145\012\011\055\150\011\114\151\163\164" "\040\163\151\172\145\163\040\151\156\040\150\165\155\141\156\040" "\162\145\141\144\141\142\154\145\040\146\157\162\155\141\164\040" "\050\061\113\040\062\064\063\115\040\062\107\051\012\011\055\162" "\011\123\157\162\164\040\151\156\040\162\145\166\145\162\163\145" "\040\157\162\144\145\162\012\011\055\123\011\123\157\162\164\040" "\142\171\040\163\151\172\145\012\011\055\130\011\123\157\162\164" "\040\142\171\040\145\170\164\145\156\163\151\157\156\012\011\055" "\166\011\123\157\162\164\040\142\171\040\166\145\162\163\151\157" "\156\012\011\055\143\011\127\151\164\150\040\055\154\072\040\163" "\157\162\164\040\142\171\040\143\164\151\155\145\012\011\055\164" "\011\127\151\164\150\040\055\154\072\040\163\157\162\164\040\142" "\171\040\155\164\151\155\145\012\011\055\165\011\127\151\164\150" "\040\055\154\072\040\163\157\162\164\040\142\171\040\141\164\151" "\155\145\012\011\055\167\040\116\011\101\163\163\165\155\145\040" "\164\150\145\040\164\145\162\155\151\156\141\154\040\151\163\040" "\116\040\143\157\154\165\155\156\163\040\167\151\144\145\012\011" "\055\055\143\157\154\157\162\133\075\173\141\154\167\141\171\163" "\054\156\145\166\145\162\054\141\165\164\157\175\135\011\103\157" "\156\164\162\157\154\040\143\157\154\157\162\151\156\147\000\133" "\055\122\141\144\154\166\135\040\133\106\111\114\105\135\056\056" "\056\012\012\114\151\163\164\040\146\151\154\145\040\141\164\164" "\162\151\142\165\164\145\163\040\157\156\040\141\156\040\145\170" "\164\062\040\146\163\012\012\011\055\122\011\122\145\143\165\162" "\163\145\012\011\055\141\011\104\157\156\047\164\040\150\151\144" "\145\040\145\156\164\162\151\145\163\040\163\164\141\162\164\151" "\156\147\040\167\151\164\150\040\056\012\011\055\144\011\114\151" "\163\164\040\144\151\162\145\143\164\157\162\171\040\145\156\164" "\162\151\145\163\040\151\156\163\164\145\141\144\040\157\146\040" "\143\157\156\164\145\156\164\163\012\011\055\154\011\114\151\163" "\164\040\154\157\156\147\040\146\154\141\147\040\156\141\155\145" "\163\012\011\055\166\011\114\151\163\164\040\164\150\145\040\146" "\151\154\145\047\163\040\166\145\162\163\151\157\156\057\147\145" "\156\145\162\141\164\151\157\156\040\156\165\155\142\145\162\000" "\133\055\161\146\167\162\163\166\135\040\115\117\104\125\114\105" "\040\133\163\171\155\142\157\154\075\166\141\154\165\145\135\056" "\056\056\012\012\011\055\162\011\122\145\155\157\166\145\040\115" "\117\104\125\114\105\040\050\163\164\141\143\153\163\051\040\157" "\162\040\144\157\040\141\165\164\157\143\154\145\141\156\012\011" "\055\161\011\121\165\151\145\164\012\011\055\166\011\126\145\162" "\142\157\163\145\012\011\055\146\011\106\157\162\143\145\012\011" "\055\167\011\127\141\151\164\040\146\157\162\040\165\156\154\157" "\141\144\012\011\055\163\011\122\145\160\157\162\164\040\166\151" "\141\040\163\171\163\154\157\147\040\151\156\163\164\145\141\144" "\040\157\146\040\163\164\144\145\162\162\000\012\012\123\150\157" "\167\040\141\154\154\040\157\160\145\156\040\146\151\154\145\163" "\000\133\055\155\153\135\012\012\114\151\163\164\040\141\154\154" "\040\120\103\111\040\144\145\166\151\143\145\163\012\012\011\055" "\155\011\120\141\162\163\141\142\154\145\040\157\165\164\160\165" "\164\012\011\055\153\011\123\150\157\167\040\144\162\151\166\145" "\162\000\010\000\133\106\111\114\105\135\056\056\056\012\012\104" "\145\143\157\155\160\162\145\163\163\040\164\157\040\163\164\144" "\157\165\164\000\055\144\040\133\055\143\146\135\040\133\106\111" "\114\105\135\056\056\056\012\012\104\145\143\157\155\160\162\145" "\163\163\040\106\111\114\105\040\050\157\162\040\163\164\144\151" "\156\051\012\012\011\055\144\011\104\145\143\157\155\160\162\145" "\163\163\012\011\055\143\011\127\162\151\164\145\040\164\157\040" "\163\164\144\157\165\164\012\011\055\146\011\106\157\162\143\145" "\000\133\055\143\146\166\144\061\062\063\064\065\066\067\070\071" "\103\106\135\040\133\106\111\114\105\135\056\056\056\012\012\011" "\055\061\056\056\071\011\103\157\155\160\162\145\163\163\151\157" "\156\040\154\145\166\145\154\012\011\055\144\011\104\145\143\157" "\155\160\162\145\163\163\012\011\055\143\011\127\162\151\164\145" "\040\164\157\040\163\164\144\157\165\164\012\011\055\146\011\106" "\157\162\143\145\012\011\055\166\011\126\145\162\142\157\163\145" "\012\011\055\106\011\104\157\156\047\164\040\163\164\157\162\145" "\040\157\162\040\166\145\162\151\146\171\040\143\150\145\143\153" "\163\165\155\012\011\055\103\011\101\154\163\157\040\167\162\151" "\164\145\040\143\150\145\143\153\163\165\155\040\157\146\040\143" "\157\155\160\162\145\163\163\145\144\040\142\154\157\143\153\000" "\133\055\166\103\106\135\040\133\106\111\114\105\135\056\056\056" "\012\012\011\055\166\011\126\145\162\142\157\163\145\012\011\055" "\106\011\104\157\156\047\164\040\163\164\157\162\145\040\157\162" "\040\166\145\162\151\146\171\040\143\150\145\143\153\163\165\155" "\000\133\055\144\040\144\145\166\151\143\145\137\164\141\142\154" "\145\135\040\162\157\157\164\144\151\162\012\012\103\162\145\141" "\164\145\040\141\040\162\141\156\147\145\040\157\146\040\163\160" "\145\143\151\141\154\040\146\151\154\145\163\040\141\163\040\163" "\160\145\143\151\146\151\145\144\040\151\156\040\141\040\144\145" "\166\151\143\145\040\164\141\142\154\145\056\012\104\145\166\151" "\143\145\040\164\141\142\154\145\040\145\156\164\162\151\145\163" "\040\164\141\153\145\040\164\150\145\040\146\157\162\155\040\157" "\146\072\012\074\156\141\155\145\076\040\074\164\171\160\145\076" "\040\074\155\157\144\145\076\040\074\165\151\144\076\040\074\147" "\151\144\076\040\074\155\141\152\157\162\076\040\074\155\151\156" "\157\162\076\040\074\163\164\141\162\164\076\040\074\151\156\143" "\076\040\074\143\157\165\156\164\076\012\127\150\145\162\145\040" "\156\141\155\145\040\151\163\040\164\150\145\040\146\151\154\145" "\040\156\141\155\145\054\040\164\171\160\145\040\143\141\156\040" "\142\145\040\157\156\145\040\157\146\072\012\011\146\011\122\145" "\147\165\154\141\162\040\146\151\154\145\012\011\144\011\104\151" "\162\145\143\164\157\162\171\012\011\143\011\103\150\141\162\141" "\143\164\145\162\040\144\145\166\151\143\145\012\011\142\011\102" "\154\157\143\153\040\144\145\166\151\143\145\012\011\160\011\106" "\151\146\157\040\050\156\141\155\145\144\040\160\151\160\145\051" "\012\165\151\144\040\151\163\040\164\150\145\040\165\163\145\162" "\040\151\144\040\146\157\162\040\164\150\145\040\164\141\162\147" "\145\164\040\146\151\154\145\054\040\147\151\144\040\151\163\040" "\164\150\145\040\147\162\157\165\160\040\151\144\040\146\157\162" "\040\164\150\145\012\164\141\162\147\145\164\040\146\151\154\145" "\056\040\124\150\145\040\162\145\163\164\040\157\146\040\164\150" "\145\040\145\156\164\162\151\145\163\040\050\155\141\152\157\162" "\054\040\155\151\156\157\162\054\040\145\164\143\051\040\141\160" "\160\154\171\040\164\157\012\164\157\040\144\145\166\151\143\145" "\040\163\160\145\143\151\141\154\040\146\151\154\145\163\056\040" "\101\040\047\055\047\040\155\141\171\040\142\145\040\165\163\145" "\144\040\146\157\162\040\142\154\141\156\153\040\145\156\164\162" "\151\145\163\056\000\133\117\120\124\111\117\116\123\135\040\133" "\106\111\114\105\135\056\056\056\012\012\103\162\145\141\164\145" "\040\155\165\154\164\151\160\141\162\164\040\115\111\115\105\055" "\145\156\143\157\144\145\144\040\155\145\163\163\141\147\145\040" "\146\162\157\155\040\106\111\114\105\163\012\012\011\055\157\040" "\106\111\114\105\011\117\165\164\160\165\164\056\040\104\145\146" "\141\165\154\164\072\040\163\164\144\157\165\164\012\011\055\141" "\040\110\104\122\011\101\144\144\040\150\145\141\144\145\162\050" "\163\051\056\040\105\170\141\155\160\154\145\163\072\012\011\011" "\042\106\162\157\155\072\040\165\163\145\162\100\150\157\163\164" "\056\157\162\147\042\054\040\042\104\141\164\145\072\040\140\144" "\141\164\145\040\055\122\140\042\012\011\055\143\040\103\124\011" "\103\157\156\164\145\156\164\040\164\171\160\145\056\040\104\145" "\146\141\165\154\164\072\040\141\160\160\154\151\143\141\164\151" "\157\156\057\157\143\164\145\164\055\163\164\162\145\141\155\012" "\011\055\103\040\103\123\011\103\150\141\162\163\145\164\056\040" "\104\145\146\141\165\154\164\072\040\165\163\055\141\163\143\151" "\151\012\012\117\164\150\145\162\040\157\160\164\151\157\156\163" "\040\141\162\145\040\163\151\154\145\156\164\154\171\040\151\147" "\156\157\162\145\144\000\133\055\141\167\135\040\133\115\101\116" "\120\101\107\105\135\056\056\056\012\012\106\157\162\155\141\164" "\040\141\156\144\040\144\151\163\160\154\141\171\040\155\141\156" "\165\141\154\040\160\141\147\145\012\012\011\055\141\011\104\151" "\163\160\154\141\171\040\141\154\154\040\160\141\147\145\163\012" "\011\055\167\011\123\150\157\167\040\160\141\147\145\040\154\157" "\143\141\164\151\157\156\163\000\133\055\143\133\163\167\135\135" "\040\133\106\111\114\105\135\056\056\056\012\012\120\162\151\156" "\164\040\157\162\040\143\150\145\143\153\040\115\104\065\040\143" "\150\145\143\153\163\165\155\163\012\012\011\055\143\011\103\150" "\145\143\153\040\163\165\155\163\040\141\147\141\151\156\163\164" "\040\154\151\163\164\040\151\156\040\106\111\114\105\163\012\011" "\055\163\011\104\157\156\047\164\040\157\165\164\160\165\164\040" "\141\156\171\164\150\151\156\147\054\040\163\164\141\164\165\163" "\040\143\157\144\145\040\163\150\157\167\163\040\163\165\143\143" "\145\163\163\012\011\055\167\011\127\141\162\156\040\141\142\157" "\165\164\040\151\155\160\162\157\160\145\162\154\171\040\146\157" "\162\155\141\164\164\145\144\040\143\150\145\143\153\163\165\155" "\040\154\151\156\145\163\000\133\055\163\135\012\012\155\144\145" "\166\040\055\163\040\151\163\040\164\157\040\142\145\040\162\165" "\156\040\144\165\162\151\156\147\040\142\157\157\164\040\164\157" "\040\163\143\141\156\040\057\163\171\163\040\141\156\144\040\160" "\157\160\165\154\141\164\145\040\057\144\145\166\056\012\012\102" "\141\162\145\040\155\144\145\166\040\151\163\040\141\040\153\145" "\162\156\145\154\040\150\157\164\160\154\165\147\040\150\145\154" "\160\145\162\056\040\124\157\040\141\143\164\151\166\141\164\145" "\040\151\164\072\012\011\145\143\150\157\040\057\163\142\151\156" "\057\155\144\145\166\040\076\057\160\162\157\143\057\163\171\163" "\057\153\145\162\156\145\154\057\150\157\164\160\154\165\147\012" "\012\111\164\040\165\163\145\163\040\057\145\164\143\057\155\144" "\145\166\056\143\157\156\146\040\167\151\164\150\040\154\151\156" "\145\163\012\011\133\055\135\133\105\116\126\075\162\145\147\145" "\170\073\135\056\056\056\104\105\126\116\101\115\105\040\125\111" "\104\072\107\111\104\040\120\105\122\115\040\133\076\174\075\120" "\101\124\110\135\174\133\041\135\040\133\100\174\044\174\052\120" "\122\117\107\135\012\167\150\145\162\145\040\104\105\126\116\101" "\115\105\040\151\163\040\144\145\166\151\143\145\040\156\141\155" "\145\040\162\145\147\145\170\054\040\100\155\141\152\157\162\054" "\155\151\156\157\162\133\055\155\151\156\157\162\062\135\054\040" "\157\162\012\145\156\166\151\162\157\156\155\145\156\164\040\166" "\141\162\151\141\142\154\145\040\162\145\147\145\170\056\040\101" "\040\143\157\155\155\157\156\040\165\163\145\040\157\146\040\164" "\150\145\040\154\141\164\164\145\162\040\151\163\012\164\157\040" "\154\157\141\144\040\155\157\144\165\154\145\163\040\146\157\162" "\040\150\157\164\160\154\165\147\147\145\144\040\144\145\166\151" "\143\145\163\072\012\011\044\115\117\104\101\114\111\101\123\075" "\056\052\040\060\072\060\040\066\066\060\040\100\155\157\144\160" "\162\157\142\145\040\042\044\115\117\104\101\114\111\101\123\042" "\012\012\111\146\040\057\144\145\166\057\155\144\145\166\056\163" "\145\161\040\146\151\154\145\040\145\170\151\163\164\163\054\040" "\155\144\145\166\040\167\151\154\154\040\167\141\151\164\040\146" "\157\162\040\151\164\163\040\166\141\154\165\145\012\164\157\040" "\155\141\164\143\150\040\044\123\105\121\116\125\115\040\166\141" "\162\151\141\142\154\145\056\040\124\150\151\163\040\160\162\145" "\166\145\156\164\163\040\160\154\165\147\057\165\156\160\154\165" "\147\040\162\141\143\145\163\056\012\124\157\040\141\143\164\151" "\166\141\164\145\040\164\150\151\163\040\146\145\141\164\165\162" "\145\054\040\143\162\145\141\164\145\040\145\155\160\164\171\040" "\057\144\145\166\057\155\144\145\166\056\163\145\161\040\141\164" "\040\142\157\157\164\056\012\012\111\146\040\057\144\145\166\057" "\155\144\145\166\056\154\157\147\040\146\151\154\145\040\145\170" "\151\163\164\163\054\040\144\145\142\165\147\040\154\157\147\040" "\167\151\154\154\040\142\145\040\141\160\160\145\156\144\145\144" "\040\164\157\040\151\164\056\000\133\171\174\156\135\012\012\103" "\157\156\164\162\157\154\040\167\162\151\164\145\040\141\143\143" "\145\163\163\040\164\157\040\171\157\165\162\040\164\145\162\155" "\151\156\141\154\012\011\171\011\101\154\154\157\167\040\167\162" "\151\164\145\040\141\143\143\145\163\163\040\164\157\040\171\157" "\165\162\040\164\145\162\155\151\156\141\154\012\011\156\011\104" "\151\163\141\154\154\157\167\040\167\162\151\164\145\040\141\143" "\143\145\163\163\040\164\157\040\171\157\165\162\040\164\145\162" "\155\151\156\141\154\000\133\055\144\040\104\105\114\101\131\135" "\040\133\055\164\040\124\111\115\105\117\125\124\135\040\133\055" "\163\040\123\120\105\105\104\135\040\133\055\130\135\040\124\124" "\131\012\012\103\157\160\171\040\142\171\164\145\163\040\146\157" "\162\040\163\164\144\151\156\040\164\157\040\124\124\131\040\141" "\156\144\040\146\162\157\155\040\124\124\131\040\164\157\040\163" "\164\144\157\165\164\012\012\011\055\144\011\127\141\151\164\040" "\165\160\040\164\157\040\104\105\114\101\131\040\155\163\040\146" "\157\162\040\124\124\131\040\157\165\164\160\165\164\040\142\145" "\146\157\162\145\040\163\145\156\144\151\156\147\040\145\166\145" "\162\171\012\011\011\156\145\170\164\040\142\171\164\145\040\164" "\157\040\151\164\012\011\055\164\011\105\170\151\164\040\151\146" "\040\142\157\164\150\040\163\164\144\151\156\040\141\156\144\040" "\124\124\131\040\141\162\145\040\163\151\154\145\156\164\040\146" "\157\162\040\124\111\115\105\117\125\124\040\155\163\012\011\055" "\163\011\123\145\164\040\163\145\162\151\141\154\040\154\151\156" "\145\040\164\157\040\123\120\105\105\104\012\011\055\130\011\104" "\151\163\141\142\154\145\040\163\160\145\143\151\141\154\040\155" "\145\141\156\151\156\147\040\157\146\040\116\125\114\040\141\156" "\144\040\103\164\162\154\055\130\040\146\162\157\155\040\163\164" "\144\151\156\000\133\117\120\124\111\117\116\123\135\040\104\111" "\122\105\103\124\117\122\131\056\056\056\012\012\103\162\145\141" "\164\145\040\104\111\122\105\103\124\117\122\131\012\012\011\055" "\155\040\115\117\104\105\011\115\157\144\145\012\011\055\160\011" "\116\157\040\145\162\162\157\162\040\151\146\040\145\170\151\163" "\164\163\073\040\155\141\153\145\040\160\141\162\145\156\164\040" "\144\151\162\145\143\164\157\162\151\145\163\040\141\163\040\156" "\145\145\144\145\144\000\133\055\166\135\040\133\055\156\040\114" "\101\102\105\114\135\040\102\114\117\103\113\104\105\126\040\133" "\113\102\131\124\105\123\135\012\012\115\141\153\145\040\141\040" "\106\101\124\063\062\040\146\151\154\145\163\171\163\164\145\155" "\012\012\011\055\166\011\126\145\162\142\157\163\145\012\011\055" "\156\040\114\102\114\011\126\157\154\165\155\145\040\154\141\142" "\145\154\000\133\055\106\156\135\040\133\055\142\040\102\114\113" "\137\123\111\132\105\135\040\133\055\151\040\111\116\117\104\105" "\137\122\101\124\111\117\135\040\133\055\111\040\111\116\117\104" "\105\137\123\111\132\105\135\040\133\055\155\040\122\105\123\105" "\122\126\105\104\137\120\105\122\103\105\116\124\135\040\133\055" "\114\040\114\101\102\105\114\135\040\102\114\117\103\113\104\105" "\126\040\133\113\102\131\124\105\123\135\012\012\011\055\142\040" "\102\114\113\137\123\111\132\105\011\102\154\157\143\153\040\163" "\151\172\145\054\040\142\171\164\145\163\012\011\055\106\011\011" "\106\157\162\143\145\012\011\055\151\040\122\101\124\111\117\011" "\115\141\170\040\156\165\155\142\145\162\040\157\146\040\146\151" "\154\145\163\040\151\163\040\146\151\154\145\163\171\163\164\145" "\155\137\163\151\172\145\040\057\040\122\101\124\111\117\012\011" "\055\111\040\102\131\124\105\123\011\111\156\157\144\145\040\163" "\151\172\145\040\050\155\151\156\040\061\062\070\051\012\011\055" "\114\040\114\102\114\011\011\126\157\154\165\155\145\040\154\141" "\142\145\154\012\011\055\155\040\120\105\122\103\105\116\124\011" "\120\145\162\143\145\156\164\040\157\146\040\142\154\157\143\153" "\163\040\164\157\040\162\145\163\145\162\166\145\040\146\157\162" "\040\141\144\155\151\156\012\011\055\156\011\011\104\162\171\040" "\162\165\156\000\133\055\155\040\115\117\104\105\135\040\116\101" "\115\105\012\012\103\162\145\141\164\145\040\156\141\155\145\144" "\040\160\151\160\145\012\012\011\055\155\040\115\117\104\105\011" "\115\157\144\145\040\050\144\145\146\141\165\154\164\040\141\075" "\162\167\051\000\133\055\106\156\135\040\133\055\142\040\102\114" "\113\137\123\111\132\105\135\040\133\055\151\040\111\116\117\104" "\105\137\122\101\124\111\117\135\040\133\055\111\040\111\116\117" "\104\105\137\123\111\132\105\135\040\133\055\155\040\122\105\123" "\105\122\126\105\104\137\120\105\122\103\105\116\124\135\040\133" "\055\114\040\114\101\102\105\114\135\040\102\114\117\103\113\104" "\105\126\040\133\113\102\131\124\105\123\135\012\012\011\055\142" "\040\102\114\113\137\123\111\132\105\011\102\154\157\143\153\040" "\163\151\172\145\054\040\142\171\164\145\163\012\011\055\106\011" "\011\106\157\162\143\145\012\011\055\151\040\122\101\124\111\117" "\011\115\141\170\040\156\165\155\142\145\162\040\157\146\040\146" "\151\154\145\163\040\151\163\040\146\151\154\145\163\171\163\164" "\145\155\137\163\151\172\145\040\057\040\122\101\124\111\117\012" "\011\055\111\040\102\131\124\105\123\011\111\156\157\144\145\040" "\163\151\172\145\040\050\155\151\156\040\061\062\070\051\012\011" "\055\114\040\114\102\114\011\011\126\157\154\165\155\145\040\154" "\141\142\145\154\012\011\055\155\040\120\105\122\103\105\116\124" "\011\120\145\162\143\145\156\164\040\157\146\040\142\154\157\143" "\153\163\040\164\157\040\162\145\163\145\162\166\145\040\146\157" "\162\040\141\144\155\151\156\012\011\055\156\011\011\104\162\171" "\040\162\165\156\000\133\055\143\040\174\040\055\154\040\106\111" "\114\105\135\040\133\055\156\130\130\135\040\133\055\151\130\130" "\135\040\102\114\117\103\113\104\105\126\040\133\113\102\131\124" "\105\123\135\012\012\115\141\153\145\040\141\040\115\111\116\111" "\130\040\146\151\154\145\163\171\163\164\145\155\012\012\011\055" "\143\011\011\103\150\145\143\153\040\144\145\166\151\143\145\040" "\146\157\162\040\142\141\144\040\142\154\157\143\153\163\012\011" "\055\156\040\133\061\064\174\063\060\135\011\115\141\170\151\155" "\165\155\040\154\145\156\147\164\150\040\157\146\040\146\151\154" "\145\156\141\155\145\163\012\011\055\151\040\111\116\117\104\105" "\123\011\116\165\155\142\145\162\040\157\146\040\151\156\157\144" "\145\163\040\146\157\162\040\164\150\145\040\146\151\154\145\163" "\171\163\164\145\155\012\011\055\154\040\106\111\114\105\011\011" "\122\145\141\144\040\142\141\144\040\142\154\157\143\153\163\040" "\154\151\163\164\040\146\162\157\155\040\106\111\114\105\012\011" "\055\166\011\011\115\141\153\145\040\166\145\162\163\151\157\156" "\040\062\040\146\151\154\145\163\171\163\164\145\155\000\133\055" "\166\135\040\133\055\156\040\114\101\102\105\114\135\040\102\114" "\117\103\113\104\105\126\040\133\113\102\131\124\105\123\135\012" "\012\115\141\153\145\040\141\040\106\101\124\063\062\040\146\151" "\154\145\163\171\163\164\145\155\012\012\011\055\166\011\126\145" "\162\142\157\163\145\012\011\055\156\040\114\102\114\011\126\157" "\154\165\155\145\040\154\141\142\145\154\000\133\055\155\040\115" "\117\104\105\135\040\116\101\115\105\040\124\131\120\105\040\115" "\101\112\117\122\040\115\111\116\117\122\012\012\103\162\145\141" "\164\145\040\141\040\163\160\145\143\151\141\154\040\146\151\154" "\145\040\050\142\154\157\143\153\054\040\143\150\141\162\141\143" "\164\145\162\054\040\157\162\040\160\151\160\145\051\012\012\011" "\055\155\040\115\117\104\105\011\103\162\145\141\164\151\157\156" "\040\155\157\144\145\040\050\144\145\146\141\165\154\164\040\141" "\075\162\167\051\012\124\131\120\105\072\012\011\142\011\102\154" "\157\143\153\040\144\145\166\151\143\145\012\011\143\040\157\162" "\040\165\011\103\150\141\162\141\143\164\145\162\040\144\145\166" "\151\143\145\012\011\160\011\116\141\155\145\144\040\160\151\160" "\145\040\050\115\101\112\117\122\040\141\156\144\040\115\111\116" "\117\122\040\141\162\145\040\151\147\156\157\162\145\144\051\000" "\133\117\120\124\111\117\116\123\135\040\133\120\101\123\123\127" "\117\122\104\135\040\133\123\101\114\124\135\012\012\103\162\171" "\160\164\040\120\101\123\123\127\117\122\104\040\165\163\151\156" "\147\040\143\162\171\160\164\050\063\051\012\012\011\055\120\054" "\055\055\160\141\163\163\167\157\162\144\055\146\144\075\116\011" "\122\145\141\144\040\160\141\163\163\167\157\162\144\040\146\162" "\157\155\040\146\144\040\116\012\011\055\155\054\055\055\155\145" "\164\150\157\144\075\124\131\120\105\011\105\156\143\162\171\160" "\164\151\157\156\040\155\145\164\150\157\144\012\011\055\123\054" "\055\055\163\141\154\164\075\123\101\114\124\000\133\055\114\040" "\114\102\114\135\040\102\114\117\103\113\104\105\126\040\133\113" "\102\131\124\105\123\135\012\012\120\162\145\160\141\162\145\040" "\102\114\117\103\113\104\105\126\040\164\157\040\142\145\040\165" "\163\145\144\040\141\163\040\163\167\141\160\040\160\141\162\164" "\151\164\151\157\156\012\012\011\055\114\040\114\102\114\011\114" "\141\142\145\154\000\133\055\144\164\135\040\133\055\160\040\104" "\111\122\135\040\133\124\105\115\120\114\101\124\105\135\012\012" "\103\162\145\141\164\145\040\141\040\164\145\155\160\157\162\141" "\162\171\040\146\151\154\145\040\167\151\164\150\040\156\141\155" "\145\040\142\141\163\145\144\040\157\156\040\124\105\115\120\114" "\101\124\105\040\141\156\144\040\160\162\151\156\164\040\151\164" "\163\040\156\141\155\145\056\012\124\105\115\120\114\101\124\105" "\040\155\165\163\164\040\145\156\144\040\167\151\164\150\040\130" "\130\130\130\130\130\040\050\145\056\147\056\040\133\057\144\151" "\162\057\135\156\141\155\145\130\130\130\130\130\130\051\056\012" "\127\151\164\150\157\165\164\040\124\105\115\120\114\101\124\105" "\054\040\055\164\040\164\155\160\056\130\130\130\130\130\130\040" "\151\163\040\141\163\163\165\155\145\144\056\012\012\011\055\144" "\011\115\141\153\145\040\144\151\162\145\143\164\157\162\171\054" "\040\156\157\164\040\146\151\154\145\012\011\055\161\011\106\141" "\151\154\040\163\151\154\145\156\164\154\171\040\157\156\040\145" "\162\162\157\162\163\012\011\055\164\011\120\162\145\160\145\156" "\144\040\142\141\163\145\040\144\151\162\145\143\164\157\162\171" "\040\156\141\155\145\040\164\157\040\124\105\115\120\114\101\124" "\105\012\011\055\160\040\104\111\122\011\125\163\145\040\104\111" "\122\040\141\163\040\141\040\142\141\163\145\040\144\151\162\145" "\143\164\157\162\171\040\050\151\155\160\154\151\145\163\040\055" "\164\051\012\011\055\165\011\104\157\040\156\157\164\040\143\162" "\145\141\164\145\040\141\156\171\164\150\151\156\147\073\040\160" "\162\151\156\164\040\141\040\156\141\155\145\012\012\102\141\163" "\145\040\144\151\162\145\143\164\157\162\171\040\151\163\072\040" "\055\160\040\104\111\122\054\040\145\154\163\145\040\044\124\115" "\120\104\111\122\054\040\145\154\163\145\040\057\164\155\160\000" "\133\055\141\144\154\160\060\135\040\133\055\106\040\153\145\171" "\167\157\162\144\135\040\115\117\104\125\114\105\012\012\011\055" "\141\011\011\123\150\157\162\164\143\165\164\040\146\157\162\040" "\047\055\106\040\141\165\164\150\157\162\047\012\011\055\144\011" "\011\123\150\157\162\164\143\165\164\040\146\157\162\040\047\055" "\106\040\144\145\163\143\162\151\160\164\151\157\156\047\012\011" "\055\154\011\011\123\150\157\162\164\143\165\164\040\146\157\162" "\040\047\055\106\040\154\151\143\145\156\163\145\047\012\011\055" "\160\011\011\123\150\157\162\164\143\165\164\040\146\157\162\040" "\047\055\106\040\160\141\162\155\047\012\011\055\106\040\153\145" "\171\167\157\162\144\011\113\145\171\167\157\162\144\040\164\157" "\040\154\157\157\153\040\146\157\162\012\011\055\060\011\011\123" "\145\160\141\162\141\164\145\040\157\165\164\160\165\164\040\167" "\151\164\150\040\116\125\114\163\000\133\055\161\146\167\162\163" "\166\135\040\115\117\104\125\114\105\040\133\163\171\155\142\157" "\154\075\166\141\154\165\145\135\056\056\056\012\012\011\055\162" "\011\122\145\155\157\166\145\040\115\117\104\125\114\105\040\050" "\163\164\141\143\153\163\051\040\157\162\040\144\157\040\141\165" "\164\157\143\154\145\141\156\012\011\055\161\011\121\165\151\145" "\164\012\011\055\166\011\126\145\162\142\157\163\145\012\011\055" "\146\011\106\157\162\143\145\012\011\055\167\011\127\141\151\164" "\040\146\157\162\040\165\156\154\157\141\144\012\011\055\163\011" "\122\145\160\157\162\164\040\166\151\141\040\163\171\163\154\157" "\147\040\151\156\163\164\145\141\144\040\157\146\040\163\164\144" "\145\162\162\000\133\106\111\114\105\135\056\056\056\012\012\126" "\151\145\167\040\106\111\114\105\040\050\157\162\040\163\164\144" "\151\156\051\040\157\156\145\040\163\143\162\145\145\156\146\165" "\154\040\141\164\040\141\040\164\151\155\145\000\133\117\120\124" "\111\117\116\123\135\040\133\055\157\040\117\120\124\123\135\040" "\104\105\126\111\103\105\040\116\117\104\105\012\012\115\157\165" "\156\164\040\141\040\146\151\154\145\163\171\163\164\145\155\056" "\040\106\151\154\145\163\171\163\164\145\155\040\141\165\164\157" "\144\145\164\145\143\164\151\157\156\040\162\145\161\165\151\162" "\145\163\040\057\160\162\157\143\056\012\012\011\055\141\011\011" "\115\157\165\156\164\040\141\154\154\040\146\151\154\145\163\171" "\163\164\145\155\163\040\151\156\040\146\163\164\141\142\012\011" "\055\146\011\011\104\162\171\040\162\165\156\012\011\055\166\011" "\011\126\145\162\142\157\163\145\012\011\055\162\011\011\122\145" "\141\144\055\157\156\154\171\040\155\157\165\156\164\012\011\055" "\167\011\011\122\145\141\144\055\167\162\151\164\145\040\155\157" "\165\156\164\040\050\144\145\146\141\165\154\164\051\012\011\055" "\164\040\106\123\124\131\120\105\133\054\056\056\056\135\011\106" "\151\154\145\163\171\163\164\145\155\040\164\171\160\145\050\163" "\051\012\011\055\117\040\117\120\124\011\011\115\157\165\156\164" "\040\157\156\154\171\040\146\151\154\145\163\171\163\164\145\155" "\163\040\167\151\164\150\040\157\160\164\151\157\156\040\117\120" "\124\040\050\055\141\040\157\156\154\171\051\012\055\157\040\117" "\120\124\072\012\011\154\157\157\160\011\011\111\147\156\157\162" "\145\144\040\050\154\157\157\160\040\144\145\166\151\143\145\163" "\040\141\162\145\040\141\165\164\157\144\145\164\145\143\164\145" "\144\051\012\011\133\141\135\163\171\156\143\011\011\127\162\151" "\164\145\163\040\141\162\145\040\133\141\135\163\171\156\143\150" "\162\157\156\157\165\163\012\011\133\156\157\135\141\164\151\155" "\145\011\104\151\163\141\142\154\145\057\145\156\141\142\154\145" "\040\165\160\144\141\164\145\163\040\164\157\040\151\156\157\144" "\145\040\141\143\143\145\163\163\040\164\151\155\145\163\012\011" "\133\156\157\135\144\151\162\141\164\151\155\145\011\104\151\163" "\141\142\154\145\057\145\156\141\142\154\145\040\141\164\151\155" "\145\040\165\160\144\141\164\145\163\040\164\157\040\144\151\162" "\145\143\164\157\162\151\145\163\012\011\133\156\157\135\162\145" "\154\141\164\151\155\145\011\104\151\163\141\142\154\145\057\145" "\156\141\142\154\145\040\141\164\151\155\145\040\165\160\144\141" "\164\145\163\040\162\145\154\141\164\151\166\145\040\164\157\040" "\155\157\144\151\146\151\143\141\164\151\157\156\040\164\151\155" "\145\012\011\133\156\157\135\144\145\166\011\011\050\104\151\163" "\051\141\154\154\157\167\040\165\163\145\040\157\146\040\163\160" "\145\143\151\141\154\040\144\145\166\151\143\145\040\146\151\154" "\145\163\012\011\133\156\157\135\145\170\145\143\011\050\104\151" "\163\051\141\154\154\157\167\040\165\163\145\040\157\146\040\145" "\170\145\143\165\164\141\142\154\145\040\146\151\154\145\163\012" "\011\133\156\157\135\163\165\151\144\011\050\104\151\163\051\141" "\154\154\157\167\040\163\145\164\055\165\163\145\162\055\151\144" "\055\162\157\157\164\040\160\162\157\147\162\141\155\163\012\011" "\133\162\135\163\150\141\162\145\144\011\103\157\156\166\145\162" "\164\040\133\162\145\143\165\162\163\151\166\145\154\171\135\040" "\164\157\040\141\040\163\150\141\162\145\144\040\163\165\142\164" "\162\145\145\012\011\133\162\135\163\154\141\166\145\011\103\157" "\156\166\145\162\164\040\133\162\145\143\165\162\163\151\166\145" "\154\171\135\040\164\157\040\141\040\163\154\141\166\145\040\163" "\165\142\164\162\145\145\012\011\133\162\135\160\162\151\166\141" "\164\145\011\103\157\156\166\145\162\164\040\133\162\145\143\165" "\162\163\151\166\145\154\171\135\040\164\157\040\141\040\160\162" "\151\166\141\164\145\040\163\165\142\164\162\145\145\012\011\133" "\165\156\135\142\151\156\144\141\142\154\145\011\115\141\153\145" "\040\155\157\165\156\164\040\160\157\151\156\164\040\133\165\156" "\135\141\142\154\145\040\164\157\040\142\145\040\142\151\156\144" "\040\155\157\165\156\164\145\144\012\011\133\162\135\142\151\156" "\144\011\011\102\151\156\144\040\141\040\146\151\154\145\040\157" "\162\040\144\151\162\145\143\164\157\162\171\040\133\162\145\143" "\165\162\163\151\166\145\154\171\135\040\164\157\040\141\156\157" "\164\150\145\162\040\154\157\143\141\164\151\157\156\012\011\155" "\157\166\145\011\011\122\145\154\157\143\141\164\145\040\141\156" "\040\145\170\151\163\164\151\156\147\040\155\157\165\156\164\040" "\160\157\151\156\164\012\011\162\145\155\157\165\156\164\011\011" "\122\145\155\157\165\156\164\040\141\040\155\157\165\156\164\145" "\144\040\146\151\154\145\163\171\163\164\145\155\054\040\143\150" "\141\156\147\151\156\147\040\146\154\141\147\163\012\011\162\157" "\057\162\167\011\011\123\141\155\145\040\141\163\040\055\162\057" "\055\167\012\012\124\150\145\162\145\040\141\162\145\040\146\151" "\154\145\163\171\163\164\145\155\055\163\160\145\143\151\146\151" "\143\040\055\157\040\146\154\141\147\163\056\000\133\055\161\135" "\040\074\133\055\144\156\135\040\104\111\122\040\174\040\055\170" "\040\104\105\126\111\103\105\076\012\012\103\150\145\143\153\040" "\151\146\040\164\150\145\040\144\151\162\145\143\164\157\162\171" "\040\151\163\040\141\040\155\157\165\156\164\160\157\151\156\164" "\012\012\011\055\161\011\121\165\151\145\164\012\011\055\144\011" "\120\162\151\156\164\040\155\141\152\157\162\057\155\151\156\157" "\162\040\144\145\166\151\143\145\040\156\165\155\142\145\162\040" "\157\146\040\164\150\145\040\146\151\154\145\163\171\163\164\145" "\155\012\011\055\156\011\120\162\151\156\164\040\144\145\166\151" "\143\145\040\156\141\155\145\040\157\146\040\164\150\145\040\146" "\151\154\145\163\171\163\164\145\155\012\011\055\170\011\120\162" "\151\156\164\040\155\141\152\157\162\057\155\151\156\157\162\040" "\144\145\166\151\143\145\040\156\165\155\142\145\162\040\157\146" "\040\164\150\145\040\142\154\157\143\153\144\145\166\151\143\145" "\000\133\055\101\135\040\133\055\111\040\123\125\115\174\103\120" "\125\174\101\114\114\174\123\103\120\125\135\040\133\055\165\135" "\040\133\055\120\040\156\165\155\174\101\114\114\135\040\133\111" "\116\124\105\122\126\101\114\040\133\103\117\125\116\124\135\135" "\012\012\120\145\162\055\160\162\157\143\145\163\163\157\162\040" "\163\164\141\164\151\163\164\151\143\163\012\012\011\055\101\011" "\011\011\123\141\155\145\040\141\163\040\055\111\040\101\114\114" "\040\055\165\040\055\120\040\101\114\114\012\011\055\111\040\123" "\125\115\174\103\120\125\174\101\114\114\174\123\103\120\125\011" "\122\145\160\157\162\164\040\151\156\164\145\162\162\165\160\164" "\040\163\164\141\164\151\163\164\151\143\163\012\011\055\120\040" "\156\165\155\174\101\114\114\011\011\120\162\157\143\145\163\163" "\157\162\040\164\157\040\155\157\156\151\164\157\162\012\011\055" "\165\011\011\011\122\145\160\157\162\164\040\103\120\125\040\165" "\164\151\154\151\172\141\164\151\157\156\000\133\055\146\040\144" "\145\166\151\143\145\135\040\157\160\143\157\144\145\040\166\141" "\154\165\145\012\012\103\157\156\164\162\157\154\040\155\141\147" "\156\145\164\151\143\040\164\141\160\145\040\144\162\151\166\145" "\040\157\160\145\162\141\164\151\157\156\012\012\101\166\141\151" "\154\141\142\154\145\040\117\160\143\157\144\145\163\072\012\012" "\142\163\146\040\142\163\146\155\040\142\163\162\040\142\163\163" "\040\144\141\164\141\143\157\155\160\162\145\163\163\151\157\156" "\040\144\162\166\142\165\146\146\145\162\040\145\157\146\040\145" "\157\155\040\145\162\141\163\145\012\146\163\146\040\146\163\146" "\155\040\146\163\162\040\146\163\163\040\154\157\141\144\040\154" "\157\143\153\040\155\153\160\141\162\164\040\156\157\160\040\157" "\146\146\154\151\156\145\040\162\141\163\061\040\162\141\163\062" "\012\162\141\163\063\040\162\145\163\145\164\040\162\145\164\145" "\156\163\151\157\156\040\162\145\167\151\156\144\040\162\145\167" "\157\146\146\154\151\156\145\040\163\145\145\153\040\163\145\164" "\142\154\153\040\163\145\164\144\145\156\163\151\164\171\012\163" "\145\164\160\141\162\164\040\164\145\154\154\040\165\156\154\157" "\141\144\040\165\156\154\157\143\153\040\167\145\157\146\040\167" "\163\145\164\000\133\055\146\151\156\135\040\123\117\125\122\103" "\105\040\104\105\123\124\012\157\162\072\040\155\166\040\133\055" "\146\151\156\135\040\123\117\125\122\103\105\056\056\056\040\104" "\111\122\105\103\124\117\122\131\012\012\122\145\156\141\155\145" "\040\123\117\125\122\103\105\040\164\157\040\104\105\123\124\054" "\040\157\162\040\155\157\166\145\040\123\117\125\122\103\105\050" "\163\051\040\164\157\040\104\111\122\105\103\124\117\122\131\012" "\012\011\055\146\011\104\157\156\047\164\040\160\162\157\155\160" "\164\040\142\145\146\157\162\145\040\157\166\145\162\167\162\151" "\164\151\156\147\012\011\055\151\011\111\156\164\145\162\141\143" "\164\151\166\145\054\040\160\162\157\155\160\164\040\142\145\146" "\157\162\145\040\157\166\145\162\167\162\151\164\145\012\011\055" "\156\011\104\157\156\047\164\040\157\166\145\162\167\162\151\164" "\145\040\141\156\040\145\170\151\163\164\151\156\147\040\146\151" "\154\145\000\133\055\163\135\040\133\055\143\040\106\111\114\105" "\135\040\133\111\106\116\101\115\105\040\123\105\114\105\103\124" "\117\122\135\056\056\056\012\012\122\145\156\141\155\145\040\156" "\145\164\167\157\162\153\040\151\156\164\145\162\146\141\143\145" "\040\167\150\151\154\145\040\151\164\040\151\156\040\164\150\145" "\040\144\157\167\156\040\163\164\141\164\145\056\012\124\150\145" "\040\144\145\166\151\143\145\040\155\141\164\143\150\145\144\040" "\142\171\040\123\105\114\105\103\124\117\122\040\151\163\040\162" "\145\156\141\155\145\144\040\164\157\040\111\106\101\103\105\056" "\012\123\105\114\105\103\124\117\122\040\143\141\156\040\142\145" "\040\141\040\143\157\155\142\151\156\141\164\151\157\156\040\157" "\146\072\012\011\144\162\151\166\145\162\075\123\124\122\111\116" "\107\012\011\142\165\163\075\123\124\122\111\116\107\012\011\160" "\150\171\137\141\144\144\162\145\163\163\075\116\125\115\012\011" "\133\155\141\143\075\135\130\130\072\130\130\072\130\130\072\130" "\130\072\130\130\072\130\130\012\012\011\055\143\040\106\111\114" "\105\011\103\157\156\146\151\147\165\162\141\164\151\157\156\040" "\146\151\154\145\040\050\144\145\146\141\165\154\164\072\040\057" "\145\164\143\057\155\141\143\164\141\142\051\012\011\055\163\011" "\114\157\147\040\164\157\040\163\171\163\154\157\147\000\133\055" "\157\135\040\133\055\142\135\040\133\055\163\040\101\104\104\122" "\135\040\133\055\154\040\114\105\116\135\040\133\055\146\040\106" "\111\114\105\135\040\115\124\104\137\104\105\126\111\103\105\012" "\012\104\165\155\160\040\115\124\104\137\104\105\126\111\103\105" "\012\012\011\055\157\011\104\165\155\160\040\157\157\142\040\144" "\141\164\141\012\011\055\142\011\117\155\151\164\040\142\141\144" "\040\142\154\157\143\153\040\146\162\157\155\040\164\150\145\040" "\144\165\155\160\012\011\055\163\040\101\104\104\122\011\123\164" "\141\162\164\040\141\144\144\162\145\163\163\012\011\055\154\040" "\114\105\116\011\114\145\156\147\164\150\012\011\055\146\040\106" "\111\114\105\011\104\165\155\160\040\164\157\040\146\151\154\145" "\040\050\047\055\047\040\146\157\162\040\163\164\144\157\165\164" "\051\000\133\055\160\135\040\133\055\163\040\101\104\104\122\135" "\040\115\124\104\137\104\105\126\111\103\105\040\133\106\111\114" "\105\135\012\012\127\162\151\164\145\040\164\157\040\115\124\104" "\137\104\105\126\111\103\105\012\012\011\055\160\011\120\141\144" "\040\164\157\040\160\141\147\145\040\163\151\172\145\012\011\055" "\163\040\101\104\104\122\011\123\164\141\162\164\040\141\144\144" "\162\145\163\163\000\110\117\123\124\040\120\117\122\124\040\102" "\114\117\103\113\104\105\126\012\012\103\157\156\156\145\143\164" "\040\164\157\040\110\117\123\124\040\141\156\144\040\160\162\157" "\166\151\144\145\040\141\040\156\145\164\167\157\162\153\040\142" "\154\157\143\153\040\144\145\166\151\143\145\040\157\156\040\102" "\114\117\103\113\104\105\126\000\133\055\151\116\135\040\133\055" "\167\116\135\040\133\055\154\135\040\133\055\160\040\120\117\122" "\124\135\040\133\055\146\040\106\111\114\105\174\111\120\101\104" "\104\122\040\120\117\122\124\135\040\133\055\145\040\120\122\117" "\107\135\012\012\117\160\145\156\040\141\040\160\151\160\145\040" "\164\157\040\111\120\072\120\117\122\124\040\157\162\040\106\111" "\114\105\012\012\011\055\154\011\114\151\163\164\145\156\040\155" "\157\144\145\054\040\146\157\162\040\151\156\142\157\165\156\144" "\040\143\157\156\156\145\143\164\163\012\011\011\050\165\163\145" "\040\055\154\154\040\167\151\164\150\040\055\145\040\146\157\162" "\040\160\145\162\163\151\163\164\145\156\164\040\163\145\162\166" "\145\162\051\012\011\055\160\040\120\117\122\124\011\114\157\143" "\141\154\040\160\157\162\164\012\011\055\167\040\123\105\103\011" "\103\157\156\156\145\143\164\040\164\151\155\145\157\165\164\012" "\011\055\151\040\123\105\103\011\104\145\154\141\171\040\151\156" "\164\145\162\166\141\154\040\146\157\162\040\154\151\156\145\163" "\040\163\145\156\164\012\011\055\146\040\106\111\114\105\011\125" "\163\145\040\146\151\154\145\040\050\141\154\141\040\057\144\145" "\166\057\164\164\171\123\060\051\040\151\156\163\164\145\141\144" "\040\157\146\040\156\145\164\167\157\162\153\012\011\055\145\040" "\120\122\117\107\011\122\165\156\040\120\122\117\107\040\141\146" "\164\145\162\040\143\157\156\156\145\143\164\000\133\055\162\141" "\154\135\040\133\055\164\165\167\170\135\040\133\055\145\156\127" "\160\135\012\012\104\151\163\160\154\141\171\040\156\145\164\167" "\157\162\153\151\156\147\040\151\156\146\157\162\155\141\164\151" "\157\156\012\012\011\055\162\011\122\157\165\164\151\156\147\040" "\164\141\142\154\145\012\011\055\141\011\101\154\154\040\163\157" "\143\153\145\164\163\012\011\055\154\011\114\151\163\164\145\156" "\151\156\147\040\163\157\143\153\145\164\163\012\011\011\105\154" "\163\145\072\040\143\157\156\156\145\143\164\145\144\040\163\157" "\143\153\145\164\163\012\011\055\164\011\124\103\120\040\163\157" "\143\153\145\164\163\012\011\055\165\011\125\104\120\040\163\157" "\143\153\145\164\163\012\011\055\167\011\122\141\167\040\163\157" "\143\153\145\164\163\012\011\055\170\011\125\156\151\170\040\163" "\157\143\153\145\164\163\012\011\011\105\154\163\145\072\040\141" "\154\154\040\163\157\143\153\145\164\040\164\171\160\145\163\012" "\011\055\145\011\117\164\150\145\162\057\155\157\162\145\040\151" "\156\146\157\162\155\141\164\151\157\156\012\011\055\156\011\104" "\157\156\047\164\040\162\145\163\157\154\166\145\040\156\141\155" "\145\163\012\011\055\127\011\127\151\144\145\040\144\151\163\160" "\154\141\171\012\011\055\160\011\123\150\157\167\040\120\111\104" "\057\160\162\157\147\162\141\155\040\156\141\155\145\040\146\157" "\162\040\163\157\143\153\145\164\163\000\133\055\156\040\101\104" "\112\125\123\124\135\040\133\120\122\117\107\040\101\122\107\123" "\135\012\012\103\150\141\156\147\145\040\163\143\150\145\144\165" "\154\151\156\147\040\160\162\151\157\162\151\164\171\054\040\162" "\165\156\040\120\122\117\107\012\012\011\055\156\040\101\104\112" "\125\123\124\011\101\144\152\165\163\164\040\160\162\151\157\162" "\151\164\171\040\142\171\040\101\104\112\125\123\124\000\133\055" "\144\040\115\123\105\103\135\040\106\117\122\115\101\124\137\123" "\124\122\111\116\107\012\012\115\157\156\151\164\157\162\040\163" "\171\163\164\145\155\040\151\156\040\162\145\141\154\040\164\151" "\155\145\012\012\040\055\144\040\115\123\105\103\011\115\151\154" "\154\151\163\145\143\157\156\144\163\040\142\145\164\167\145\145" "\156\040\165\160\144\141\164\145\163\040\050\144\145\146\141\165" "\154\164\072\061\060\060\060\051\012\012\106\157\162\155\141\164" "\040\163\160\145\143\151\146\151\145\162\163\072\012\040\045\116" "\143\040\157\162\040\045\133\143\116\135\011\103\120\125\056\040" "\116\040\055\040\142\141\162\040\163\151\172\145\040\050\144\145" "\146\141\165\154\164\072\061\060\051\012\011\011\050\144\151\163" "\160\154\141\171\163\072\040\123\072\163\171\163\164\145\155\040" "\125\072\165\163\145\162\040\116\072\156\151\143\145\144\040\104" "\072\151\157\167\141\151\164\040\111\072\151\162\161\040\151\072" "\163\157\146\164\151\162\161\051\012\040\045\133\156\111\116\124" "\105\122\106\101\103\105\135\011\116\145\164\167\157\162\153\040" "\111\116\124\105\122\106\101\103\105\012\040\045\155\011\011\101" "\154\154\157\143\141\164\145\144\040\155\145\155\157\162\171\012" "\040\045\133\155\146\135\011\011\106\162\145\145\040\155\145\155" "\157\162\171\012\040\045\133\155\164\135\011\011\124\157\164\141" "\154\040\155\145\155\157\162\171\012\040\045\163\011\011\101\154" "\154\157\143\141\164\145\144\040\163\167\141\160\012\040\045\146" "\011\011\116\165\155\142\145\162\040\157\146\040\165\163\145\144" "\040\146\151\154\145\040\144\145\163\143\162\151\160\164\157\162" "\163\012\040\045\116\151\011\011\124\157\164\141\154\057\163\160" "\145\143\151\146\151\143\040\111\122\121\040\162\141\164\145\012" "\040\045\170\011\011\103\157\156\164\145\170\164\040\163\167\151" "\164\143\150\040\162\141\164\145\012\040\045\160\011\011\106\157" "\162\153\163\012\040\045\133\160\156\135\011\011\043\040\157\146" "\040\160\162\157\143\145\163\163\145\163\012\040\045\142\011\011" "\102\154\157\143\153\040\151\157\012\040\045\116\164\011\011\124" "\151\155\145\040\050\167\151\164\150\040\116\040\144\145\143\151" "\155\141\154\040\160\157\151\156\164\163\051\012\040\045\162\011" "\011\120\162\151\156\164\040\074\143\162\076\040\151\156\163\164" "\145\141\144\040\157\146\040\074\154\146\076\040\141\164\040\105" "\117\114\000\120\122\117\107\040\101\122\107\123\012\012\122\165" "\156\040\120\122\117\107\040\151\155\155\165\156\145\040\164\157" "\040\150\141\156\147\165\160\163\054\040\167\151\164\150\040\157" "\165\164\160\165\164\040\164\157\040\141\040\156\157\156\055\164" "\164\171\000\133\110\117\123\124\135\040\133\123\105\122\126\105" "\122\135\012\012\121\165\145\162\171\040\164\150\145\040\156\141" "\155\145\163\145\162\166\145\162\040\146\157\162\040\164\150\145" "\040\111\120\040\141\144\144\162\145\163\163\040\157\146\040\164" "\150\145\040\147\151\166\145\156\040\110\117\123\124\012\157\160" "\164\151\157\156\141\154\154\171\040\165\163\151\156\147\040\141" "\040\163\160\145\143\151\146\151\145\144\040\104\116\123\040\163" "\145\162\166\145\162\000\133\055\144\156\161\116\167\154\135\040" "\133\055\123\040\120\122\117\107\135\040\133\055\160\040\120\105" "\105\122\135\056\056\056\012\012\116\124\120\040\143\154\151\145" "\156\164\057\163\145\162\166\145\162\012\012\011\055\144\011\126" "\145\162\142\157\163\145\012\011\055\156\011\104\157\040\156\157" "\164\040\144\141\145\155\157\156\151\172\145\012\011\055\161\011" "\121\165\151\164\040\141\146\164\145\162\040\143\154\157\143\153" "\040\151\163\040\163\145\164\012\011\055\116\011\122\165\156\040" "\141\164\040\150\151\147\150\040\160\162\151\157\162\151\164\171" "\012\011\055\167\011\104\157\040\156\157\164\040\163\145\164\040" "\164\151\155\145\040\050\157\156\154\171\040\161\165\145\162\171" "\040\160\145\145\162\163\051\054\040\151\155\160\154\151\145\163" "\040\055\156\012\011\055\154\011\122\165\156\040\141\163\040\163" "\145\162\166\145\162\040\157\156\040\160\157\162\164\040\061\062" "\063\012\011\055\123\040\120\122\117\107\011\122\165\156\040\120" "\122\117\107\040\141\146\164\145\162\040\163\164\145\160\160\151" "\156\147\040\164\151\155\145\054\040\163\164\162\141\164\165\155" "\040\143\150\141\156\147\145\054\040\141\156\144\040\145\166\145" "\162\171\040\061\061\040\155\151\156\163\012\011\055\160\040\120" "\105\105\122\011\117\142\164\141\151\156\040\164\151\155\145\040" "\146\162\157\155\040\120\105\105\122\040\050\155\141\171\040\142" "\145\040\162\145\160\145\141\164\145\144\051\000\133\055\141\142" "\143\144\146\150\151\154\157\166\170\163\135\040\133\055\164\040" "\124\131\120\105\135\040\133\055\101\040\122\101\104\111\130\135" "\040\133\055\116\040\123\111\132\105\135\040\133\055\152\040\123" "\113\111\120\135\040\133\055\123\040\115\111\116\123\124\122\135" "\040\133\055\167\040\127\111\104\124\110\135\040\133\106\111\114" "\105\135\056\056\056\012\012\120\162\151\156\164\040\106\111\114" "\105\163\040\050\157\162\040\163\164\144\151\156\051\040\165\156" "\141\155\142\151\147\165\157\165\163\154\171\054\040\141\163\040" "\157\143\164\141\154\040\142\171\164\145\163\040\142\171\040\144" "\145\146\141\165\154\164\000\133\055\143\040\116\135\040\133\055" "\163\167\135\040\133\120\122\117\107\040\101\122\107\123\135\012" "\012\123\164\141\162\164\040\120\122\117\107\040\157\156\040\141" "\040\156\145\167\040\166\151\162\164\165\141\154\040\164\145\162" "\155\151\156\141\154\012\012\011\055\143\040\116\011\125\163\145" "\040\163\160\145\143\151\146\151\145\144\040\126\124\012\011\055" "\163\011\123\167\151\164\143\150\040\164\157\040\164\150\145\040" "\126\124\012\011\055\167\011\127\141\151\164\040\146\157\162\040" "\120\122\117\107\040\164\157\040\145\170\151\164\000\133\117\120" "\124\111\117\116\123\135\040\133\125\123\105\122\135\012\012\103" "\150\141\156\147\145\040\125\123\105\122\047\163\040\160\141\163" "\163\167\157\162\144\040\050\144\145\146\141\165\154\164\072\040" "\143\165\162\162\145\156\164\040\165\163\145\162\051\012\012\011" "\055\141\040\101\114\107\011\105\156\143\162\171\160\164\151\157" "\156\040\155\145\164\150\157\144\012\011\055\144\011\123\145\164" "\040\160\141\163\163\167\157\162\144\040\164\157\040\047\047\012" "\011\055\154\011\114\157\143\153\040\050\144\151\163\141\142\154" "\145\051\040\141\143\143\157\165\156\164\012\011\055\165\011\125" "\156\154\157\143\153\040\050\145\156\141\142\154\145\051\040\141" "\143\143\157\165\156\164\000\133\117\120\124\111\117\116\123\135" "\040\133\117\122\111\107\106\111\114\105\040\133\120\101\124\103" "\110\106\111\114\105\135\135\012\012\011\055\160\054\055\055\163" "\164\162\151\160\040\116\011\011\123\164\162\151\160\040\116\040" "\154\145\141\144\151\156\147\040\143\157\155\160\157\156\145\156" "\164\163\040\146\162\157\155\040\146\151\154\145\040\156\141\155" "\145\163\012\011\055\151\054\055\055\151\156\160\165\164\040\104" "\111\106\106\011\011\122\145\141\144\040\104\111\106\106\040\151" "\156\163\164\145\141\144\040\157\146\040\163\164\144\151\156\012" "\011\055\122\054\055\055\162\145\166\145\162\163\145\011\011\122" "\145\166\145\162\163\145\040\160\141\164\143\150\012\011\055\116" "\054\055\055\146\157\162\167\141\162\144\011\011\111\147\156\157" "\162\145\040\141\154\162\145\141\144\171\040\141\160\160\154\151" "\145\144\040\160\141\164\143\150\145\163\012\011\055\105\054\055" "\055\162\145\155\157\166\145\055\145\155\160\164\171\055\146\151" "\154\145\163\011\122\145\155\157\166\145\040\157\165\164\160\165" "\164\040\146\151\154\145\163\040\151\146\040\164\150\145\171\040" "\142\145\143\157\155\145\040\145\155\160\164\171\000\133\055\146" "\154\156\157\166\170\135\040\133\055\163\040\123\111\104\174\055" "\120\040\120\120\111\104\174\120\101\124\124\105\122\116\135\012" "\012\104\151\163\160\154\141\171\040\160\162\157\143\145\163\163" "\050\145\163\051\040\163\145\154\145\143\164\145\144\040\142\171" "\040\162\145\147\145\170\040\120\101\124\124\105\122\116\012\012" "\011\055\154\011\123\150\157\167\040\143\157\155\155\141\156\144" "\040\156\141\155\145\040\164\157\157\012\011\055\146\011\115\141" "\164\143\150\040\141\147\141\151\156\163\164\040\145\156\164\151" "\162\145\040\143\157\155\155\141\156\144\040\154\151\156\145\012" "\011\055\156\011\123\150\157\167\040\164\150\145\040\156\145\167" "\145\163\164\040\160\162\157\143\145\163\163\040\157\156\154\171" "\012\011\055\157\011\123\150\157\167\040\164\150\145\040\157\154" "\144\145\163\164\040\160\162\157\143\145\163\163\040\157\156\154" "\171\012\011\055\166\011\116\145\147\141\164\145\040\164\150\145" "\040\155\141\164\143\150\012\011\055\170\011\115\141\164\143\150" "\040\167\150\157\154\145\040\156\141\155\145\040\050\156\157\164" "\040\163\165\142\163\164\162\151\156\147\051\012\011\055\163\011" "\115\141\164\143\150\040\163\145\163\163\151\157\156\040\111\104" "\040\050\060\040\146\157\162\040\143\165\162\162\145\156\164\051" "\012\011\055\120\011\115\141\164\143\150\040\160\141\162\145\156" "\164\040\160\162\157\143\145\163\163\040\111\104\000\133\117\120" "\124\111\117\116\123\135\040\133\116\101\115\105\135\056\056\056" "\012\012\114\151\163\164\040\120\111\104\163\040\157\146\040\141" "\154\154\040\160\162\157\143\145\163\163\145\163\040\167\151\164" "\150\040\156\141\155\145\163\040\164\150\141\164\040\155\141\164" "\143\150\040\116\101\115\105\163\012\012\011\055\163\011\123\150" "\157\167\040\157\156\154\171\040\157\156\145\040\120\111\104\012" "\011\055\157\040\120\111\104\011\117\155\151\164\040\147\151\166" "\145\156\040\160\151\144\012\011\011\125\163\145\040\045\120\120" "\111\104\040\164\157\040\157\155\151\164\040\160\151\144\040\157" "\146\040\160\151\144\157\146\047\163\040\160\141\162\145\156\164" "\000\133\117\120\124\111\117\116\123\135\040\110\117\123\124\012" "\012\123\145\156\144\040\111\103\115\120\040\105\103\110\117\137" "\122\105\121\125\105\123\124\040\160\141\143\153\145\164\163\040" "\164\157\040\156\145\164\167\157\162\153\040\150\157\163\164\163" "\012\012\011\055\064\054\055\066\011\011\106\157\162\143\145\040" "\111\120\040\157\162\040\111\120\166\066\040\156\141\155\145\040" "\162\145\163\157\154\165\164\151\157\156\012\011\055\143\040\103" "\116\124\011\011\123\145\156\144\040\157\156\154\171\040\103\116" "\124\040\160\151\156\147\163\012\011\055\163\040\123\111\132\105" "\011\011\123\145\156\144\040\123\111\132\105\040\144\141\164\141" "\040\142\171\164\145\163\040\151\156\040\160\141\143\153\145\164" "\163\040\050\144\145\146\141\165\154\164\072\065\066\051\012\011" "\055\164\040\124\124\114\011\011\123\145\164\040\124\124\114\012" "\011\055\111\040\111\106\101\103\105\057\111\120\011\125\163\145" "\040\151\156\164\145\162\146\141\143\145\040\157\162\040\111\120" "\040\141\144\144\162\145\163\163\040\141\163\040\163\157\165\162" "\143\145\012\011\055\127\040\123\105\103\011\011\123\145\143\157" "\156\144\163\040\164\157\040\167\141\151\164\040\146\157\162\040" "\164\150\145\040\146\151\162\163\164\040\162\145\163\160\157\156" "\163\145\040\050\144\145\146\141\165\154\164\072\061\060\051\012" "\011\011\011\050\141\146\164\145\162\040\141\154\154\040\055\143" "\040\103\116\124\040\160\141\143\153\145\164\163\040\141\162\145" "\040\163\145\156\164\051\012\011\055\167\040\123\105\103\011\011" "\123\145\143\157\156\144\163\040\165\156\164\151\154\040\160\151" "\156\147\040\145\170\151\164\163\040\050\144\145\146\141\165\154" "\164\072\151\156\146\151\156\151\164\145\051\012\011\011\011\050" "\143\141\156\040\145\170\151\164\040\145\141\162\154\151\145\162" "\040\167\151\164\150\040\055\143\040\103\116\124\051\012\011\055" "\161\011\011\121\165\151\145\164\054\040\157\156\154\171\040\144" "\151\163\160\154\141\171\163\040\157\165\164\160\165\164\040\141" "\164\040\163\164\141\162\164\012\011\011\011\141\156\144\040\167" "\150\145\156\040\146\151\156\151\163\150\145\144\000\133\117\120" "\124\111\117\116\123\135\040\110\117\123\124\012\012\123\145\156" "\144\040\111\103\115\120\040\105\103\110\117\137\122\105\121\125" "\105\123\124\040\160\141\143\153\145\164\163\040\164\157\040\156" "\145\164\167\157\162\153\040\150\157\163\164\163\012\012\011\055" "\143\040\103\116\124\011\011\123\145\156\144\040\157\156\154\171" "\040\103\116\124\040\160\151\156\147\163\012\011\055\163\040\123" "\111\132\105\011\011\123\145\156\144\040\123\111\132\105\040\144" "\141\164\141\040\142\171\164\145\163\040\151\156\040\160\141\143" "\153\145\164\163\040\050\144\145\146\141\165\154\164\072\065\066" "\051\012\011\055\111\040\111\106\101\103\105\057\111\120\011\125" "\163\145\040\151\156\164\145\162\146\141\143\145\040\157\162\040" "\111\120\040\141\144\144\162\145\163\163\040\141\163\040\163\157" "\165\162\143\145\012\011\055\161\011\011\121\165\151\145\164\054" "\040\157\156\154\171\040\144\151\163\160\154\141\171\163\040\157" "\165\164\160\165\164\040\141\164\040\163\164\141\162\164\012\011" "\011\011\141\156\144\040\167\150\145\156\040\146\151\156\151\163" "\150\145\144\000\010\000\116\105\127\137\122\117\117\124\040\120" "\125\124\137\117\114\104\012\012\115\157\166\145\040\164\150\145" "\040\143\165\162\162\145\156\164\040\162\157\157\164\040\146\151" "\154\145\040\163\171\163\164\145\155\040\164\157\040\120\125\124" "\137\117\114\104\040\141\156\144\040\155\141\153\145\040\116\105" "\127\137\122\117\117\124\012\164\150\145\040\156\145\167\040\162" "\157\157\164\040\146\151\154\145\040\163\171\163\164\145\155\000" "\133\055\154\174\055\123\111\107\116\101\114\135\040\133\055\146" "\156\157\166\170\135\040\133\055\163\040\123\111\104\174\055\120" "\040\120\120\111\104\174\120\101\124\124\105\122\116\135\012\012" "\123\145\156\144\040\141\040\163\151\147\156\141\154\040\164\157" "\040\160\162\157\143\145\163\163\050\145\163\051\040\163\145\154" "\145\143\164\145\144\040\142\171\040\162\145\147\145\170\040\120" "\101\124\124\105\122\116\012\012\011\055\154\011\114\151\163\164" "\040\141\154\154\040\163\151\147\156\141\154\163\012\011\055\146" "\011\115\141\164\143\150\040\141\147\141\151\156\163\164\040\145" "\156\164\151\162\145\040\143\157\155\155\141\156\144\040\154\151" "\156\145\012\011\055\156\011\123\151\147\156\141\154\040\164\150" "\145\040\156\145\167\145\163\164\040\160\162\157\143\145\163\163" "\040\157\156\154\171\012\011\055\157\011\123\151\147\156\141\154" "\040\164\150\145\040\157\154\144\145\163\164\040\160\162\157\143" "\145\163\163\040\157\156\154\171\012\011\055\166\011\116\145\147" "\141\164\145\040\164\150\145\040\155\141\164\143\150\012\011\055" "\170\011\115\141\164\143\150\040\167\150\157\154\145\040\156\141" "\155\145\040\050\156\157\164\040\163\165\142\163\164\162\151\156" "\147\051\012\011\055\163\011\115\141\164\143\150\040\163\145\163" "\163\151\157\156\040\111\104\040\050\060\040\146\157\162\040\143" "\165\162\162\145\156\164\051\012\011\055\120\011\115\141\164\143" "\150\040\160\141\162\145\156\164\040\160\162\157\143\145\163\163" "\040\111\104\000\133\055\170\161\135\040\120\111\104\012\012\104" "\151\163\160\154\141\171\040\144\145\164\141\151\154\145\144\040" "\160\162\157\143\145\163\163\040\155\145\155\157\162\171\040\165" "\163\141\147\145\012\012\011\055\170\011\123\150\157\167\040\144" "\145\164\141\151\154\163\012\011\055\161\011\121\165\151\145\164" "\000\133\117\120\124\111\117\116\123\135\040\115\101\111\114\104" "\111\122\040\133\103\117\116\116\137\110\105\114\120\105\122\040" "\101\122\107\123\135\012\012\106\145\164\143\150\040\143\157\156" "\164\145\156\164\040\157\146\040\162\145\155\157\164\145\040\155" "\141\151\154\142\157\170\040\164\157\040\154\157\143\141\154\040" "\155\141\151\154\144\151\162\012\012\011\055\163\011\011\123\153" "\151\160\040\141\165\164\150\157\162\151\172\141\164\151\157\156" "\012\011\055\124\011\011\107\145\164\040\155\145\163\163\141\147" "\145\163\040\167\151\164\150\040\124\117\120\040\151\156\163\164" "\145\141\144\040\157\146\040\122\105\124\122\012\011\055\153\011" "\011\113\145\145\160\040\162\145\164\162\151\145\166\145\144\040" "\155\145\163\163\141\147\145\163\040\157\156\040\164\150\145\040" "\163\145\162\166\145\162\012\011\055\164\040\123\105\103\011\011" "\116\145\164\167\157\162\153\040\164\151\155\145\157\165\164\012" "\011\055\106\040\042\120\122\117\107\040\101\122\107\123\042\011" "\106\151\154\164\145\162\040\160\162\157\147\162\141\155\040\050" "\155\141\171\040\142\145\040\162\145\160\145\141\164\145\144\051" "\012\011\055\115\040\042\120\122\117\107\040\101\122\107\123\042" "\011\104\145\154\151\166\145\162\171\040\160\162\157\147\162\141" "\155\012\012\106\145\164\143\150\040\146\162\157\155\040\160\154" "\141\151\156\040\120\117\120\063\040\163\145\162\166\145\162\072" "\012\160\157\160\155\141\151\154\144\151\162\040\055\153\040\104" "\111\122\040\156\143\040\160\157\160\063\056\163\145\162\166\145" "\162\056\143\157\155\040\061\061\060\040\074\165\163\145\162\137" "\141\156\144\137\160\141\163\163\056\164\170\164\012\106\145\164" "\143\150\040\146\162\157\155\040\123\123\114\145\144\040\120\117" "\120\063\040\163\145\162\166\145\162\040\141\156\144\040\144\145" "\154\145\164\145\040\146\145\164\143\150\145\144\040\145\155\141" "\151\154\163\072\012\160\157\160\155\141\151\154\144\151\162\040" "\104\111\122\040\055\055\040\157\160\145\156\163\163\154\040\163" "\137\143\154\151\145\156\164\040\055\161\165\151\145\164\040\055" "\143\157\156\156\145\143\164\040\160\157\160\063\056\163\145\162" "\166\145\162\056\143\157\155\072\071\071\065\040\074\165\163\145" "\162\137\141\156\144\137\160\141\163\163\056\164\170\164\000\133" "\055\144\040\104\105\114\101\131\135\040\133\055\156\135\040\133" "\055\146\135\012\012\110\141\154\164\040\141\156\144\040\163\150" "\165\164\040\157\146\146\040\160\157\167\145\162\012\012\011\055" "\144\040\123\105\103\011\104\145\154\141\171\040\151\156\164\145" "\162\166\141\154\012\011\055\156\011\104\157\040\156\157\164\040" "\163\171\156\143\012\011\055\146\011\106\157\162\143\145\040\050" "\144\157\156\047\164\040\147\157\040\164\150\162\157\165\147\150" "\040\151\156\151\164\051\000\012\012\101\156\141\154\171\172\145" "\040\160\157\167\145\162\040\143\157\156\163\165\155\160\164\151" "\157\156\040\157\156\040\111\156\164\145\154\055\142\141\163\145" "\144\040\154\141\160\164\157\160\163\012\000\133\126\101\122\111" "\101\102\114\105\135\056\056\056\012\012\120\162\151\156\164\040" "\145\156\166\151\162\157\156\155\145\156\164\040\126\101\122\111" "\101\102\114\105\163\056\012\111\146\040\156\157\040\126\101\122" "\111\101\102\114\105\040\163\160\145\143\151\146\151\145\144\054" "\040\160\162\151\156\164\040\141\154\154\056\000\106\117\122\115" "\101\124\040\133\101\122\107\135\056\056\056\012\012\106\157\162" "\155\141\164\040\141\156\144\040\160\162\151\156\164\040\101\122" "\107\050\163\051\040\141\143\143\157\162\144\151\156\147\040\164" "\157\040\106\117\122\115\101\124\040\050\141\055\154\141\040\103" "\040\160\162\151\156\164\146\051\000\133\055\157\040\103\117\114" "\061\054\103\117\114\062\075\110\105\101\104\105\122\135\040\133" "\055\124\135\012\012\123\150\157\167\040\154\151\163\164\040\157" "\146\040\160\162\157\143\145\163\163\145\163\012\012\011\055\157" "\040\103\117\114\061\054\103\117\114\062\075\110\105\101\104\105" "\122\011\123\145\154\145\143\164\040\143\157\154\165\155\156\163" "\040\146\157\162\040\144\151\163\160\154\141\171\012\011\055\124" "\011\011\011\123\150\157\167\040\164\150\162\145\141\144\163\000" "\133\055\143\142\135\040\133\055\160\040\115\111\116\137\120\117" "\122\124\135\040\133\055\120\040\115\101\130\137\120\117\122\124" "\135\040\133\055\164\040\124\111\115\105\117\125\124\135\040\133" "\055\124\040\115\111\116\137\122\124\124\135\040\110\117\123\124" "\012\012\123\143\141\156\040\141\040\150\157\163\164\054\040\160" "\162\151\156\164\040\141\154\154\040\157\160\145\156\040\160\157" "\162\164\163\012\012\011\055\143\011\123\150\157\167\040\143\154" "\157\163\145\144\040\160\157\162\164\163\040\164\157\157\012\011" "\055\142\011\123\150\157\167\040\142\154\157\143\153\145\144\040" "\160\157\162\164\163\040\164\157\157\012\011\055\160\011\123\143" "\141\156\040\146\162\157\155\040\164\150\151\163\040\160\157\162" "\164\040\050\144\145\146\141\165\154\164\040\061\051\012\011\055" "\120\011\123\143\141\156\040\165\160\040\164\157\040\164\150\151" "\163\040\160\157\162\164\040\050\144\145\146\141\165\154\164\040" "\061\060\062\064\051\012\011\055\164\011\124\151\155\145\157\165" "\164\040\050\144\145\146\141\165\154\164\040\065\060\060\060\040" "\155\163\051\012\011\055\124\011\115\151\156\151\155\165\155\040" "\162\164\164\040\050\144\145\146\141\165\154\164\040\065\040\155" "\163\054\040\151\156\143\162\145\141\163\145\040\146\157\162\040" "\143\157\156\147\145\163\164\145\144\040\150\157\163\164\163\051" "\000\133\055\160\135\040\133\120\111\104\174\125\123\105\122\135" "\012\012\104\151\163\160\154\141\171\040\160\162\157\143\145\163" "\163\040\164\162\145\145\054\040\157\160\164\151\157\156\141\154" "\154\171\040\163\164\141\162\164\040\146\162\157\155\040\125\123" "\105\122\040\157\162\040\120\111\104\012\012\011\055\160\011\123" "\150\157\167\040\160\151\144\163\000\012\012\120\162\151\156\164" "\040\164\150\145\040\146\165\154\154\040\146\151\154\145\156\141" "\155\145\040\157\146\040\164\150\145\040\143\165\162\162\145\156" "\164\040\167\157\162\153\151\156\147\040\144\151\162\145\143\164" "\157\162\171\000\120\111\104\056\056\056\012\012\123\150\157\167" "\040\143\165\162\162\145\156\164\040\144\151\162\145\143\164\157" "\162\171\040\146\157\162\040\120\111\104\163\012\000\104\105\126" "\111\103\105\012\012\124\145\154\154\040\164\150\145\040\153\145" "\162\156\145\154\040\164\157\040\141\165\164\157\155\141\164\151" "\143\141\154\154\171\040\163\145\141\162\143\150\040\141\156\144" "\040\163\164\141\162\164\040\122\101\111\104\040\141\162\162\141" "\171\163\000\133\055\163\160\135\040\110\117\123\124\012\012\107" "\145\164\040\141\156\144\040\160\157\163\163\151\142\154\171\040" "\163\145\164\040\164\150\145\040\163\171\163\164\145\155\040\144" "\141\164\145\057\164\151\155\145\040\146\162\157\155\040\141\040" "\162\145\155\157\164\145\040\110\117\123\124\012\012\011\055\163" "\011\123\145\164\040\164\150\145\040\163\171\163\164\145\155\040" "\144\141\164\145\057\164\151\155\145\040\050\144\145\146\141\165" "\154\164\051\012\011\055\160\011\120\162\151\156\164\040\164\150" "\145\040\144\141\164\145\057\164\151\155\145\000\012\012\120\162" "\151\156\164\040\164\150\145\040\144\145\166\151\143\145\040\156" "\157\144\145\040\141\163\163\157\143\151\141\164\145\144\040\167" "\151\164\150\040\164\150\145\040\146\151\154\145\163\171\163\164" "\145\155\040\155\157\165\156\164\145\144\040\141\164\040\047\057" "\047\000\133\106\111\114\105\135\056\056\056\012\012\120\162\145" "\154\157\141\144\040\106\111\114\105\163\040\164\157\040\122\101" "\115\000\133\055\146\156\166\135\040\106\111\114\105\012\012\104" "\151\163\160\154\141\171\040\164\150\145\040\166\141\154\165\145" "\040\157\146\040\141\040\163\171\155\154\151\156\153\012\012\011" "\055\146\011\103\141\156\157\156\151\143\141\154\151\172\145\040" "\142\171\040\146\157\154\154\157\167\151\156\147\040\141\154\154" "\040\163\171\155\154\151\156\153\163\012\011\055\156\011\104\157" "\156\047\164\040\141\144\144\040\156\145\167\154\151\156\145\012" "\011\055\166\011\126\145\162\142\157\163\145\000\133\117\120\124" "\111\117\116\123\135\012\012\011\055\155\040\155\141\160\146\151" "\154\145\011\050\104\145\146\141\165\154\164\072\040\057\142\157" "\157\164\057\123\171\163\164\145\155\056\155\141\160\051\012\011" "\055\160\040\160\162\157\146\151\154\145\011\050\104\145\146\141" "\165\154\164\072\040\057\160\162\157\143\057\160\162\157\146\151" "\154\145\051\012\011\055\115\040\116\125\115\011\011\123\145\164" "\040\164\150\145\040\160\162\157\146\151\154\151\156\147\040\155" "\165\154\164\151\160\154\151\145\162\040\164\157\040\116\125\115" "\012\011\055\151\011\011\120\162\151\156\164\040\157\156\154\171" "\040\151\156\146\157\040\141\142\157\165\164\040\164\150\145\040" "\163\141\155\160\154\151\156\147\040\163\164\145\160\012\011\055" "\166\011\011\126\145\162\142\157\163\145\012\011\055\141\011\011" "\120\162\151\156\164\040\141\154\154\040\163\171\155\142\157\154" "\163\054\040\145\166\145\156\040\151\146\040\143\157\165\156\164" "\040\151\163\040\060\012\011\055\142\011\011\120\162\151\156\164" "\040\151\156\144\151\166\151\144\165\141\154\040\150\151\163\164" "\157\147\162\141\155\055\142\151\156\040\143\157\165\156\164\163" "\012\011\055\163\011\011\120\162\151\156\164\040\151\156\144\151" "\166\151\144\165\141\154\040\143\157\165\156\164\145\162\163\040" "\167\151\164\150\151\156\040\146\165\156\143\164\151\157\156\163" "\012\011\055\162\011\011\122\145\163\145\164\040\141\154\154\040" "\164\150\145\040\143\157\165\156\164\145\162\163\040\050\162\157" "\157\164\040\157\156\154\171\051\012\011\055\156\011\011\104\151" "\163\141\142\154\145\040\142\171\164\145\040\157\162\144\145\162" "\040\141\165\164\157\055\144\145\164\145\143\164\151\157\156\000" "\106\111\114\105\056\056\056\012\012\122\145\164\165\162\156\040" "\164\150\145\040\141\142\163\157\154\165\164\145\040\160\141\164" "\150\156\141\155\145\163\040\157\146\040\147\151\166\145\156\040" "\106\111\114\105\000\133\055\144\040\104\105\114\101\131\135\040" "\133\055\156\135\040\133\055\146\135\012\012\122\145\142\157\157" "\164\040\164\150\145\040\163\171\163\164\145\155\012\012\011\055" "\144\040\123\105\103\011\104\145\154\141\171\040\151\156\164\145" "\162\166\141\154\012\011\055\156\011\104\157\040\156\157\164\040" "\163\171\156\143\012\011\055\146\011\106\157\162\143\145\040\050" "\144\157\156\047\164\040\147\157\040\164\150\162\157\165\147\150" "\040\151\156\151\164\051\000\133\117\120\124\111\117\116\123\135" "\012\012\120\141\162\163\145\040\115\111\115\105\055\145\156\143" "\157\144\145\144\040\155\145\163\163\141\147\145\040\157\156\040" "\163\164\144\151\156\012\012\011\055\170\040\120\122\105\106\111" "\130\011\105\170\164\162\141\143\164\040\143\157\156\164\145\156" "\164\040\157\146\040\115\111\115\105\040\163\145\143\164\151\157" "\156\163\040\164\157\040\146\151\154\145\163\012\011\055\130\040" "\120\122\117\107\040\101\122\107\123\011\106\151\154\164\145\162" "\040\143\157\156\164\145\156\164\040\157\146\040\115\111\115\105" "\040\163\145\143\164\151\157\156\163\040\164\150\162\157\165\147" "\150\040\120\122\117\107\012\011\011\011\115\165\163\164\040\142" "\145\040\164\150\145\040\154\141\163\164\040\157\160\164\151\157" "\156\012\012\117\164\150\145\162\040\157\160\164\151\157\156\163" "\040\141\162\145\040\163\151\154\145\156\164\154\171\040\151\147" "\156\157\162\145\144\000\123\110\105\114\114\056\056\056\012\012" "\122\145\155\157\166\145\040\123\110\105\114\114\163\040\146\162" "\157\155\040\057\145\164\143\057\163\150\145\154\154\163\000\173" "\173\055\156\040\111\116\103\122\105\115\105\116\124\175\040\174" "\040\120\122\111\117\122\111\124\131\175\040\133\133\055\160\040" "\174\040\055\147\040\174\040\055\165\135\040\111\104\056\056\056" "\135\012\012\103\150\141\156\147\145\040\163\143\150\145\144\165" "\154\151\156\147\040\160\162\151\157\162\151\164\171\040\146\157" "\162\040\141\040\162\165\156\156\151\156\147\040\160\162\157\143" "\145\163\163\012\012\011\055\156\011\101\144\152\165\163\164\040" "\143\165\162\162\145\156\164\040\156\151\143\145\040\166\141\154" "\165\145\040\050\163\155\141\154\154\145\162\040\151\163\040\146" "\141\163\164\145\162\051\012\011\055\160\011\120\162\157\143\145" "\163\163\040\151\144\050\163\051\040\050\144\145\146\141\165\154" "\164\051\012\011\055\147\011\120\162\157\143\145\163\163\040\147" "\162\157\165\160\040\151\144\050\163\051\012\011\055\165\011\120" "\162\157\143\145\163\163\040\165\163\145\162\040\156\141\155\145" "\050\163\051\040\141\156\144\057\157\162\040\151\144\050\163\051" "\000\012\012\122\145\163\145\164\040\164\150\145\040\163\143\162" "\145\145\156\000\012\012\122\145\163\151\172\145\040\164\150\145" "\040\163\143\162\145\145\156\000\133\106\111\114\105\135\056\056" "\056\012\012\122\145\166\145\162\163\145\040\154\151\156\145\163" "\040\157\146\040\106\111\114\105\000\133\055\151\162\146\135\040" "\106\111\114\105\056\056\056\012\012\122\145\155\157\166\145\040" "\050\165\156\154\151\156\153\051\040\106\111\114\105\163\012\012" "\011\055\151\011\101\154\167\141\171\163\040\160\162\157\155\160" "\164\040\142\145\146\157\162\145\040\162\145\155\157\166\151\156" "\147\012\011\055\146\011\116\145\166\145\162\040\160\162\157\155" "\160\164\012\011\055\122\054\055\162\011\122\145\143\165\162\163" "\145\000\133\117\120\124\111\117\116\123\135\040\104\111\122\105" "\103\124\117\122\131\056\056\056\012\012\122\145\155\157\166\145" "\040\104\111\122\105\103\124\117\122\131\040\151\146\040\151\164" "\040\151\163\040\145\155\160\164\171\012\012\011\055\160\174\055" "\055\160\141\162\145\156\164\163\011\111\156\143\154\165\144\145" "\040\160\141\162\145\156\164\163\012\011\055\055\151\147\156\157" "\162\145\055\146\141\151\154\055\157\156\055\156\157\156\055\145" "\155\160\164\171\000\133\055\161\146\167\162\163\166\135\040\115" "\117\104\125\114\105\040\133\163\171\155\142\157\154\075\166\141" "\154\165\145\135\056\056\056\012\012\011\055\162\011\122\145\155" "\157\166\145\040\115\117\104\125\114\105\040\050\163\164\141\143" "\153\163\051\040\157\162\040\144\157\040\141\165\164\157\143\154" "\145\141\156\012\011\055\161\011\121\165\151\145\164\012\011\055" "\166\011\126\145\162\142\157\163\145\012\011\055\146\011\106\157" "\162\143\145\012\011\055\167\011\127\141\151\164\040\146\157\162" "\040\165\156\154\157\141\144\012\011\055\163\011\122\145\160\157" "\162\164\040\166\151\141\040\163\171\163\154\157\147\040\151\156" "\163\164\145\141\144\040\157\146\040\163\164\144\145\162\162\000" "\133\173\141\144\144\174\144\145\154\174\144\145\154\145\164\145" "\175\135\012\012\105\144\151\164\040\153\145\162\156\145\154\040" "\162\157\165\164\151\156\147\040\164\141\142\154\145\163\012\012" "\011\055\156\011\104\157\156\047\164\040\162\145\163\157\154\166" "\145\040\156\141\155\145\163\012\011\055\145\011\104\151\163\160" "\154\141\171\040\157\164\150\145\162\057\155\157\162\145\040\151" "\156\146\157\162\155\141\164\151\157\156\012\011\055\101\040\151" "\156\145\164\173\066\175\011\123\145\154\145\143\164\040\141\144" "\144\162\145\163\163\040\146\141\155\151\154\171\000\055\151\040" "\120\101\103\113\101\107\105\056\162\160\155\073\040\162\160\155" "\040\055\161\160\133\151\154\144\143\135\040\120\101\103\113\101" "\107\105\056\162\160\155\012\012\115\141\156\151\160\165\154\141" "\164\145\040\122\120\115\040\160\141\143\153\141\147\145\163\012" "\012\103\157\155\155\141\156\144\163\072\012\011\055\151\011\111" "\156\163\164\141\154\154\040\160\141\143\153\141\147\145\012\011" "\055\161\160\011\121\165\145\162\171\040\160\141\143\153\141\147" "\145\012\011\055\161\160\151\011\123\150\157\167\040\151\156\146" "\157\162\155\141\164\151\157\156\012\011\055\161\160\154\011\114" "\151\163\164\040\143\157\156\164\145\156\164\163\012\011\055\161" "\160\144\011\114\151\163\164\040\144\157\143\165\155\145\156\164" "\163\012\011\055\161\160\143\011\114\151\163\164\040\143\157\156" "\146\151\147\040\146\151\154\145\163\000\160\141\143\153\141\147" "\145\056\162\160\155\012\012\117\165\164\160\165\164\040\141\040" "\143\160\151\157\040\141\162\143\150\151\166\145\040\157\146\040" "\164\150\145\040\162\160\155\040\146\151\154\145\000\133\055\141" "\040\174\040\055\154\040\174\040\055\165\135\040\133\055\144\040" "\104\105\126\135\040\133\055\155\040\115\117\104\105\135\040\133" "\055\163\040\123\105\103\040\174\040\055\164\040\124\111\115\105" "\135\012\012\105\156\164\145\162\040\141\040\163\171\163\164\145" "\155\040\163\154\145\145\160\040\163\164\141\164\145\040\165\156" "\164\151\154\040\163\160\145\143\151\146\151\145\144\040\167\141" "\153\145\165\160\040\164\151\155\145\012\012\011\055\141\054\055" "\055\141\165\164\157\011\122\145\141\144\040\143\154\157\143\153" "\040\155\157\144\145\040\146\162\157\155\040\141\144\152\164\151" "\155\145\012\011\055\154\054\055\055\154\157\143\141\154\011\103" "\154\157\143\153\040\151\163\040\163\145\164\040\164\157\040\154" "\157\143\141\154\040\164\151\155\145\012\011\055\165\054\055\055" "\165\164\143\011\103\154\157\143\153\040\151\163\040\163\145\164" "\040\164\157\040\125\124\103\040\164\151\155\145\012\011\055\144" "\054\055\055\144\145\166\151\143\145\075\104\105\126\011\123\160" "\145\143\151\146\171\040\164\150\145\040\122\124\103\040\144\145" "\166\151\143\145\012\011\055\155\054\055\055\155\157\144\145\075" "\115\117\104\105\011\123\145\164\040\164\150\145\040\163\154\145" "\145\160\040\163\164\141\164\145\040\050\144\145\146\141\165\154" "\164\072\040\163\164\141\156\144\142\171\051\012\011\055\163\054" "\055\055\163\145\143\157\156\144\163\075\123\105\103\040\123\145" "\164\040\164\150\145\040\164\151\155\145\157\165\164\040\151\156" "\040\123\105\103\040\163\145\143\157\156\144\163\040\146\162\157" "\155\040\156\157\167\012\011\055\164\054\055\055\164\151\155\145" "\075\124\111\115\105\011\123\145\164\040\164\150\145\040\164\151" "\155\145\157\165\164\040\164\157\040\124\111\115\105\040\163\145" "\143\157\156\144\163\040\146\162\157\155\040\145\160\157\143\150" "\000\133\055\141\040\101\122\107\135\056\056\056\040\133\055\165" "\040\125\115\101\123\113\135\040\133\055\055\162\145\166\145\162" "\163\145\135\040\133\055\055\164\145\163\164\135\040\133\055\055" "\145\170\151\164\055\157\156\055\145\162\162\157\162\135\040\133" "\055\055\154\151\163\164\135\040\104\111\122\105\103\124\117\122" "\131\012\012\122\165\156\040\141\040\142\165\156\143\150\040\157" "\146\040\163\143\162\151\160\164\163\040\151\156\040\104\111\122" "\105\103\124\117\122\131\012\012\011\055\141\040\101\122\107\011" "\011\120\141\163\163\040\101\122\107\040\141\163\040\141\162\147" "\165\155\145\156\164\040\164\157\040\163\143\162\151\160\164\163" "\012\011\055\165\040\125\115\101\123\113\011\123\145\164\040\125" "\115\101\123\113\040\142\145\146\157\162\145\040\162\165\156\156" "\151\156\147\040\163\143\162\151\160\164\163\012\011\055\055\162" "\145\166\145\162\163\145\011\122\145\166\145\162\163\145\040\145" "\170\145\143\165\164\151\157\156\040\157\162\144\145\162\012\011" "\055\055\164\145\163\164\011\011\104\162\171\040\162\165\156\012" "\011\055\055\145\170\151\164\055\157\156\055\145\162\162\157\162" "\011\105\170\151\164\040\151\146\040\141\040\163\143\162\151\160" "\164\040\145\170\151\164\163\040\167\151\164\150\040\156\157\156" "\055\172\145\162\157\012\011\055\055\154\151\163\164\011\011\120" "\162\151\156\164\040\156\141\155\145\163\040\157\146\040\155\141" "\164\143\150\151\156\147\040\146\151\154\145\163\040\145\166\145" "\156\040\151\146\040\164\150\145\171\040\141\162\145\040\156\157" "\164\040\145\170\145\143\165\164\141\142\154\145\000\133\106\111" "\114\105\135\012\012\106\151\156\144\040\164\150\145\040\143\165" "\162\162\145\156\164\040\141\156\144\040\160\162\145\166\151\157" "\165\163\040\163\171\163\164\145\155\040\162\165\156\154\145\166" "\145\154\012\012\111\146\040\156\157\040\165\164\155\160\040\106" "\111\114\105\040\145\170\151\163\164\163\040\157\162\040\151\146" "\040\156\157\040\162\165\156\154\145\166\145\154\040\162\145\143" "\157\162\144\040\143\141\156\040\142\145\040\146\157\165\156\144" "\054\012\160\162\151\156\164\040\042\165\156\153\156\157\167\156" "\042\000\104\111\122\012\012\123\164\141\162\164\040\141\156\144" "\040\155\157\156\151\164\157\162\040\141\040\163\145\162\166\151" "\143\145\040\141\156\144\040\157\160\164\151\157\156\141\154\154" "\171\040\141\156\040\141\160\160\145\156\144\141\156\164\040\154" "\157\147\040\163\145\162\166\151\143\145\000\133\055\120\135\040" "\133\055\163\040\123\103\122\111\120\124\135\040\104\111\122\012" "\012\123\164\141\162\164\040\141\040\162\165\156\163\166\040\160" "\162\157\143\145\163\163\040\146\157\162\040\145\141\143\150\040" "\163\165\142\144\151\162\145\143\164\157\162\171\056\040\111\146" "\040\151\164\040\145\170\151\164\163\054\040\162\145\163\164\141" "\162\164\040\151\164\056\012\012\011\055\120\011\011\120\165\164" "\040\145\141\143\150\040\162\165\156\163\166\040\151\156\040\141" "\040\156\145\167\040\163\145\163\163\151\157\156\012\011\055\163" "\040\123\103\122\111\120\124\011\122\165\156\040\123\103\122\111" "\120\124\040\074\163\151\147\156\157\076\040\141\146\164\145\162" "\040\163\151\147\156\141\154\040\151\163\040\160\162\157\143\145" "\163\163\145\144\000\106\111\114\105\012\012\122\145\143\145\151" "\166\145\040\141\040\146\151\154\145\040\165\163\151\156\147\040" "\164\150\145\040\170\155\157\144\145\155\040\160\162\157\164\157" "\143\157\154\000\133\055\141\146\161\164\135\040\133\055\143\040" "\120\122\117\107\135\040\133\117\125\124\106\111\114\105\135\012" "\012\011\055\141\011\101\160\160\145\156\144\040\157\165\164\160" "\165\164\012\011\055\143\040\120\122\117\107\011\122\165\156\040" "\120\122\117\107\054\040\156\157\164\040\163\150\145\154\154\012" "\011\055\146\011\106\154\165\163\150\040\157\165\164\160\165\164" "\040\141\146\164\145\162\040\145\141\143\150\040\167\162\151\164" "\145\012\011\055\161\011\121\165\151\145\164\012\011\055\164\011" "\123\145\156\144\040\164\151\155\151\156\147\040\164\157\040\163" "\164\144\145\162\162\000\164\151\155\151\156\147\146\151\154\145" "\040\133\164\171\160\145\163\143\162\151\160\164\040\133\144\151" "\166\151\163\157\162\135\135\012\012\120\154\141\171\040\142\141" "\143\153\040\164\171\160\145\163\143\162\151\160\164\163\054\040" "\165\163\151\156\147\040\164\151\155\151\156\147\040\151\156\146" "\157\162\155\141\164\151\157\156\000\133\055\151\156\162\105\135" "\040\133\055\146\040\106\111\114\105\135\056\056\056\040\133\055" "\145\040\103\115\104\135\056\056\056\040\133\106\111\114\105\135" "\056\056\056\012\157\162\072\040\163\145\144\040\133\055\151\156" "\162\105\135\040\103\115\104\040\133\106\111\114\105\135\056\056" "\056\012\012\011\055\145\040\103\115\104\011\101\144\144\040\103" "\115\104\040\164\157\040\163\145\144\040\143\157\155\155\141\156" "\144\163\040\164\157\040\142\145\040\145\170\145\143\165\164\145" "\144\012\011\055\146\040\106\111\114\105\011\101\144\144\040\106" "\111\114\105\040\143\157\156\164\145\156\164\163\040\164\157\040" "\163\145\144\040\143\157\155\155\141\156\144\163\040\164\157\040" "\142\145\040\145\170\145\143\165\164\145\144\012\011\055\151\133" "\123\106\130\135\011\105\144\151\164\040\146\151\154\145\163\040" "\151\156\055\160\154\141\143\145\040\050\157\164\150\145\162\167" "\151\163\145\040\163\145\156\144\163\040\164\157\040\163\164\144" "\157\165\164\051\012\011\011\117\160\164\151\157\156\141\154\154" "\171\040\142\141\143\153\040\146\151\154\145\163\040\165\160\054" "\040\141\160\160\145\156\144\151\156\147\040\123\106\130\012\011" "\055\156\011\123\165\160\160\162\145\163\163\040\141\165\164\157" "\155\141\164\151\143\040\160\162\151\156\164\151\156\147\040\157" "\146\040\160\141\164\164\145\162\156\040\163\160\141\143\145\012" "\011\055\162\054\055\105\011\125\163\145\040\145\170\164\145\156" "\144\145\144\040\162\145\147\145\170\040\163\171\156\164\141\170" "\012\012\111\146\040\156\157\040\055\145\040\157\162\040\055\146" "\054\040\164\150\145\040\146\151\162\163\164\040\156\157\156\055" "\157\160\164\151\157\156\040\141\162\147\165\155\145\156\164\040" "\151\163\040\164\150\145\040\163\145\144\040\143\157\155\155\141" "\156\144\040\163\164\162\151\156\147\056\012\122\145\155\141\151" "\156\151\156\147\040\141\162\147\165\155\145\156\164\163\040\141" "\162\145\040\151\156\160\165\164\040\146\151\154\145\163\040\050" "\163\164\144\151\156\040\151\146\040\156\157\156\145\051\056\000" "\133\117\120\124\111\117\116\123\135\040\133\122\105\103\111\120" "\111\105\116\124\137\105\115\101\111\114\135\056\056\056\012\012" "\122\145\141\144\040\145\155\141\151\154\040\146\162\157\155\040" "\163\164\144\151\156\040\141\156\144\040\163\145\156\144\040\151" "\164\012\012\123\164\141\156\144\141\162\144\040\157\160\164\151" "\157\156\163\072\012\011\055\164\011\011\122\145\141\144\040\141" "\144\144\151\164\151\157\156\141\154\040\162\145\143\151\160\151" "\145\156\164\163\040\146\162\157\155\040\155\145\163\163\141\147" "\145\040\142\157\144\171\012\011\055\146\040\123\105\116\104\105" "\122\011\106\157\162\040\165\163\145\040\151\156\040\115\101\111" "\114\040\106\122\117\115\072\074\163\145\156\144\145\162\076\056" "\040\103\141\156\040\142\145\040\145\155\160\164\171\040\163\164" "\162\151\156\147\012\011\011\011\104\145\146\141\165\154\164\072" "\040\055\141\165\125\123\105\122\054\040\157\162\040\165\163\145" "\162\156\141\155\145\040\157\146\040\143\165\162\162\145\156\164" "\040\125\111\104\012\011\055\157\040\117\120\124\111\117\116\123" "\011\126\141\162\151\157\165\163\040\157\160\164\151\157\156\163" "\056\040\055\157\151\040\151\155\160\154\151\145\144\054\040\157" "\164\150\145\162\163\040\141\162\145\040\151\147\156\157\162\145" "\144\012\011\055\151\011\011\055\157\151\040\163\171\156\157\156" "\171\155\056\040\151\155\160\154\151\145\144\040\141\156\144\040" "\151\147\156\157\162\145\144\012\012\102\165\163\171\142\157\170" "\040\163\160\145\143\151\146\151\143\040\157\160\164\151\157\156" "\163\072\012\011\055\166\011\011\126\145\162\142\157\163\145\012" "\011\055\167\040\123\105\103\123\011\011\116\145\164\167\157\162" "\153\040\164\151\155\145\157\165\164\012\011\055\110\040\047\120" "\122\117\107\040\101\122\107\123\047\011\122\165\156\040\143\157" "\156\156\145\143\164\151\157\156\040\150\145\154\160\145\162\012" "\011\011\011\105\170\141\155\160\154\145\163\072\012\011\011\011" "\055\110\040\047\145\170\145\143\040\157\160\145\156\163\163\154" "\040\163\137\143\154\151\145\156\164\040\055\161\165\151\145\164" "\040\055\164\154\163\061\040\055\163\164\141\162\164\164\154\163" "\040\163\155\164\160\012\011\011\011\011\055\143\157\156\156\145" "\143\164\040\163\155\164\160\056\147\155\141\151\154\056\143\157" "\155\072\062\065\047\040\074\145\155\141\151\154\056\164\170\164" "\012\011\011\011\011\133\064\074\165\163\145\162\156\141\155\145" "\137\141\156\144\137\160\141\163\163\167\144\056\164\170\164\040" "\174\040\055\141\165\125\123\105\122\040\055\141\160\120\101\123" "\123\135\012\011\011\011\055\110\040\047\145\170\145\143\040\157" "\160\145\156\163\163\154\040\163\137\143\154\151\145\156\164\040" "\055\161\165\151\145\164\040\055\164\154\163\061\012\011\011\011" "\011\055\143\157\156\156\145\143\164\040\163\155\164\160\056\147" "\155\141\151\154\056\143\157\155\072\064\066\065\047\040\074\145" "\155\141\151\154\056\164\170\164\012\011\011\011\011\133\064\074" "\165\163\145\162\156\141\155\145\137\141\156\144\137\160\141\163" "\163\167\144\056\164\170\164\040\174\040\055\141\165\125\123\105" "\122\040\055\141\160\120\101\123\123\135\012\011\055\123\040\110" "\117\123\124\133\072\120\117\122\124\135\011\123\145\162\166\145" "\162\012\011\055\141\165\125\123\105\122\011\011\125\163\145\162" "\156\141\155\145\040\146\157\162\040\101\125\124\110\040\114\117" "\107\111\116\012\011\055\141\160\120\101\123\123\040\011\120\141" "\163\163\167\157\162\144\040\146\157\162\040\101\125\124\110\040" "\114\117\107\111\116\012\012\117\164\150\145\162\040\157\160\164" "\151\157\156\163\040\141\162\145\040\163\151\154\145\156\164\154" "\171\040\151\147\156\157\162\145\144\073\040\055\157\151\040\055" "\164\040\151\163\040\151\155\160\154\151\145\144\012\125\163\145" "\040\155\141\153\145\155\151\155\145\040\164\157\040\143\162\145" "\141\164\145\040\145\155\141\151\154\163\040\167\151\164\150\040" "\141\164\164\141\143\150\155\145\156\164\163\000\133\055\167\135" "\040\133\055\163\040\123\105\120\135\040\133\106\111\122\123\124" "\040\133\111\116\103\135\135\040\114\101\123\124\012\012\120\162" "\151\156\164\040\156\165\155\142\145\162\163\040\146\162\157\155" "\040\106\111\122\123\124\040\164\157\040\114\101\123\124\054\040" "\151\156\040\163\164\145\160\163\040\157\146\040\111\116\103\056" "\012\106\111\122\123\124\054\040\111\116\103\040\144\145\146\141" "\165\154\164\040\164\157\040\061\056\012\012\011\055\167\011\120" "\141\144\040\164\157\040\154\141\163\164\040\167\151\164\150\040" "\154\145\141\144\151\156\147\040\172\145\162\157\163\012\011\055" "\163\040\123\105\120\011\123\164\162\151\156\147\040\163\145\160" "\141\162\141\164\157\162\000\160\145\162\163\157\156\141\154\151" "\164\171\040\120\122\117\107\040\101\122\107\123\012\012\120\145" "\162\163\157\156\141\154\151\164\171\040\155\141\171\040\142\145" "\072\012\011\154\151\156\165\170\063\062\011\011\123\145\164\040" "\063\062\142\151\164\040\165\156\141\155\145\040\145\155\165\154" "\141\164\151\157\156\012\011\154\151\156\165\170\066\064\011\011" "\123\145\164\040\066\064\142\151\164\040\165\156\141\155\145\040" "\145\155\165\154\141\164\151\157\156\000\133\055\162\174\055\055" "\162\145\163\145\164\135\040\133\104\105\126\111\103\105\135\012" "\012\122\145\144\151\162\145\143\164\040\163\171\163\164\145\155" "\040\143\157\156\163\157\154\145\040\157\165\164\160\165\164\040" "\164\157\040\104\105\126\111\103\105\040\050\144\145\146\141\165" "\154\164\072\040\057\144\145\166\057\164\164\171\051\012\012\011" "\055\162\011\122\145\163\145\164\040\157\165\164\160\165\164\040" "\164\157\040\057\144\145\166\057\143\157\156\163\157\154\145\000" "\106\117\116\124\040\133\055\155\040\115\101\120\106\111\114\105" "\135\040\133\055\103\040\124\124\131\135\012\012\114\157\141\144" "\040\141\040\143\157\156\163\157\154\145\040\146\157\156\164\012" "\012\011\055\155\040\115\101\120\106\111\114\105\011\114\157\141" "\144\040\143\157\156\163\157\154\145\040\163\143\162\145\145\156" "\040\155\141\160\012\011\055\103\040\124\124\131\011\011\101\146" "\146\145\143\164\040\124\124\131\040\151\156\163\164\145\141\144" "\040\157\146\040\057\144\145\166\057\164\164\171\000\123\103\101" "\116\103\117\104\105\040\113\105\131\103\117\104\105\056\056\056" "\012\012\123\145\164\040\145\156\164\162\151\145\163\040\151\156" "\164\157\040\164\150\145\040\153\145\162\156\145\154\047\163\040" "\163\143\141\156\143\157\144\145\055\164\157\055\153\145\171\143" "\157\144\145\040\155\141\160\054\012\141\154\154\157\167\151\156" "\147\040\165\156\165\163\165\141\154\040\153\145\171\142\157\141" "\162\144\163\040\164\157\040\147\145\156\145\162\141\164\145\040" "\165\163\141\142\154\145\040\153\145\171\143\157\144\145\163\056" "\012\012\123\103\101\116\103\117\104\105\040\155\141\171\040\142" "\145\040\145\151\164\150\145\162\040\170\170\040\157\162\040\145" "\060\170\170\040\050\150\145\170\141\144\145\143\151\155\141\154" "\051\054\012\141\156\144\040\113\105\131\103\117\104\105\040\151" "\163\040\147\151\166\145\156\040\151\156\040\144\145\143\151\155" "\141\154\056\000\116\012\012\122\145\144\151\162\145\143\164\040" "\164\150\145\040\153\145\162\156\145\154\040\157\165\164\160\165" "\164\040\164\157\040\143\157\156\163\157\154\145\040\116\040\050" "\060\040\146\157\162\040\143\165\162\162\145\156\164\051\000\133" "\055\147\141\142\107\166\172\126\135\040\104\105\126\111\103\105" "\040\133\120\101\122\101\115\105\124\105\122\040\133\101\122\107" "\135\135\056\056\056\012\012\122\145\161\165\145\163\164\040\157" "\162\040\163\145\164\040\114\151\156\165\170\040\163\145\162\151" "\141\154\040\160\157\162\164\040\151\156\146\157\162\155\141\164" "\151\157\156\012\012\011\055\147\011\111\156\164\145\162\160\162" "\145\164\040\160\141\162\141\155\145\164\145\162\163\040\141\163" "\040\154\151\163\164\040\157\146\040\144\145\166\151\143\145\163" "\040\146\157\162\040\162\145\160\157\162\164\151\156\147\012\011" "\055\141\011\120\162\151\156\164\040\141\154\154\040\141\166\141" "\151\154\141\142\154\145\040\151\156\146\157\162\155\141\164\151" "\157\156\012\011\055\142\011\120\162\151\156\164\040\163\165\155" "\155\141\162\171\040\151\156\146\157\162\155\141\164\151\157\156" "\012\011\055\107\011\120\162\151\156\164\040\151\156\040\146\157" "\162\155\040\167\150\151\143\150\040\143\141\156\040\142\145\040" "\146\145\144\040\142\141\143\153\012\011\011\164\157\040\163\145" "\164\163\145\162\151\141\154\040\141\163\040\143\157\155\155\141" "\156\144\040\154\151\156\145\040\160\141\162\141\155\145\164\145" "\162\163\012\011\055\172\011\132\145\162\157\040\157\165\164\040" "\163\145\162\151\141\154\040\146\154\141\147\163\040\142\145\146" "\157\162\145\040\163\145\164\164\151\156\147\012\011\055\166\011" "\126\145\162\142\157\163\145\012\012\120\141\162\141\155\145\164" "\145\162\163\072\040\050\052\040\075\040\164\141\153\145\163\040" "\141\156\040\141\162\147\165\155\145\156\164\054\040\136\040\075" "\040\143\141\156\040\142\145\040\164\165\162\156\145\144\040\157" "\146\146\040\142\171\040\160\162\145\143\145\144\151\156\147\040" "\136\051\012\011\052\160\157\162\164\054\040\052\151\162\161\054" "\040\052\144\151\166\151\163\157\162\054\040\052\165\141\162\164" "\054\040\052\142\141\165\144\137\142\141\163\145\054\040\052\143" "\154\157\163\145\137\144\145\154\141\171\054\040\052\143\154\157" "\163\151\156\147\137\167\141\151\164\054\012\011\136\146\157\165" "\162\160\157\162\164\054\040\136\141\165\164\157\137\151\162\161" "\054\040\136\163\153\151\160\137\164\145\163\164\054\040\136\163" "\141\153\054\040\136\163\145\163\163\151\157\156\137\154\157\143" "\153\157\165\164\054\040\136\160\147\162\160\137\154\157\143\153" "\157\165\164\054\012\011\136\143\141\154\154\157\165\164\137\156" "\157\150\165\160\054\040\136\163\160\154\151\164\137\164\145\162" "\155\151\157\163\054\040\136\150\165\160\137\156\157\164\151\146" "\171\054\040\136\154\157\167\137\154\141\164\145\156\143\171\054" "\040\141\165\164\157\143\157\156\146\151\147\054\012\011\163\160" "\144\137\156\157\162\155\141\154\054\040\163\160\144\137\150\151" "\054\040\163\160\144\137\166\150\151\054\040\163\160\144\137\163" "\150\151\054\040\163\160\144\137\167\141\162\160\054\040\163\160" "\144\137\143\165\163\164\012\012\125\101\122\124\040\164\171\160" "\145\163\072\012\011\165\156\153\156\157\167\156\054\040\070\062" "\065\060\054\040\061\066\064\065\060\054\040\061\066\065\065\060" "\054\040\061\066\065\065\060\101\054\040\103\151\162\162\165\163" "\054\040\061\066\066\065\060\054\040\061\066\066\065\060\126\062" "\054\040\061\066\067\065\060\054\012\011\061\066\071\065\060\054" "\040\061\066\071\065\064\054\040\061\066\066\065\064\054\040\061" "\066\070\065\060\054\040\122\123\101\054\040\116\123\061\066\065" "\065\060\101\054\040\130\123\103\101\114\105\054\040\122\115\071" "\060\060\060\054\040\117\103\124\105\117\116\054\040\101\122\067" "\054\012\011\125\066\137\061\066\065\065\060\101\000\120\122\117" "\107\040\101\122\107\123\012\012\122\165\156\040\120\122\117\107" "\040\151\156\040\141\040\156\145\167\040\163\145\163\163\151\157" "\156\056\040\120\122\117\107\040\167\151\154\154\040\150\141\166" "\145\040\156\157\040\143\157\156\164\162\157\154\154\151\156\147" "\040\164\145\162\155\151\156\141\154\012\141\156\144\040\167\151" "\154\154\040\156\157\164\040\142\145\040\141\146\146\145\143\164" "\145\144\040\142\171\040\153\145\171\142\157\141\162\144\040\163" "\151\147\156\141\154\163\040\050\103\164\162\154\055\103\040\145" "\164\143\051\056\012\123\145\145\040\163\145\164\163\151\144\050" "\062\051\040\146\157\162\040\144\145\164\141\151\154\163\056\000" "\125\123\105\122\040\120\122\117\107\040\101\122\107\123\012\012" "\123\145\164\040\165\151\144\040\141\156\144\040\147\151\144\040" "\164\157\040\125\123\105\122\047\163\040\165\151\144\040\141\156" "\144\040\147\151\144\054\040\144\162\157\160\040\163\165\160\160" "\154\145\155\145\156\164\141\162\171\040\147\162\157\165\160\040" "\151\144\163\054\012\162\165\156\040\120\122\117\107\000\133\055" "\057\053\117\120\124\111\117\116\123\135\040\133\055\057\053\157" "\040\117\120\124\135\056\056\056\040\133\055\143\040\047\123\103" "\122\111\120\124\047\040\133\101\122\107\060\040\133\101\122\107" "\123\135\135\040\057\040\106\111\114\105\040\133\101\122\107\123" "\135\135\012\012\125\156\151\170\040\163\150\145\154\154\040\151" "\156\164\145\162\160\162\145\164\145\162\000\133\055\143\133\163" "\167\135\135\040\133\106\111\114\105\135\056\056\056\012\012\120" "\162\151\156\164\040\157\162\040\143\150\145\143\153\040\123\110" "\101\061\040\143\150\145\143\153\163\165\155\163\012\012\011\055" "\143\011\103\150\145\143\153\040\163\165\155\163\040\141\147\141" "\151\156\163\164\040\154\151\163\164\040\151\156\040\106\111\114" "\105\163\012\011\055\163\011\104\157\156\047\164\040\157\165\164" "\160\165\164\040\141\156\171\164\150\151\156\147\054\040\163\164" "\141\164\165\163\040\143\157\144\145\040\163\150\157\167\163\040" "\163\165\143\143\145\163\163\012\011\055\167\011\127\141\162\156" "\040\141\142\157\165\164\040\151\155\160\162\157\160\145\162\154" "\171\040\146\157\162\155\141\164\164\145\144\040\143\150\145\143" "\153\163\165\155\040\154\151\156\145\163\000\133\055\143\133\163" "\167\135\135\040\133\106\111\114\105\135\056\056\056\012\012\120" "\162\151\156\164\040\157\162\040\143\150\145\143\153\040\123\110" "\101\062\065\066\040\143\150\145\143\153\163\165\155\163\012\012" "\011\055\143\011\103\150\145\143\153\040\163\165\155\163\040\141" "\147\141\151\156\163\164\040\154\151\163\164\040\151\156\040\106" "\111\114\105\163\012\011\055\163\011\104\157\156\047\164\040\157" "\165\164\160\165\164\040\141\156\171\164\150\151\156\147\054\040" "\163\164\141\164\165\163\040\143\157\144\145\040\163\150\157\167" "\163\040\163\165\143\143\145\163\163\012\011\055\167\011\127\141" "\162\156\040\141\142\157\165\164\040\151\155\160\162\157\160\145" "\162\154\171\040\146\157\162\155\141\164\164\145\144\040\143\150" "\145\143\153\163\165\155\040\154\151\156\145\163\000\133\055\143" "\133\163\167\135\135\040\133\106\111\114\105\135\056\056\056\012" "\012\120\162\151\156\164\040\157\162\040\143\150\145\143\153\040" "\123\110\101\063\055\065\061\062\040\143\150\145\143\153\163\165" "\155\163\012\012\011\055\143\011\103\150\145\143\153\040\163\165" "\155\163\040\141\147\141\151\156\163\164\040\154\151\163\164\040" "\151\156\040\106\111\114\105\163\012\011\055\163\011\104\157\156" "\047\164\040\157\165\164\160\165\164\040\141\156\171\164\150\151" "\156\147\054\040\163\164\141\164\165\163\040\143\157\144\145\040" "\163\150\157\167\163\040\163\165\143\143\145\163\163\012\011\055" "\167\011\127\141\162\156\040\141\142\157\165\164\040\151\155\160" "\162\157\160\145\162\154\171\040\146\157\162\155\141\164\164\145" "\144\040\143\150\145\143\153\163\165\155\040\154\151\156\145\163" "\000\133\055\143\133\163\167\135\135\040\133\106\111\114\105\135" "\056\056\056\012\012\120\162\151\156\164\040\157\162\040\143\150" "\145\143\153\040\123\110\101\065\061\062\040\143\150\145\143\153" "\163\165\155\163\012\012\011\055\143\011\103\150\145\143\153\040" "\163\165\155\163\040\141\147\141\151\156\163\164\040\154\151\163" "\164\040\151\156\040\106\111\114\105\163\012\011\055\163\011\104" "\157\156\047\164\040\157\165\164\160\165\164\040\141\156\171\164" "\150\151\156\147\054\040\163\164\141\164\165\163\040\143\157\144" "\145\040\163\150\157\167\163\040\163\165\143\143\145\163\163\012" "\011\055\167\011\127\141\162\156\040\141\142\157\165\164\040\151" "\155\160\162\157\160\145\162\154\171\040\146\157\162\155\141\164" "\164\145\144\040\143\150\145\143\153\163\165\155\040\154\151\156" "\145\163\000\133\055\141\040\174\040\055\153\040\174\040\055\163" "\135\012\012\123\150\157\167\040\153\145\171\163\040\160\162\145" "\163\163\145\144\012\012\011\055\141\011\104\151\163\160\154\141" "\171\040\144\145\143\151\155\141\154\057\157\143\164\141\154\057" "\150\145\170\040\166\141\154\165\145\163\040\157\146\040\164\150" "\145\040\153\145\171\163\012\011\055\153\011\104\151\163\160\154" "\141\171\040\151\156\164\145\162\160\162\145\164\145\144\040\153" "\145\171\143\157\144\145\163\040\050\144\145\146\141\165\154\164" "\051\012\011\055\163\011\104\151\163\160\154\141\171\040\162\141" "\167\040\163\143\141\156\055\143\157\144\145\163\000\133\055\145" "\174\055\151\040\114\055\110\135\040\133\055\156\040\116\125\115" "\135\040\133\055\157\040\106\111\114\105\135\040\133\055\172\135" "\040\133\106\111\114\105\174\101\122\107\056\056\056\135\012\012" "\122\141\156\144\157\155\154\171\040\160\145\162\155\165\164\145" "\040\154\151\156\145\163\012\012\011\055\145\011\124\162\145\141" "\164\040\101\122\107\163\040\141\163\040\154\151\156\145\163\012" "\011\055\151\040\114\055\110\011\124\162\145\141\164\040\156\165" "\155\142\145\162\163\040\114\055\110\040\141\163\040\154\151\156" "\145\163\012\011\055\156\040\116\125\115\011\117\165\164\160\165" "\164\040\141\164\040\155\157\163\164\040\116\125\115\040\154\151" "\156\145\163\012\011\055\157\040\106\111\114\105\011\127\162\151" "\164\145\040\164\157\040\106\111\114\105\054\040\156\157\164\040" "\163\164\141\156\144\141\162\144\040\157\165\164\160\165\164\012" "\011\055\172\011\105\156\144\040\154\151\156\145\163\040\167\151" "\164\150\040\172\145\162\157\040\142\171\164\145\054\040\156\157" "\164\040\156\145\167\154\151\156\145\000\133\055\143\145\150\155" "\114\106\135\040\133\055\163\040\123\120\105\105\104\135\040\133" "\055\160\040\120\122\117\124\117\103\117\114\135\040\104\105\126" "\111\103\105\012\012\101\164\164\141\143\150\040\156\145\164\167" "\157\162\153\040\151\156\164\145\162\146\141\143\145\050\163\051" "\040\164\157\040\163\145\162\151\141\154\040\154\151\156\145\050" "\163\051\012\012\011\055\160\040\120\122\117\124\011\123\145\164" "\040\160\162\157\164\157\143\157\154\040\050\163\154\151\160\054" "\040\143\163\154\151\160\054\040\163\154\151\160\066\054\040\143" "\154\151\163\160\066\040\157\162\040\141\144\141\160\164\151\166" "\145\051\012\011\055\163\040\123\120\104\011\123\145\164\040\154" "\151\156\145\040\163\160\145\145\144\012\011\055\145\011\105\170" "\151\164\040\141\146\164\145\162\040\151\156\151\164\151\141\154" "\151\172\151\156\147\040\144\145\166\151\143\145\012\011\055\150" "\011\105\170\151\164\040\167\150\145\156\040\164\150\145\040\143" "\141\162\162\151\145\162\040\151\163\040\154\157\163\164\012\011" "\055\143\040\120\122\117\107\011\122\165\156\040\120\122\117\107" "\040\167\150\145\156\040\164\150\145\040\154\151\156\145\040\151" "\163\040\150\165\156\147\040\165\160\012\011\055\155\011\104\157" "\040\116\117\124\040\151\156\151\164\151\141\154\151\172\145\040" "\164\150\145\040\154\151\156\145\040\151\156\040\162\141\167\040" "\070\040\142\151\164\163\040\155\157\144\145\012\011\055\114\011" "\105\156\141\142\154\145\040\063\055\167\151\162\145\040\157\160" "\145\162\141\164\151\157\156\012\011\055\106\011\104\151\163\141" "\142\154\145\040\122\124\123\057\103\124\123\040\146\154\157\167" "\040\143\157\156\164\162\157\154\000\133\116\135\056\056\056\012" "\012\120\141\165\163\145\040\146\157\162\040\141\040\164\151\155" "\145\040\145\161\165\141\154\040\164\157\040\164\150\145\040\164" "\157\164\141\154\040\157\146\040\164\150\145\040\141\162\147\163" "\040\147\151\166\145\156\054\040\167\150\145\162\145\040\145\141" "\143\150\040\141\162\147\040\143\141\156\012\150\141\166\145\040" "\141\156\040\157\160\164\151\157\156\141\154\040\163\165\146\146" "\151\170\040\157\146\040\050\163\051\145\143\157\156\144\163\054" "\040\050\155\051\151\156\165\164\145\163\054\040\050\150\051\157" "\165\162\163\054\040\157\162\040\050\144\051\141\171\163\000\076" "\123\115\105\115\104\101\124\101\056\124\101\122\012\012\103\157" "\154\154\145\143\164\040\155\145\155\157\162\171\040\165\163\141" "\147\145\040\144\141\164\141\040\151\156\040\057\160\162\157\143" "\040\141\156\144\040\167\162\151\164\145\040\151\164\040\164\157" "\040\163\164\144\157\165\164\000\133\055\141\040\102\131\124\105" "\123\135\040\133\055\155\040\102\131\124\105\123\135\040\133\055" "\144\040\102\131\124\105\123\135\040\133\055\163\040\102\131\124" "\105\123\135\040\133\055\154\040\102\131\124\105\123\135\012\011" "\133\055\146\040\102\131\124\105\123\135\040\133\055\143\040\102" "\131\124\105\123\135\040\133\055\162\040\102\131\124\105\123\135" "\040\133\055\157\040\116\135\040\133\055\160\040\116\135\040\133" "\055\164\040\116\135\012\011\120\122\117\107\040\101\122\107\123" "\012\012\123\145\164\040\163\157\146\164\040\162\145\163\157\165" "\162\143\145\040\154\151\155\151\164\163\054\040\164\150\145\156" "\040\162\165\156\040\120\122\117\107\012\012\011\055\141\040\102" "\131\124\105\123\011\114\151\155\151\164\040\164\157\164\141\154" "\040\163\151\172\145\040\157\146\040\141\154\154\040\163\145\147" "\155\145\156\164\163\012\011\055\155\040\102\131\124\105\123\011" "\123\141\155\145\040\141\163\040\055\144\040\102\131\124\105\123" "\040\055\163\040\102\131\124\105\123\040\055\154\040\102\131\124" "\105\123\040\055\141\040\102\131\124\105\123\012\011\055\144\040" "\102\131\124\105\123\011\114\151\155\151\164\040\144\141\164\141" "\040\163\145\147\155\145\156\164\012\011\055\163\040\102\131\124" "\105\123\011\114\151\155\151\164\040\163\164\141\143\153\040\163" "\145\147\155\145\156\164\012\011\055\154\040\102\131\124\105\123" "\011\114\151\155\151\164\040\154\157\143\153\145\144\040\155\145" "\155\157\162\171\040\163\151\172\145\012\011\055\157\040\116\011" "\011\114\151\155\151\164\040\156\165\155\142\145\162\040\157\146" "\040\157\160\145\156\040\146\151\154\145\163\040\160\145\162\040" "\160\162\157\143\145\163\163\012\011\055\160\040\116\011\011\114" "\151\155\151\164\040\156\165\155\142\145\162\040\157\146\040\160" "\162\157\143\145\163\163\145\163\040\160\145\162\040\165\151\144" "\012\117\160\164\151\157\156\163\040\143\157\156\164\162\157\154" "\154\151\156\147\040\146\151\154\145\040\163\151\172\145\163\072" "\012\011\055\146\040\102\131\124\105\123\011\114\151\155\151\164" "\040\157\165\164\160\165\164\040\146\151\154\145\040\163\151\172" "\145\163\012\011\055\143\040\102\131\124\105\123\011\114\151\155" "\151\164\040\143\157\162\145\040\146\151\154\145\040\163\151\172" "\145\012\105\146\146\151\143\151\145\156\143\171\040\157\160\164" "\163\072\012\011\055\162\040\102\131\124\105\123\011\114\151\155" "\151\164\040\162\145\163\151\144\145\156\164\040\163\145\164\040" "\163\151\172\145\012\011\055\164\040\116\011\011\114\151\155\151" "\164\040\103\120\125\040\164\151\155\145\054\040\160\162\157\143" "\145\163\163\040\162\145\143\145\151\166\145\163\012\011\011\011" "\141\040\123\111\107\130\103\120\125\040\141\146\164\145\162\040" "\116\040\163\145\143\157\156\144\163\000\133\055\156\162\165\147" "\115\143\163\172\142\144\146\151\155\123\124\157\153\164\135\040" "\133\055\157\040\106\111\114\105\135\040\133\055\153\040\163\164" "\141\162\164\133\056\157\146\146\163\145\164\135\133\157\160\164" "\163\135\133\054\145\156\144\133\056\157\146\146\163\145\164\135" "\133\157\160\164\163\135\135\040\133\055\164\040\103\110\101\122" "\135\040\133\106\111\114\105\135\056\056\056\012\012\123\157\162" "\164\040\154\151\156\145\163\040\157\146\040\164\145\170\164\012" "\012\011\055\142\011\111\147\156\157\162\145\040\154\145\141\144" "\151\156\147\040\142\154\141\156\153\163\012\011\055\143\011\103" "\150\145\143\153\040\167\150\145\164\150\145\162\040\151\156\160" "\165\164\040\151\163\040\163\157\162\164\145\144\012\011\055\144" "\011\104\151\143\164\151\157\156\141\162\171\040\157\162\144\145" "\162\040\050\142\154\141\156\153\040\157\162\040\141\154\160\150" "\141\156\165\155\145\162\151\143\040\157\156\154\171\051\012\011" "\055\146\011\111\147\156\157\162\145\040\143\141\163\145\012\011" "\055\147\011\107\145\156\145\162\141\154\040\156\165\155\145\162" "\151\143\141\154\040\163\157\162\164\012\011\055\151\011\111\147" "\156\157\162\145\040\165\156\160\162\151\156\164\141\142\154\145" "\040\143\150\141\162\141\143\164\145\162\163\012\011\055\153\011" "\123\157\162\164\040\153\145\171\012\011\055\115\011\123\157\162" "\164\040\155\157\156\164\150\012\011\055\156\011\123\157\162\164" "\040\156\165\155\142\145\162\163\012\011\055\157\011\117\165\164" "\160\165\164\040\164\157\040\146\151\154\145\012\011\055\153\011" "\123\157\162\164\040\142\171\040\153\145\171\012\011\055\164\040" "\103\110\101\122\011\113\145\171\040\163\145\160\141\162\141\164" "\157\162\012\011\055\162\011\122\145\166\145\162\163\145\040\163" "\157\162\164\040\157\162\144\145\162\012\011\055\163\011\123\164" "\141\142\154\145\040\050\144\157\156\047\164\040\163\157\162\164" "\040\164\151\145\163\040\141\154\160\150\141\142\145\164\151\143" "\141\154\154\171\051\012\011\055\165\011\123\165\160\160\162\145" "\163\163\040\144\165\160\154\151\143\141\164\145\040\154\151\156" "\145\163\012\011\055\172\011\114\151\156\145\163\040\141\162\145" "\040\164\145\162\155\151\156\141\164\145\144\040\142\171\040\116" "\125\114\054\040\156\157\164\040\156\145\167\154\151\156\145\012" "\011\055\155\123\124\011\111\147\156\157\162\145\144\040\146\157" "\162\040\107\116\125\040\143\157\155\160\141\164\151\142\151\154" "\151\164\171\000\133\117\120\124\111\117\116\123\135\040\133\111" "\116\120\125\124\040\133\120\122\105\106\111\130\135\135\012\012" "\011\055\142\040\116\133\153\174\155\135\011\123\160\154\151\164" "\040\142\171\040\116\040\050\153\151\154\157\174\155\145\147\141" "\051\142\171\164\145\163\012\011\055\154\040\116\011\011\123\160" "\154\151\164\040\142\171\040\116\040\154\151\156\145\163\012\011" "\055\141\040\116\011\011\125\163\145\040\116\040\154\145\164\164" "\145\162\163\040\141\163\040\163\165\146\146\151\170\000\133\117" "\120\124\111\117\116\123\135\040\133\055\123\174\055\113\135\040" "\056\056\056\040\133\055\055\040\101\122\107\123\056\056\056\135" "\012\012\123\145\141\162\143\150\040\146\157\162\040\155\141\164" "\143\150\151\156\147\040\160\162\157\143\145\163\163\145\163\054" "\040\141\156\144\040\164\150\145\156\012\055\113\072\040\163\164" "\157\160\040\141\154\154\040\155\141\164\143\150\151\156\147\040" "\160\162\157\143\145\163\163\145\163\056\012\055\123\072\040\163" "\164\141\162\164\040\141\040\160\162\157\143\145\163\163\040\165" "\156\154\145\163\163\040\141\040\155\141\164\143\150\151\156\147" "\040\160\162\157\143\145\163\163\040\151\163\040\146\157\165\156" "\144\056\012\012\120\162\157\143\145\163\163\040\155\141\164\143" "\150\151\156\147\072\012\011\055\165\054\055\055\165\163\145\162" "\040\125\123\105\122\116\101\115\105\174\125\111\104\011\115\141" "\164\143\150\040\157\156\154\171\040\164\150\151\163\040\165\163" "\145\162\047\163\040\160\162\157\143\145\163\163\145\163\012\011" "\055\156\054\055\055\156\141\155\145\040\116\101\115\105\011\011" "\115\141\164\143\150\040\160\162\157\143\145\163\163\145\163\040" "\167\151\164\150\040\116\101\115\105\012\011\011\011\011\151\156" "\040\143\157\155\155\040\146\151\145\154\144\040\151\156\040\057" "\160\162\157\143\057\120\111\104\057\163\164\141\164\012\011\055" "\170\054\055\055\145\170\145\143\040\105\130\105\103\125\124\101" "\102\114\105\011\115\141\164\143\150\040\160\162\157\143\145\163" "\163\145\163\040\167\151\164\150\040\164\150\151\163\040\143\157" "\155\155\141\156\144\012\011\011\011\011\151\156\040\057\160\162" "\157\143\057\120\111\104\057\173\145\170\145\054\143\155\144\154" "\151\156\145\175\012\011\055\160\054\055\055\160\151\144\146\151" "\154\145\040\106\111\114\105\011\115\141\164\143\150\040\141\040" "\160\162\157\143\145\163\163\040\167\151\164\150\040\120\111\104" "\040\146\162\157\155\040\164\150\145\040\146\151\154\145\012\011" "\101\154\154\040\163\160\145\143\151\146\151\145\144\040\143\157" "\156\144\151\164\151\157\156\163\040\155\165\163\164\040\155\141" "\164\143\150\012\055\123\040\157\156\154\171\072\012\011\055\170" "\054\055\055\145\170\145\143\040\105\130\105\103\125\124\101\102" "\114\105\011\120\162\157\147\162\141\155\040\164\157\040\162\165" "\156\012\011\055\141\054\055\055\163\164\141\162\164\141\163\040" "\116\101\115\105\011\132\145\162\157\164\150\040\141\162\147\165" "\155\145\156\164\012\011\055\142\054\055\055\142\141\143\153\147" "\162\157\165\156\144\011\011\102\141\143\153\147\162\157\165\156" "\144\012\011\055\116\054\055\055\156\151\143\145\154\145\166\145" "\154\040\116\011\103\150\141\156\147\145\040\156\151\143\145\040" "\154\145\166\145\154\012\011\055\143\054\055\055\143\150\165\151" "\144\040\125\123\105\122\133\072\133\107\122\120\135\135\011\103" "\150\141\156\147\145\040\164\157\040\165\163\145\162\057\147\162" "\157\165\160\012\011\055\155\054\055\055\155\141\153\145\055\160" "\151\144\146\151\154\145\011\127\162\151\164\145\040\120\111\104" "\040\164\157\040\164\150\145\040\160\151\144\146\151\154\145\040" "\163\160\145\143\151\146\151\145\144\040\142\171\040\055\160\012" "\055\113\040\157\156\154\171\072\012\011\055\163\054\055\055\163" "\151\147\156\141\154\040\123\111\107\011\011\123\151\147\156\141" "\154\040\164\157\040\163\145\156\144\012\011\055\164\054\055\055" "\164\145\163\164\011\011\115\141\164\143\150\040\157\156\154\171" "\054\040\145\170\151\164\040\167\151\164\150\040\060\040\151\146" "\040\141\040\160\162\157\143\145\163\163\040\151\163\040\146\157" "\165\156\144\012\117\164\150\145\162\072\012\011\055\157\054\055" "\055\157\153\156\157\144\157\011\011\105\170\151\164\040\167\151" "\164\150\040\163\164\141\164\165\163\040\060\040\151\146\040\156" "\157\164\150\151\156\147\040\151\163\040\144\157\156\145\012\011" "\055\166\054\055\055\166\145\162\142\157\163\145\011\011\126\145" "\162\142\157\163\145\012\011\055\161\054\055\055\161\165\151\145" "\164\011\011\121\165\151\145\164\000\133\117\120\124\111\117\116" "\123\135\040\106\111\114\105\056\056\056\012\012\104\151\163\160" "\154\141\171\040\146\151\154\145\040\050\144\145\146\141\165\154" "\164\051\040\157\162\040\146\151\154\145\163\171\163\164\145\155" "\040\163\164\141\164\165\163\012\012\011\055\143\040\146\155\164" "\011\125\163\145\040\164\150\145\040\163\160\145\143\151\146\151" "\145\144\040\146\157\162\155\141\164\012\011\055\146\011\104\151" "\163\160\154\141\171\040\146\151\154\145\163\171\163\164\145\155" "\040\163\164\141\164\165\163\012\011\055\114\011\106\157\154\154" "\157\167\040\154\151\156\153\163\012\011\055\164\011\104\151\163" "\160\154\141\171\040\151\156\146\157\040\151\156\040\164\145\162" "\163\145\040\146\157\162\155\012\012\126\141\154\151\144\040\146" "\157\162\155\141\164\040\163\145\161\165\145\156\143\145\163\040" "\146\157\162\040\146\151\154\145\163\072\012\040\045\141\011\101" "\143\143\145\163\163\040\162\151\147\150\164\163\040\151\156\040" "\157\143\164\141\154\012\040\045\101\011\101\143\143\145\163\163" "\040\162\151\147\150\164\163\040\151\156\040\150\165\155\141\156" "\040\162\145\141\144\141\142\154\145\040\146\157\162\155\012\040" "\045\142\011\116\165\155\142\145\162\040\157\146\040\142\154\157" "\143\153\163\040\141\154\154\157\143\141\164\145\144\040\050\163" "\145\145\040\045\102\051\012\040\045\102\011\124\150\145\040\163" "\151\172\145\040\151\156\040\142\171\164\145\163\040\157\146\040" "\145\141\143\150\040\142\154\157\143\153\040\162\145\160\157\162" "\164\145\144\040\142\171\040\045\142\012\040\045\144\011\104\145" "\166\151\143\145\040\156\165\155\142\145\162\040\151\156\040\144" "\145\143\151\155\141\154\012\040\045\104\011\104\145\166\151\143" "\145\040\156\165\155\142\145\162\040\151\156\040\150\145\170\012" "\040\045\146\011\122\141\167\040\155\157\144\145\040\151\156\040" "\150\145\170\012\040\045\106\011\106\151\154\145\040\164\171\160" "\145\012\040\045\147\011\107\162\157\165\160\040\111\104\040\157" "\146\040\157\167\156\145\162\012\040\045\107\011\107\162\157\165" "\160\040\156\141\155\145\040\157\146\040\157\167\156\145\162\012" "\040\045\150\011\116\165\155\142\145\162\040\157\146\040\150\141" "\162\144\040\154\151\156\153\163\012\040\045\151\011\111\156\157" "\144\145\040\156\165\155\142\145\162\012\040\045\156\011\106\151" "\154\145\040\156\141\155\145\012\040\045\116\011\106\151\154\145" "\040\156\141\155\145\054\040\167\151\164\150\040\055\076\040\124" "\101\122\107\105\124\040\151\146\040\163\171\155\154\151\156\153" "\012\040\045\157\011\111\057\117\040\142\154\157\143\153\040\163" "\151\172\145\012\040\045\163\011\124\157\164\141\154\040\163\151" "\172\145\054\040\151\156\040\142\171\164\145\163\012\040\045\164" "\011\115\141\152\157\162\040\144\145\166\151\143\145\040\164\171" "\160\145\040\151\156\040\150\145\170\012\040\045\124\011\115\151" "\156\157\162\040\144\145\166\151\143\145\040\164\171\160\145\040" "\151\156\040\150\145\170\012\040\045\165\011\125\163\145\162\040" "\111\104\040\157\146\040\157\167\156\145\162\012\040\045\125\011" "\125\163\145\162\040\156\141\155\145\040\157\146\040\157\167\156" "\145\162\012\040\045\170\011\124\151\155\145\040\157\146\040\154" "\141\163\164\040\141\143\143\145\163\163\012\040\045\130\011\124" "\151\155\145\040\157\146\040\154\141\163\164\040\141\143\143\145" "\163\163\040\141\163\040\163\145\143\157\156\144\163\040\163\151" "\156\143\145\040\105\160\157\143\150\012\040\045\171\011\124\151" "\155\145\040\157\146\040\154\141\163\164\040\155\157\144\151\146" "\151\143\141\164\151\157\156\012\040\045\131\011\124\151\155\145" "\040\157\146\040\154\141\163\164\040\155\157\144\151\146\151\143" "\141\164\151\157\156\040\141\163\040\163\145\143\157\156\144\163" "\040\163\151\156\143\145\040\105\160\157\143\150\012\040\045\172" "\011\124\151\155\145\040\157\146\040\154\141\163\164\040\143\150" "\141\156\147\145\012\040\045\132\011\124\151\155\145\040\157\146" "\040\154\141\163\164\040\143\150\141\156\147\145\040\141\163\040" "\163\145\143\157\156\144\163\040\163\151\156\143\145\040\105\160" "\157\143\150\012\012\126\141\154\151\144\040\146\157\162\155\141" "\164\040\163\145\161\165\145\156\143\145\163\040\146\157\162\040" "\146\151\154\145\040\163\171\163\164\145\155\163\072\012\040\045" "\141\011\106\162\145\145\040\142\154\157\143\153\163\040\141\166" "\141\151\154\141\142\154\145\040\164\157\040\156\157\156\055\163" "\165\160\145\162\165\163\145\162\012\040\045\142\011\124\157\164" "\141\154\040\144\141\164\141\040\142\154\157\143\153\163\040\151" "\156\040\146\151\154\145\040\163\171\163\164\145\155\012\040\045" "\143\011\124\157\164\141\154\040\146\151\154\145\040\156\157\144" "\145\163\040\151\156\040\146\151\154\145\040\163\171\163\164\145" "\155\012\040\045\144\011\106\162\145\145\040\146\151\154\145\040" "\156\157\144\145\163\040\151\156\040\146\151\154\145\040\163\171" "\163\164\145\155\012\040\045\146\011\106\162\145\145\040\142\154" "\157\143\153\163\040\151\156\040\146\151\154\145\040\163\171\163" "\164\145\155\012\040\045\151\011\106\151\154\145\040\123\171\163" "\164\145\155\040\111\104\040\151\156\040\150\145\170\012\040\045" "\154\011\115\141\170\151\155\165\155\040\154\145\156\147\164\150" "\040\157\146\040\146\151\154\145\156\141\155\145\163\012\040\045" "\156\011\106\151\154\145\040\156\141\155\145\012\040\045\163\011" "\102\154\157\143\153\040\163\151\172\145\040\050\146\157\162\040" "\146\141\163\164\145\162\040\164\162\141\156\163\146\145\162\051" "\012\040\045\123\011\106\165\156\144\141\155\145\156\164\141\154" "\040\142\154\157\143\153\040\163\151\172\145\040\050\146\157\162" "\040\142\154\157\143\153\040\143\157\165\156\164\163\051\012\040" "\045\164\011\124\171\160\145\040\151\156\040\150\145\170\012\040" "\045\124\011\124\171\160\145\040\151\156\040\150\165\155\141\156" "\040\162\145\141\144\141\142\154\145\040\146\157\162\155\000\133" "\055\141\146\157\135\040\133\055\156\040\114\105\116\135\040\133" "\106\111\114\105\135\056\056\056\012\012\104\151\163\160\154\141" "\171\040\160\162\151\156\164\141\142\154\145\040\163\164\162\151" "\156\147\163\040\151\156\040\141\040\142\151\156\141\162\171\040" "\146\151\154\145\012\012\011\055\141\011\123\143\141\156\040\167" "\150\157\154\145\040\146\151\154\145\040\050\144\145\146\141\165" "\154\164\051\012\011\055\146\011\120\162\145\143\145\144\145\040" "\163\164\162\151\156\147\163\040\167\151\164\150\040\146\151\154" "\145\156\141\155\145\163\012\011\055\156\040\114\105\116\011\101" "\164\040\154\145\141\163\164\040\114\105\116\040\143\150\141\162" "\141\143\164\145\162\163\040\146\157\162\155\040\141\040\163\164" "\162\151\156\147\040\050\144\145\146\141\165\154\164\040\064\051" "\012\011\055\157\011\120\162\145\143\145\144\145\040\163\164\162" "\151\156\147\163\040\167\151\164\150\040\144\145\143\151\155\141" "\154\040\157\146\146\163\145\164\163\000\133\055\141\174\147\135" "\040\133\055\106\040\104\105\126\111\103\105\135\040\133\123\105" "\124\124\111\116\107\135\056\056\056\012\012\127\151\164\150\157" "\165\164\040\141\162\147\165\155\145\156\164\163\054\040\160\162" "\151\156\164\163\040\142\141\165\144\040\162\141\164\145\054\040" "\154\151\156\145\040\144\151\163\143\151\160\154\151\156\145\054" "\012\141\156\144\040\144\145\166\151\141\164\151\157\156\163\040" "\146\162\157\155\040\163\164\164\171\040\163\141\156\145\012\012" "\011\055\106\040\104\105\126\111\103\105\011\117\160\145\156\040" "\144\145\166\151\143\145\040\151\156\163\164\145\141\144\040\157" "\146\040\163\164\144\151\156\012\011\055\141\011\011\120\162\151" "\156\164\040\141\154\154\040\143\165\162\162\145\156\164\040\163" "\145\164\164\151\156\147\163\040\151\156\040\150\165\155\141\156" "\055\162\145\141\144\141\142\154\145\040\146\157\162\155\012\011" "\055\147\011\011\120\162\151\156\164\040\151\156\040\163\164\164" "\171\055\162\145\141\144\141\142\154\145\040\146\157\162\155\012" "\011\133\123\105\124\124\111\116\107\135\011\123\145\145\040\155" "\141\156\160\141\147\145\000\133\117\120\124\111\117\116\123\135" "\040\133\055\135\040\133\125\123\105\122\135\012\012\122\165\156" "\040\163\150\145\154\154\040\165\156\144\145\162\040\125\123\105" "\122\040\050\142\171\040\144\145\146\141\165\154\164\054\040\162" "\157\157\164\051\012\012\011\055\054\055\154\011\103\154\145\141" "\162\040\145\156\166\151\162\157\156\155\145\156\164\054\040\162" "\165\156\040\163\150\145\154\154\040\141\163\040\154\157\147\151" "\156\040\163\150\145\154\154\012\011\055\160\054\055\155\011\104" "\157\040\156\157\164\040\163\145\164\040\156\145\167\040\044\110" "\117\115\105\054\040\044\123\110\105\114\114\054\040\044\125\123" "\105\122\054\040\044\114\117\107\116\101\115\105\012\011\055\143" "\040\103\115\104\011\103\157\155\155\141\156\144\040\164\157\040" "\160\141\163\163\040\164\157\040\047\163\150\040\055\143\047\012" "\011\055\163\040\123\110\011\123\150\145\154\154\040\164\157\040" "\165\163\145\040\151\156\163\164\145\141\144\040\157\146\040\165" "\163\145\162\047\163\040\144\145\146\141\165\154\164\000\133\055" "\164\040\116\135\040\133\124\124\131\135\012\012\123\151\156\147" "\154\145\040\165\163\145\162\040\154\157\147\151\156\012\012\011" "\055\164\040\116\011\124\151\155\145\157\165\164\000\133\055\162" "\163\135\040\133\106\111\114\105\135\056\056\056\012\012\103\150" "\145\143\153\163\165\155\040\141\156\144\040\143\157\165\156\164" "\040\164\150\145\040\142\154\157\143\153\163\040\151\156\040\141" "\040\146\151\154\145\012\012\011\055\162\011\125\163\145\040\102" "\123\104\040\163\165\155\040\141\154\147\157\162\151\164\150\155" "\040\050\061\113\040\142\154\157\143\153\163\051\012\011\055\163" "\011\125\163\145\040\123\171\163\164\145\155\040\126\040\163\165" "\155\040\141\154\147\157\162\151\164\150\155\040\050\065\061\062" "\142\171\164\145\040\142\154\157\143\153\163\051\000\133\055\166" "\135\040\133\055\167\040\123\105\103\135\040\103\115\104\040\123" "\105\122\126\111\103\105\137\104\111\122\056\056\056\012\012\103" "\157\156\164\162\157\154\040\163\145\162\166\151\143\145\163\040" "\155\157\156\151\164\157\162\145\144\040\142\171\040\162\165\156" "\163\166\040\163\165\160\145\162\166\151\163\157\162\056\012\103" "\157\155\155\141\156\144\163\040\050\157\156\154\171\040\146\151" "\162\163\164\040\143\150\141\162\141\143\164\145\162\040\151\163" "\040\145\156\157\165\147\150\051\072\012\012\163\164\141\164\165" "\163\072\040\161\165\145\162\171\040\163\145\162\166\151\143\145" "\040\163\164\141\164\165\163\012\165\160\072\040\151\146\040\163" "\145\162\166\151\143\145\040\151\163\156\047\164\040\162\165\156" "\156\151\156\147\054\040\163\164\141\162\164\040\151\164\056\040" "\111\146\040\163\145\162\166\151\143\145\040\163\164\157\160\163" "\054\040\162\145\163\164\141\162\164\040\151\164\012\157\156\143" "\145\072\040\154\151\153\145\040\047\165\160\047\054\040\142\165" "\164\040\151\146\040\163\145\162\166\151\143\145\040\163\164\157" "\160\163\054\040\144\157\156\047\164\040\162\145\163\164\141\162" "\164\040\151\164\012\144\157\167\156\072\040\163\145\156\144\040" "\124\105\122\115\040\141\156\144\040\103\117\116\124\040\163\151" "\147\156\141\154\163\056\040\111\146\040\056\057\162\165\156\040" "\145\170\151\164\163\054\040\163\164\141\162\164\040\056\057\146" "\151\156\151\163\150\012\011\151\146\040\151\164\040\145\170\151" "\163\164\163\056\040\101\146\164\145\162\040\151\164\040\163\164" "\157\160\163\054\040\144\157\156\047\164\040\162\145\163\164\141" "\162\164\040\163\145\162\166\151\143\145\012\145\170\151\164\072" "\040\163\145\156\144\040\124\105\122\115\040\141\156\144\040\103" "\117\116\124\040\163\151\147\156\141\154\163\040\164\157\040\163" "\145\162\166\151\143\145\040\141\156\144\040\154\157\147\040\163" "\145\162\166\151\143\145\056\040\111\146\040\164\150\145\171\040" "\145\170\151\164\054\012\011\162\165\156\163\166\040\145\170\151" "\164\163\040\164\157\157\012\160\141\165\163\145\054\040\143\157" "\156\164\054\040\150\165\160\054\040\141\154\141\162\155\054\040" "\151\156\164\145\162\162\165\160\164\054\040\161\165\151\164\054" "\040\061\054\040\062\054\040\164\145\162\155\054\040\153\151\154" "\154\072\040\163\145\156\144\012\123\124\117\120\054\040\103\117" "\116\124\054\040\110\125\120\054\040\101\114\122\115\054\040\111" "\116\124\054\040\121\125\111\124\054\040\125\123\122\061\054\040" "\125\123\122\062\054\040\124\105\122\115\054\040\113\111\114\114" "\040\163\151\147\156\141\154\040\164\157\040\163\145\162\166\151" "\143\145\000\133\055\164\164\166\135\040\133\055\162\040\103\135" "\040\133\055\122\040\103\110\101\122\123\135\040\133\055\154\040" "\115\101\124\103\110\114\105\116\135\040\133\055\142\040\102\125" "\106\114\105\116\135\040\104\111\122\056\056\056\012\012\103\157" "\156\164\151\156\165\157\165\163\154\171\040\162\145\141\144\040" "\154\157\147\040\144\141\164\141\040\146\162\157\155\040\163\164" "\144\151\156\040\141\156\144\040\167\162\151\164\145\040\164\157" "\040\162\157\164\141\164\145\144\040\154\157\147\040\146\151\154" "\145\163\040\151\156\040\104\111\122\163\012\012\104\111\122\057" "\143\157\156\146\151\147\040\146\151\154\145\040\155\157\144\151" "\146\151\145\163\040\142\145\150\141\166\151\157\162\072\012\163" "\123\111\132\105\040\055\040\167\150\145\156\040\164\157\040\162" "\157\164\141\164\145\040\154\157\147\163\012\156\116\125\115\040" "\055\040\156\165\155\142\145\162\040\157\146\040\146\151\154\145" "\163\040\164\157\040\162\145\164\141\151\156\012\041\120\122\117" "\107\040\055\040\160\162\157\143\145\163\163\040\162\157\164\141" "\164\145\144\040\154\157\147\040\167\151\164\150\040\120\122\117" "\107\012\053\054\055\120\101\124\124\105\122\116\040\055\040\050" "\144\145\051\163\145\154\145\143\164\040\154\151\156\145\040\146" "\157\162\040\154\157\147\147\151\156\147\012\105\054\145\120\101" "\124\124\105\122\116\040\055\040\050\144\145\051\163\145\154\145" "\143\164\040\154\151\156\145\040\146\157\162\040\163\164\144\145" "\162\162\000\133\055\141\135\040\133\104\105\126\111\103\105\135" "\012\012\123\164\157\160\040\163\167\141\160\160\151\156\147\040" "\157\156\040\104\105\126\111\103\105\012\012\011\055\141\011\123" "\164\157\160\040\163\167\141\160\160\151\156\147\040\157\156\040" "\141\154\154\040\163\167\141\160\040\144\145\166\151\143\145\163" "\000\133\055\141\135\040\133\055\160\040\120\122\111\135\040\133" "\104\105\126\111\103\105\135\012\012\123\164\141\162\164\040\163" "\167\141\160\160\151\156\147\040\157\156\040\104\105\126\111\103" "\105\012\012\011\055\141\011\123\164\141\162\164\040\163\167\141" "\160\160\151\156\147\040\157\156\040\141\154\154\040\163\167\141" "\160\040\144\145\166\151\143\145\163\012\011\055\160\040\120\122" "\111\011\123\145\164\040\163\167\141\160\040\144\145\166\151\143" "\145\040\160\162\151\157\162\151\164\171\000\133\055\143\040\057" "\144\145\166\057\143\157\156\163\157\154\145\135\040\116\105\127" "\137\122\117\117\124\040\116\105\127\137\111\116\111\124\040\133" "\101\122\107\123\135\012\012\106\162\145\145\040\151\156\151\164" "\162\141\155\146\163\040\141\156\144\040\163\167\151\164\143\150" "\040\164\157\040\141\156\157\164\150\145\162\040\162\157\157\164" "\040\146\163\072\012\143\150\162\157\157\164\040\164\157\040\116" "\105\127\137\122\117\117\124\054\040\144\145\154\145\164\145\040" "\141\154\154\040\151\156\040\057\054\040\155\157\166\145\040\116" "\105\127\137\122\117\117\124\040\164\157\040\057\054\012\145\170" "\145\143\165\164\145\040\116\105\127\137\111\116\111\124\056\040" "\120\111\104\040\155\165\163\164\040\142\145\040\061\056\040\116" "\105\127\137\122\117\117\124\040\155\165\163\164\040\142\145\040" "\141\040\155\157\165\156\164\160\157\151\156\164\056\012\012\011" "\055\143\040\104\105\126\011\122\145\157\160\145\156\040\163\164" "\144\151\157\040\164\157\040\104\105\126\040\141\146\164\145\162" "\040\163\167\151\164\143\150\000\012\012\127\162\151\164\145\040" "\141\154\154\040\142\165\146\146\145\162\145\144\040\142\154\157" "\143\153\163\040\164\157\040\144\151\163\153\000\133\117\120\124" "\111\117\116\123\135\040\133\113\105\131\133\075\126\101\114\125" "\105\135\135\056\056\056\012\012\123\150\157\167\057\163\145\164" "\040\153\145\162\156\145\154\040\160\141\162\141\155\145\164\145" "\162\163\012\012\011\055\145\011\104\157\156\047\164\040\167\141" "\162\156\040\141\142\157\165\164\040\165\156\153\156\157\167\156" "\040\153\145\171\163\012\011\055\156\011\104\157\156\047\164\040" "\163\150\157\167\040\153\145\171\040\156\141\155\145\163\012\011" "\055\141\011\123\150\157\167\040\141\154\154\040\166\141\154\165" "\145\163\012\011\055\167\011\123\145\164\040\166\141\154\165\145" "\163\012\011\055\160\040\106\111\114\105\011\123\145\164\040\166" "\141\154\165\145\163\040\146\162\157\155\040\106\111\114\105\040" "\050\144\145\146\141\165\154\164\040\057\145\164\143\057\163\171" "\163\143\164\154\056\143\157\156\146\051\012\011\055\161\040\040" "\040\040\040\040\123\145\164\040\166\141\154\165\145\163\040\163" "\151\154\145\156\164\154\171\000\133\117\120\124\111\117\116\123" "\135\012\012\123\171\163\164\145\155\040\154\157\147\147\151\156" "\147\040\165\164\151\154\151\164\171\012\012\011\055\156\011\011" "\122\165\156\040\151\156\040\146\157\162\145\147\162\157\165\156" "\144\012\011\055\117\040\106\111\114\105\011\011\114\157\147\040" "\164\157\040\106\111\114\105\040\050\144\145\146\141\165\154\164" "\072\057\166\141\162\057\154\157\147\057\155\145\163\163\141\147" "\145\163\051\012\011\055\154\040\116\011\011\114\157\147\040\157" "\156\154\171\040\155\145\163\163\141\147\145\163\040\155\157\162" "\145\040\165\162\147\145\156\164\040\164\150\141\156\040\160\162" "\151\157\040\116\040\050\061\055\070\051\012\011\055\123\011\011" "\123\155\141\154\154\145\162\040\157\165\164\160\165\164\012\011" "\055\163\040\123\111\132\105\011\011\115\141\170\040\163\151\172" "\145\040\050\113\102\051\040\142\145\146\157\162\145\040\162\157" "\164\141\164\151\157\156\040\050\144\145\146\141\165\154\164\072" "\062\060\060\113\102\054\040\060\075\157\146\146\051\012\011\055" "\142\040\116\011\011\116\040\162\157\164\141\164\145\144\040\154" "\157\147\163\040\164\157\040\153\145\145\160\040\050\144\145\146" "\141\165\154\164\072\061\054\040\155\141\170\075\071\071\054\040" "\060\075\160\165\162\147\145\051\012\011\055\122\040\110\117\123" "\124\133\072\120\117\122\124\135\011\114\157\147\040\164\157\040" "\110\117\123\124\072\120\117\122\124\040\050\144\145\146\141\165" "\154\164\040\120\117\122\124\072\065\061\064\051\012\011\055\114" "\011\011\114\157\147\040\154\157\143\141\154\154\171\040\141\156" "\144\040\166\151\141\040\156\145\164\167\157\162\153\040\050\144" "\145\146\141\165\154\164\040\151\163\040\156\145\164\167\157\162" "\153\040\157\156\154\171\040\151\146\040\055\122\051\012\011\055" "\104\011\011\104\162\157\160\040\144\165\160\154\151\143\141\164" "\145\163\012\011\055\103\133\163\151\172\145\137\153\142\135\011" "\114\157\147\040\164\157\040\163\150\141\162\145\144\040\155\145" "\155\040\142\165\146\146\145\162\040\050\165\163\145\040\154\157" "\147\162\145\141\144\040\164\157\040\162\145\141\144\040\151\164" "\051\012\011\055\146\040\106\111\114\105\011\011\125\163\145\040" "\106\111\114\105\040\141\163\040\143\157\156\146\151\147\040\050" "\144\145\146\141\165\154\164\072\057\145\164\143\057\163\171\163" "\154\157\147\056\143\157\156\146\051\012\011\055\113\011\011\114" "\157\147\040\164\157\040\153\145\162\156\145\154\040\160\162\151" "\156\164\153\040\142\165\146\146\145\162\040\050\165\163\145\040" "\144\155\145\163\147\040\164\157\040\162\145\141\144\040\151\164" "\051\000\133\106\111\114\105\135\056\056\056\012\012\103\157\156" "\143\141\164\145\156\141\164\145\040\106\111\114\105\163\040\141" "\156\144\040\160\162\151\156\164\040\164\150\145\155\040\151\156" "\040\162\145\166\145\162\163\145\000\133\117\120\124\111\117\116" "\123\135\040\133\106\111\114\105\135\056\056\056\012\012\120\162" "\151\156\164\040\154\141\163\164\040\061\060\040\154\151\156\145" "\163\040\157\146\040\145\141\143\150\040\106\111\114\105\040\050" "\157\162\040\163\164\144\151\156\051\040\164\157\040\163\164\144" "\157\165\164\056\012\127\151\164\150\040\155\157\162\145\040\164" "\150\141\156\040\157\156\145\040\106\111\114\105\054\040\160\162" "\145\143\145\144\145\040\145\141\143\150\040\167\151\164\150\040" "\141\040\146\151\154\145\156\141\155\145\040\150\145\141\144\145" "\162\056\012\012\011\055\146\011\011\120\162\151\156\164\040\144" "\141\164\141\040\141\163\040\146\151\154\145\040\147\162\157\167" "\163\012\011\055\143\040\133\053\135\116\133\153\142\155\135\011" "\120\162\151\156\164\040\154\141\163\164\040\116\040\142\171\164" "\145\163\012\011\055\156\040\116\133\153\142\155\135\011\120\162" "\151\156\164\040\154\141\163\164\040\116\040\154\151\156\145\163" "\012\011\055\156\040\053\116\133\153\142\155\135\011\123\164\141" "\162\164\040\157\156\040\116\164\150\040\154\151\156\145\040\141" "\156\144\040\160\162\151\156\164\040\164\150\145\040\162\145\163" "\164\012\011\055\161\011\011\116\145\166\145\162\040\160\162\151" "\156\164\040\150\145\141\144\145\162\163\012\011\055\163\040\123" "\105\103\117\116\104\123\011\127\141\151\164\040\123\105\103\117" "\116\104\123\040\142\145\164\167\145\145\156\040\162\145\141\144" "\163\040\167\151\164\150\040\055\146\012\011\055\166\011\011\101" "\154\167\141\171\163\040\160\162\151\156\164\040\150\145\141\144" "\145\162\163\012\011\055\106\011\011\123\141\155\145\040\141\163" "\040\055\146\054\040\142\165\164\040\153\145\145\160\040\162\145" "\164\162\171\151\156\147\012\012\116\040\155\141\171\040\142\145" "\040\163\165\146\146\151\170\145\144\040\142\171\040\153\040\050" "\170\061\060\062\064\051\054\040\142\040\050\170\065\061\062\051" "\054\040\157\162\040\155\040\050\170\061\060\062\064\136\062\051" "\056\000\055\133\143\170\164\172\112\152\141\150\155\166\117\135" "\040\133\055\130\040\106\111\114\105\135\040\133\055\124\040\106" "\111\114\105\135\040\133\055\146\040\124\101\122\106\111\114\105" "\135\040\133\055\103\040\104\111\122\135\040\133\106\111\114\105" "\135\056\056\056\012\012\103\162\145\141\164\145\054\040\145\170" "\164\162\141\143\164\054\040\157\162\040\154\151\163\164\040\146" "\151\154\145\163\040\146\162\157\155\040\141\040\164\141\162\040" "\146\151\154\145\012\012\117\160\145\162\141\164\151\157\156\072" "\012\011\143\011\103\162\145\141\164\145\012\011\170\011\105\170" "\164\162\141\143\164\012\011\164\011\114\151\163\164\012\011\146" "\011\116\141\155\145\040\157\146\040\124\101\122\106\111\114\105" "\040\050\047\055\047\040\146\157\162\040\163\164\144\151\156\057" "\157\165\164\051\012\011\103\011\103\150\141\156\147\145\040\164" "\157\040\104\111\122\040\142\145\146\157\162\145\040\157\160\145" "\162\141\164\151\157\156\012\011\166\011\126\145\162\142\157\163" "\145\012\011\172\011\050\104\145\051\143\157\155\160\162\145\163" "\163\040\165\163\151\156\147\040\147\172\151\160\012\011\112\011" "\050\104\145\051\143\157\155\160\162\145\163\163\040\165\163\151" "\156\147\040\170\172\012\011\152\011\050\104\145\051\143\157\155" "\160\162\145\163\163\040\165\163\151\156\147\040\142\172\151\160" "\062\012\011\141\011\050\104\145\051\143\157\155\160\162\145\163" "\163\040\165\163\151\156\147\040\154\172\155\141\012\011\117\011" "\105\170\164\162\141\143\164\040\164\157\040\163\164\144\157\165" "\164\012\011\150\011\106\157\154\154\157\167\040\163\171\155\154" "\151\156\153\163\012\011\155\011\104\157\156\047\164\040\162\145" "\163\164\157\162\145\040\155\164\151\155\145\012\011\145\170\143" "\154\165\144\145\011\106\151\154\145\040\164\157\040\145\170\143" "\154\165\144\145\012\011\130\011\106\151\154\145\040\167\151\164" "\150\040\156\141\155\145\163\040\164\157\040\145\170\143\154\165" "\144\145\012\011\124\011\106\151\154\145\040\167\151\164\150\040" "\156\141\155\145\163\040\164\157\040\151\156\143\154\165\144\145" "\000\133\055\150\105\166\135\040\133\055\143\040\116\135\040\133" "\055\103\040\116\133\072\115\123\107\135\135\040\133\055\142\040" "\116\135\040\133\055\165\040\125\123\105\122\135\040\133\055\154" "\040\116\101\115\105\135\040\111\120\040\120\117\122\124\040\120" "\122\117\107\012\012\103\162\145\141\164\145\040\124\103\120\040" "\163\157\143\153\145\164\054\040\142\151\156\144\040\164\157\040" "\111\120\072\120\117\122\124\040\141\156\144\040\154\151\163\164" "\145\156\012\146\157\162\040\151\156\143\157\155\151\156\147\040" "\143\157\156\156\145\143\164\151\157\156\056\040\122\165\156\040" "\120\122\117\107\040\146\157\162\040\145\141\143\150\040\143\157" "\156\156\145\143\164\151\157\156\056\012\012\011\111\120\011\011" "\111\120\040\164\157\040\154\151\163\164\145\156\040\157\156\054" "\040\060\040\075\040\141\154\154\012\011\120\117\122\124\011\011" "\120\157\162\164\040\164\157\040\154\151\163\164\145\156\040\157" "\156\012\011\120\122\117\107\040\101\122\107\123\011\120\162\157" "\147\162\141\155\040\164\157\040\162\165\156\012\011\055\154\040" "\116\101\115\105\011\011\114\157\143\141\154\040\150\157\163\164" "\156\141\155\145\040\050\145\154\163\145\040\154\157\157\153\163" "\040\165\160\040\154\157\143\141\154\040\150\157\163\164\156\141" "\155\145\040\151\156\040\104\116\123\051\012\011\055\165\040\125" "\123\105\122\133\072\107\122\120\135\011\103\150\141\156\147\145" "\040\164\157\040\165\163\145\162\057\147\162\157\165\160\040\141" "\146\164\145\162\040\142\151\156\144\012\011\055\143\040\116\011" "\011\110\141\156\144\154\145\040\165\160\040\164\157\040\116\040" "\143\157\156\156\145\143\164\151\157\156\163\040\163\151\155\165" "\154\164\141\156\145\157\165\163\154\171\012\011\055\142\040\116" "\011\011\101\154\154\157\167\040\141\040\142\141\143\153\154\157" "\147\040\157\146\040\141\160\160\162\157\170\151\155\141\164\145" "\154\171\040\116\040\124\103\120\040\123\131\116\163\012\011\055" "\103\040\116\133\072\115\123\107\135\011\101\154\154\157\167\040" "\157\156\154\171\040\165\160\040\164\157\040\116\040\143\157\156" "\156\145\143\164\151\157\156\163\040\146\162\157\155\040\164\150" "\145\040\163\141\155\145\040\111\120\012\011\011\011\116\145\167" "\040\143\157\156\156\145\143\164\151\157\156\163\040\146\162\157" "\155\040\164\150\151\163\040\111\120\040\141\144\144\162\145\163" "\163\040\141\162\145\040\143\154\157\163\145\144\012\011\011\011" "\151\155\155\145\144\151\141\164\145\154\171\056\040\115\123\107" "\040\151\163\040\167\162\151\164\164\145\156\040\164\157\040\164" "\150\145\040\160\145\145\162\040\142\145\146\157\162\145\040\143" "\154\157\163\145\012\011\055\150\011\011\114\157\157\153\040\165" "\160\040\160\145\145\162\047\163\040\150\157\163\164\156\141\155" "\145\012\011\055\105\011\011\104\157\156\047\164\040\163\145\164" "\040\165\160\040\145\156\166\151\162\157\156\155\145\156\164\040" "\166\141\162\151\141\142\154\145\163\012\011\055\166\011\011\126" "\145\162\142\157\163\145\000\133\055\141\151\135\040\133\106\111" "\114\105\135\056\056\056\012\012\103\157\160\171\040\163\164\144" "\151\156\040\164\157\040\145\141\143\150\040\106\111\114\105\054" "\040\141\156\144\040\141\154\163\157\040\164\157\040\163\164\144" "\157\165\164\012\012\011\055\141\011\101\160\160\145\156\144\040" "\164\157\040\164\150\145\040\147\151\166\145\156\040\106\111\114" "\105\163\054\040\144\157\156\047\164\040\157\166\145\162\167\162" "\151\164\145\012\011\055\151\011\111\147\156\157\162\145\040\151" "\156\164\145\162\162\165\160\164\040\163\151\147\156\141\154\163" "\040\050\123\111\107\111\116\124\051\000\133\055\141\135\040\133" "\055\154\040\125\123\105\122\135\040\110\117\123\124\040\133\120" "\117\122\124\135\012\012\103\157\156\156\145\143\164\040\164\157" "\040\164\145\154\156\145\164\040\163\145\162\166\145\162\012\012" "\011\055\141\011\101\165\164\157\155\141\164\151\143\040\154\157" "\147\151\156\040\167\151\164\150\040\044\125\123\105\122\040\166" "\141\162\151\141\142\154\145\012\011\055\154\040\125\123\105\122" "\011\101\165\164\157\155\141\164\151\143\040\154\157\147\151\156" "\040\141\163\040\125\123\105\122\000\133\117\120\124\111\117\116" "\123\135\012\012\110\141\156\144\154\145\040\151\156\143\157\155" "\151\156\147\040\164\145\154\156\145\164\040\143\157\156\156\145" "\143\164\151\157\156\163\012\012\011\055\154\040\114\117\107\111" "\116\011\105\170\145\143\040\114\117\107\111\116\040\157\156\040" "\143\157\156\156\145\143\164\012\011\055\146\040\111\123\123\125" "\105\137\106\111\114\105\011\104\151\163\160\154\141\171\040\111" "\123\123\125\105\137\106\111\114\105\040\151\156\163\164\145\141" "\144\040\157\146\040\057\145\164\143\057\151\163\163\165\145\012" "\011\055\113\011\011\103\154\157\163\145\040\143\157\156\156\145" "\143\164\151\157\156\040\141\163\040\163\157\157\156\040\141\163" "\040\154\157\147\151\156\040\145\170\151\164\163\012\011\011\011" "\050\156\157\162\155\141\154\154\171\040\167\141\151\164\040\165" "\156\164\151\154\040\141\154\154\040\160\162\157\147\162\141\155" "\163\040\143\154\157\163\145\040\163\154\141\166\145\040\160\164" "\171\051\012\011\055\160\040\120\117\122\124\011\011\120\157\162" "\164\040\164\157\040\154\151\163\164\145\156\040\157\156\012\011" "\055\142\040\101\104\104\122\133\072\120\117\122\124\135\011\101" "\144\144\162\145\163\163\040\164\157\040\142\151\156\144\040\164" "\157\012\011\055\106\011\011\122\165\156\040\151\156\040\146\157" "\162\145\147\162\157\165\156\144\012\011\055\151\011\011\111\156" "\145\164\144\040\155\157\144\145\012\011\055\167\040\123\105\103" "\011\011\111\156\145\164\144\040\047\167\141\151\164\047\040\155" "\157\144\145\054\040\154\151\156\147\145\162\040\164\151\155\145" "\040\123\105\103\012\011\055\123\011\011\114\157\147\040\164\157" "\040\163\171\163\154\157\147\040\050\151\155\160\154\151\145\144" "\040\142\171\040\055\151\040\157\162\040\167\151\164\150\157\165" "\164\040\055\106\040\141\156\144\040\055\167\051\000\105\130\120" "\122\105\123\123\111\117\116\040\135\012\012\103\150\145\143\153" "\040\146\151\154\145\040\164\171\160\145\163\054\040\143\157\155" "\160\141\162\145\040\166\141\154\165\145\163\040\145\164\143\056" "\040\122\145\164\165\162\156\040\141\040\060\057\061\040\145\170" "\151\164\040\143\157\144\145\012\144\145\160\145\156\144\151\156" "\147\040\157\156\040\154\157\147\151\143\141\154\040\166\141\154" "\165\145\040\157\146\040\105\130\120\122\105\123\123\111\117\116" "\000\133\117\120\124\111\117\116\123\135\040\110\117\123\124\040" "\133\120\117\122\124\135\012\012\124\162\141\156\163\146\145\162" "\040\141\040\146\151\154\145\040\146\162\157\155\057\164\157\040" "\164\146\164\160\040\163\145\162\166\145\162\012\012\011\055\154" "\040\106\111\114\105\011\114\157\143\141\154\040\106\111\114\105" "\012\011\055\162\040\106\111\114\105\011\122\145\155\157\164\145" "\040\106\111\114\105\012\011\055\147\011\107\145\164\040\146\151" "\154\145\012\011\055\160\011\120\165\164\040\146\151\154\145\012" "\011\055\142\040\123\111\132\105\011\124\162\141\156\163\146\145" "\162\040\142\154\157\143\153\163\040\157\146\040\123\111\132\105" "\040\157\143\164\145\164\163\000\133\055\143\162\135\040\133\055" "\165\040\125\123\105\122\135\040\133\104\111\122\135\012\012\124" "\162\141\156\163\146\145\162\040\141\040\146\151\154\145\040\157" "\156\040\164\146\164\160\040\143\154\151\145\156\164\047\163\040" "\162\145\161\165\145\163\164\012\012\164\146\164\160\144\040\163" "\150\157\165\154\144\040\142\145\040\165\163\145\144\040\141\163" "\040\141\156\040\151\156\145\164\144\040\163\145\162\166\151\143" "\145\056\012\164\146\164\160\144\047\163\040\154\151\156\145\040" "\146\157\162\040\151\156\145\164\144\056\143\157\156\146\072\012" "\011\066\071\040\144\147\162\141\155\040\165\144\160\040\156\157" "\167\141\151\164\040\162\157\157\164\040\164\146\164\160\144\040" "\164\146\164\160\144\040\055\154\040\057\146\151\154\145\163\057" "\164\157\057\163\145\162\166\145\012\111\164\040\141\154\163\157" "\040\143\141\156\040\142\145\040\162\141\156\040\146\162\157\155" "\040\165\144\160\163\166\144\072\012\011\165\144\160\163\166\144" "\040\055\166\105\040\060\056\060\056\060\056\060\040\066\071\040" "\164\146\164\160\144\040\057\146\151\154\145\163\057\164\157\057" "\163\145\162\166\145\012\012\011\055\162\011\120\162\157\150\151" "\142\151\164\040\165\160\154\157\141\144\012\011\055\143\011\101" "\154\154\157\167\040\146\151\154\145\040\143\162\145\141\164\151" "\157\156\040\166\151\141\040\165\160\154\157\141\144\012\011\055" "\165\011\101\143\143\145\163\163\040\146\151\154\145\163\040\141" "\163\040\125\123\105\122\012\011\055\154\011\114\157\147\040\164" "\157\040\163\171\163\154\157\147\040\050\151\156\145\164\144\040" "\155\157\144\145\040\162\145\161\165\151\162\145\163\040\164\150" "\151\163\051\000\133\055\166\135\040\120\122\117\107\040\101\122" "\107\123\012\012\122\165\156\040\120\122\117\107\054\040\144\151" "\163\160\154\141\171\040\162\145\163\157\165\162\143\145\040\165" "\163\141\147\145\040\167\150\145\156\040\151\164\040\145\170\151" "\164\163\012\012\011\055\166\011\126\145\162\142\157\163\145\000" "\133\055\164\040\123\105\103\123\135\040\133\055\163\040\123\111" "\107\135\040\120\122\117\107\040\101\122\107\123\012\012\122\165" "\156\163\040\120\122\117\107\056\040\123\145\156\144\163\040\123" "\111\107\040\164\157\040\151\164\040\151\146\040\151\164\040\151" "\163\040\156\157\164\040\147\157\156\145\040\151\156\040\123\105" "\103\123\040\163\145\143\157\156\144\163\056\012\104\145\146\141" "\165\154\164\163\072\040\123\105\103\123\072\040\061\060\054\040" "\123\111\107\072\040\124\105\122\115\056\000\133\055\142\135\040" "\133\055\156\103\117\125\116\124\135\040\133\055\144\123\105\103" "\117\116\104\123\135\040\133\055\155\135\012\012\120\162\157\166" "\151\144\145\040\141\040\166\151\145\167\040\157\146\040\160\162" "\157\143\145\163\163\040\141\143\164\151\166\151\164\171\040\151" "\156\040\162\145\141\154\040\164\151\155\145\056\012\122\145\141" "\144\040\164\150\145\040\163\164\141\164\165\163\040\157\146\040" "\141\154\154\040\160\162\157\143\145\163\163\145\163\040\146\162" "\157\155\040\057\160\162\157\143\040\145\141\143\150\040\123\105" "\103\117\116\104\123\012\141\156\144\040\144\151\163\160\154\141" "\171\040\141\040\163\143\162\145\145\156\146\165\154\040\157\146" "\040\164\150\145\155\056\012\113\145\171\163\072\012\011\116\057" "\115\057\120\057\124\072\040\163\150\157\167\040\103\120\125\040" "\165\163\141\147\145\054\040\163\157\162\164\040\142\171\040\160" "\151\144\057\155\145\155\057\143\160\165\057\164\151\155\145\012" "\011\123\072\040\163\150\157\167\040\155\145\155\157\162\171\012" "\011\122\072\040\162\145\166\145\162\163\145\040\163\157\162\164" "\012\011\110\072\040\164\157\147\147\154\145\040\164\150\162\145" "\141\144\163\054\040\061\072\040\164\157\147\147\154\145\040\123" "\115\120\012\011\121\054\136\103\072\040\145\170\151\164\012\012" "\117\160\164\151\157\156\163\072\012\011\055\142\011\102\141\164" "\143\150\040\155\157\144\145\012\011\055\156\040\116\011\105\170" "\151\164\040\141\146\164\145\162\040\116\040\151\164\145\162\141" "\164\151\157\156\163\012\011\055\144\040\116\011\104\145\154\141" "\171\040\142\145\164\167\145\145\156\040\165\160\144\141\164\145" "\163\012\011\055\155\011\123\141\155\145\040\141\163\040\047\163" "\047\040\153\145\171\000\133\055\143\135\040\133\055\144\040\104" "\101\124\105\135\040\133\055\164\040\104\101\124\105\135\040\133" "\055\162\040\106\111\114\105\135\040\106\111\114\105\056\056\056" "\012\012\125\160\144\141\164\145\040\164\150\145\040\154\141\163" "\164\055\155\157\144\151\146\151\145\144\040\144\141\164\145\040" "\157\156\040\164\150\145\040\147\151\166\145\156\040\106\111\114" "\105\133\163\135\012\012\011\055\143\011\104\157\156\047\164\040" "\143\162\145\141\164\145\040\146\151\154\145\163\012\011\055\150" "\011\104\157\156\047\164\040\146\157\154\154\157\167\040\154\151" "\156\153\163\012\011\055\144\040\104\124\011\104\141\164\145\057" "\164\151\155\145\040\164\157\040\165\163\145\012\011\055\164\040" "\104\124\011\104\141\164\145\057\164\151\155\145\040\164\157\040" "\165\163\145\012\011\055\162\040\106\111\114\105\011\125\163\145" "\040\106\111\114\105\047\163\040\144\141\164\145\057\164\151\155" "\145\000\133\055\143\144\163\135\040\123\124\122\111\116\107\061" "\040\133\123\124\122\111\116\107\062\135\012\012\124\162\141\156" "\163\154\141\164\145\054\040\163\161\165\145\145\172\145\054\040" "\157\162\040\144\145\154\145\164\145\040\143\150\141\162\141\143" "\164\145\162\163\040\146\162\157\155\040\163\164\144\151\156\054" "\040\167\162\151\164\151\156\147\040\164\157\040\163\164\144\157" "\165\164\012\012\011\055\143\011\124\141\153\145\040\143\157\155" "\160\154\145\155\145\156\164\040\157\146\040\123\124\122\111\116" "\107\061\012\011\055\144\011\104\145\154\145\164\145\040\151\156" "\160\165\164\040\143\150\141\162\141\143\164\145\162\163\040\143" "\157\144\145\144\040\123\124\122\111\116\107\061\012\011\055\163" "\011\123\161\165\145\145\172\145\040\155\165\154\164\151\160\154" "\145\040\157\165\164\160\165\164\040\143\150\141\162\141\143\164" "\145\162\163\040\157\146\040\123\124\122\111\116\107\062\040\151" "\156\164\157\040\157\156\145\040\143\150\141\162\141\143\164\145" "\162\000\133\055\064\066\106\111\154\144\156\162\166\135\040\133" "\055\146\040\061\123\124\137\124\124\114\135\040\133\055\155\040" "\115\101\130\124\124\114\135\040\133\055\160\040\120\117\122\124" "\135\040\133\055\161\040\120\122\117\102\105\123\135\012\011\133" "\055\163\040\123\122\103\137\111\120\135\040\133\055\164\040\124" "\117\123\135\040\133\055\167\040\127\101\111\124\137\123\105\103" "\135\040\133\055\147\040\107\101\124\105\127\101\131\135\040\133" "\055\151\040\111\106\101\103\105\135\012\011\133\055\172\040\120" "\101\125\123\105\137\115\123\105\103\135\040\110\117\123\124\040" "\133\102\131\124\105\123\135\012\012\124\162\141\143\145\040\164" "\150\145\040\162\157\165\164\145\040\164\157\040\110\117\123\124" "\012\012\011\055\064\054\055\066\011\106\157\162\143\145\040\111" "\120\040\157\162\040\111\120\166\066\040\156\141\155\145\040\162" "\145\163\157\154\165\164\151\157\156\012\011\055\106\011\123\145" "\164\040\164\150\145\040\144\157\156\047\164\040\146\162\141\147" "\155\145\156\164\040\142\151\164\012\011\055\111\011\125\163\145" "\040\111\103\115\120\040\105\103\110\117\040\151\156\163\164\145" "\141\144\040\157\146\040\125\104\120\040\144\141\164\141\147\162" "\141\155\163\012\011\055\154\011\104\151\163\160\154\141\171\040" "\164\150\145\040\124\124\114\040\166\141\154\165\145\040\157\146" "\040\164\150\145\040\162\145\164\165\162\156\145\144\040\160\141" "\143\153\145\164\012\011\055\144\011\123\145\164\040\123\117\137" "\104\105\102\125\107\040\157\160\164\151\157\156\163\040\164\157" "\040\163\157\143\153\145\164\012\011\055\156\011\120\162\151\156" "\164\040\156\165\155\145\162\151\143\040\141\144\144\162\145\163" "\163\145\163\012\011\055\162\011\102\171\160\141\163\163\040\162" "\157\165\164\151\156\147\040\164\141\142\154\145\163\054\040\163" "\145\156\144\040\144\151\162\145\143\164\154\171\040\164\157\040" "\110\117\123\124\012\011\055\166\011\126\145\162\142\157\163\145" "\012\011\055\155\011\115\141\170\040\164\151\155\145\055\164\157" "\055\154\151\166\145\040\050\155\141\170\040\156\165\155\142\145" "\162\040\157\146\040\150\157\160\163\051\012\011\055\160\011\102" "\141\163\145\040\125\104\120\040\160\157\162\164\040\156\165\155" "\142\145\162\040\165\163\145\144\040\151\156\040\160\162\157\142" "\145\163\012\011\011\050\144\145\146\141\165\154\164\040\063\063" "\064\063\064\051\012\011\055\161\011\116\165\155\142\145\162\040" "\157\146\040\160\162\157\142\145\163\040\160\145\162\040\124\124" "\114\040\050\144\145\146\141\165\154\164\040\063\051\012\011\055" "\163\011\111\120\040\141\144\144\162\145\163\163\040\164\157\040" "\165\163\145\040\141\163\040\164\150\145\040\163\157\165\162\143" "\145\040\141\144\144\162\145\163\163\012\011\055\164\011\124\171" "\160\145\055\157\146\055\163\145\162\166\151\143\145\040\151\156" "\040\160\162\157\142\145\040\160\141\143\153\145\164\163\040\050" "\144\145\146\141\165\154\164\040\060\051\012\011\055\167\011\124" "\151\155\145\040\151\156\040\163\145\143\157\156\144\163\040\164" "\157\040\167\141\151\164\040\146\157\162\040\141\040\162\145\163" "\160\157\156\163\145\040\050\144\145\146\141\165\154\164\040\063" "\051\012\011\055\147\011\114\157\157\163\145\040\163\157\165\162" "\143\145\040\162\157\165\164\145\040\147\141\164\145\167\141\171" "\040\050\070\040\155\141\170\051\000\133\055\144\156\162\166\135" "\040\133\055\155\040\115\101\130\124\124\114\135\040\133\055\160" "\040\120\117\122\124\135\040\133\055\161\040\120\122\117\102\105" "\123\135\012\011\133\055\163\040\123\122\103\137\111\120\135\040" "\133\055\164\040\124\117\123\135\040\133\055\167\040\127\101\111" "\124\137\123\105\103\135\040\133\055\151\040\111\106\101\103\105" "\135\012\011\110\117\123\124\040\133\102\131\124\105\123\135\012" "\012\124\162\141\143\145\040\164\150\145\040\162\157\165\164\145" "\040\164\157\040\110\117\123\124\012\012\011\055\144\011\123\145" "\164\040\123\117\137\104\105\102\125\107\040\157\160\164\151\157" "\156\163\040\164\157\040\163\157\143\153\145\164\012\011\055\156" "\011\120\162\151\156\164\040\156\165\155\145\162\151\143\040\141" "\144\144\162\145\163\163\145\163\012\011\055\162\011\102\171\160" "\141\163\163\040\162\157\165\164\151\156\147\040\164\141\142\154" "\145\163\054\040\163\145\156\144\040\144\151\162\145\143\164\154" "\171\040\164\157\040\110\117\123\124\012\011\055\166\011\126\145" "\162\142\157\163\145\012\011\055\155\011\115\141\170\040\164\151" "\155\145\055\164\157\055\154\151\166\145\040\050\155\141\170\040" "\156\165\155\142\145\162\040\157\146\040\150\157\160\163\051\012" "\011\055\160\011\102\141\163\145\040\125\104\120\040\160\157\162" "\164\040\156\165\155\142\145\162\040\165\163\145\144\040\151\156" "\040\160\162\157\142\145\163\012\011\011\050\144\145\146\141\165" "\154\164\040\151\163\040\063\063\064\063\064\051\012\011\055\161" "\011\116\165\155\142\145\162\040\157\146\040\160\162\157\142\145" "\163\040\160\145\162\040\124\124\114\040\050\144\145\146\141\165" "\154\164\040\063\051\012\011\055\163\011\111\120\040\141\144\144" "\162\145\163\163\040\164\157\040\165\163\145\040\141\163\040\164" "\150\145\040\163\157\165\162\143\145\040\141\144\144\162\145\163" "\163\012\011\055\164\011\124\171\160\145\055\157\146\055\163\145" "\162\166\151\143\145\040\151\156\040\160\162\157\142\145\040\160" "\141\143\153\145\164\163\040\050\144\145\146\141\165\154\164\040" "\060\051\012\011\055\167\011\124\151\155\145\040\151\156\040\163" "\145\143\157\156\144\163\040\164\157\040\167\141\151\164\040\146" "\157\162\040\141\040\162\145\163\160\157\156\163\145\040\050\144" "\145\146\141\165\154\164\040\063\051\000\012\012\122\145\164\165" "\162\156\040\141\156\040\145\170\151\164\040\143\157\144\145\040" "\157\146\040\124\122\125\105\040\050\060\051\000\012\012\120\162" "\151\156\164\040\146\151\154\145\040\156\141\155\145\040\157\146" "\040\163\164\144\151\156\047\163\040\164\145\162\155\151\156\141" "\154\012\012\011\055\163\011\120\162\151\156\164\040\156\157\164" "\150\151\156\147\054\040\157\156\154\171\040\162\145\164\165\162" "\156\040\145\170\151\164\040\163\164\141\164\165\163\000\133\167" "\135\040\133\150\135\012\012\120\162\151\156\164\040\144\151\155" "\145\156\163\151\157\156\050\163\051\040\157\146\040\163\164\144" "\151\156\047\163\040\164\145\162\155\151\156\141\154\054\040\157" "\156\040\145\162\162\157\162\040\162\145\164\165\162\156\040\070" "\060\170\062\065\000\133\055\146\040\144\145\166\151\143\145\135" "\040\050\133\055\164\040\156\141\155\145\135\040\174\040\055\144" "\040\156\141\155\145\051\040\133\055\165\040\157\167\156\145\162" "\135\040\133\055\147\040\147\162\157\165\160\135\040\133\055\142" "\135\012\012\103\162\145\141\164\145\040\157\162\040\144\145\154" "\145\164\145\040\164\165\156\040\151\156\164\145\162\146\141\143" "\145\163\012\012\011\055\146\040\156\141\155\145\011\011\164\165" "\156\040\144\145\166\151\143\145\040\050\057\144\145\166\057\156" "\145\164\057\164\165\156\051\012\011\055\164\040\156\141\155\145" "\011\011\103\162\145\141\164\145\040\151\146\141\143\145\040\047" "\156\141\155\145\047\012\011\055\144\040\156\141\155\145\011\011" "\104\145\154\145\164\145\040\151\146\141\143\145\040\047\156\141" "\155\145\047\012\011\055\165\040\157\167\156\145\162\011\123\145" "\164\040\151\146\141\143\145\040\157\167\156\145\162\012\011\055" "\147\040\147\162\157\165\160\011\123\145\164\040\151\146\141\143" "\145\040\147\162\157\165\160\012\011\055\142\011\011\102\162\151" "\145\146\040\157\165\164\160\165\164\000\055\155\040\115\124\104" "\137\116\125\115\040\133\055\144\040\125\102\111\137\116\125\115" "\135\040\125\102\111\137\103\124\122\114\137\104\105\126\012\012" "\101\164\164\141\143\150\040\115\124\104\040\144\145\166\151\143" "\145\040\164\157\040\125\102\111\012\012\011\055\155\040\115\124" "\104\137\116\125\115\011\115\124\104\040\144\145\166\151\143\145" "\040\156\165\155\142\145\162\040\164\157\040\141\164\164\141\143" "\150\012\011\055\144\040\125\102\111\137\116\125\115\011\125\102" "\111\040\144\145\166\151\143\145\040\156\165\155\142\145\162\040" "\164\157\040\141\163\163\151\147\156\000\055\144\040\125\102\111" "\137\116\125\115\040\125\102\111\137\103\124\122\114\137\104\105" "\126\012\012\104\145\164\141\143\150\040\115\124\104\040\144\145" "\166\151\143\145\040\146\162\157\155\040\125\102\111\012\012\011" "\055\144\040\125\102\111\137\116\125\115\011\125\102\111\040\144" "\145\166\151\143\145\040\156\165\155\142\145\162\000\125\102\111" "\137\104\105\126\111\103\105\040\055\116\040\116\101\115\105\040" "\133\055\163\040\123\111\132\105\040\174\040\055\155\135\012\012" "\103\162\145\141\164\145\040\125\102\111\040\166\157\154\165\155" "\145\012\012\011\055\141\040\101\114\111\107\116\115\105\116\124" "\011\126\157\154\165\155\145\040\141\154\151\147\156\155\145\156" "\164\040\050\144\145\146\141\165\154\164\040\061\051\012\011\055" "\155\011\011\123\145\164\040\166\157\154\165\155\145\040\163\151" "\172\145\040\164\157\040\155\141\170\151\155\165\155\040\141\166" "\141\151\154\141\142\154\145\012\011\055\156\040\126\117\114\111" "\104\011\126\157\154\165\155\145\040\111\104\056\040\111\146\040" "\156\157\164\040\163\160\145\143\151\146\151\145\144\054\012\011" "\011\011\141\163\163\151\147\156\145\144\040\141\165\164\157\155" "\141\164\151\143\141\154\154\171\012\011\055\116\040\116\101\115" "\105\011\011\126\157\154\165\155\145\040\156\141\155\145\012\011" "\055\163\040\123\111\132\105\011\011\123\151\172\145\040\151\156" "\040\142\171\164\145\163\012\011\055\164\040\124\131\120\105\011" "\011\126\157\154\165\155\145\040\164\171\160\145\040\050\163\164" "\141\164\151\143\174\144\171\156\141\155\151\143\051\000\125\102" "\111\137\104\105\126\111\103\105\040\055\156\040\126\117\114\111" "\104\012\012\122\145\155\157\166\145\040\125\102\111\040\166\157" "\154\165\155\145\012\012\011\055\156\040\126\117\114\111\104\011" "\126\157\154\165\155\145\040\111\104\000\125\102\111\137\104\105" "\126\111\103\105\040\055\156\040\126\117\114\111\104\040\055\163" "\040\123\111\132\105\012\012\122\145\163\151\172\145\040\125\102" "\111\040\166\157\154\165\155\145\012\012\011\055\156\040\126\117" "\114\111\104\011\126\157\154\165\155\145\040\111\104\012\011\055" "\163\040\123\111\132\105\011\011\123\151\172\145\040\151\156\040" "\142\171\164\145\163\000\125\102\111\137\104\105\126\111\103\105" "\040\133\055\164\040\174\040\133\055\163\040\123\111\132\105\135" "\040\111\115\107\137\106\111\114\105\135\012\012\125\160\144\141" "\164\145\040\125\102\111\040\166\157\154\165\155\145\012\012\011" "\055\164\011\124\162\165\156\143\141\164\145\040\164\157\040\172" "\145\162\157\040\163\151\172\145\012\011\055\163\040\123\111\132" "\105\011\123\151\172\145\040\151\156\040\142\171\164\145\163\040" "\164\157\040\162\145\163\151\172\145\040\164\157\000\133\055\146" "\142\161\166\141\122\102\135\040\133\055\164\040\116\135\040\133" "\055\124\040\123\105\103\135\040\133\055\101\040\123\105\103\057" "\055\156\135\012\011\133\055\151\040\111\106\101\103\105\135\040" "\133\055\163\040\120\122\117\107\135\040\133\055\160\040\120\111" "\104\106\111\114\105\135\012\011\133\055\157\103\135\040\133\055" "\162\040\111\120\135\040\133\055\126\040\126\105\116\104\117\122" "\135\040\133\055\106\040\116\101\115\105\135\040\133\055\170\040" "\117\120\124\072\126\101\114\135\056\056\056\040\133\055\117\040" "\117\120\124\135\056\056\056\012\012\011\055\151\054\055\055\151" "\156\164\145\162\146\141\143\145\040\111\106\101\103\105\011\111" "\156\164\145\162\146\141\143\145\040\164\157\040\165\163\145\040" "\050\144\145\146\141\165\154\164\040\145\164\150\060\051\012\011" "\055\163\054\055\055\163\143\162\151\160\164\040\120\122\117\107" "\011\122\165\156\040\120\122\117\107\040\141\164\040\104\110\103" "\120\040\145\166\145\156\164\163\040\050\144\145\146\141\165\154" "\164\040\057\165\163\162\057\163\150\141\162\145\057\165\144\150" "\143\160\143\057\144\145\146\141\165\154\164\056\163\143\162\151" "\160\164\051\012\011\055\160\054\055\055\160\151\144\146\151\154" "\145\040\106\111\114\105\011\103\162\145\141\164\145\040\160\151" "\144\146\151\154\145\012\011\055\102\054\055\055\142\162\157\141" "\144\143\141\163\164\011\011\122\145\161\165\145\163\164\040\142" "\162\157\141\144\143\141\163\164\040\162\145\160\154\151\145\163" "\012\011\055\164\054\055\055\162\145\164\162\151\145\163\040\116" "\011\011\123\145\156\144\040\165\160\040\164\157\040\116\040\144" "\151\163\143\157\166\145\162\040\160\141\143\153\145\164\163\040" "\050\144\145\146\141\165\154\164\040\063\051\012\011\055\124\054" "\055\055\164\151\155\145\157\165\164\040\123\105\103\011\120\141" "\165\163\145\040\142\145\164\167\145\145\156\040\160\141\143\153" "\145\164\163\040\050\144\145\146\141\165\154\164\040\063\051\012" "\011\055\101\054\055\055\164\162\171\141\147\141\151\156\040\123" "\105\103\011\127\141\151\164\040\151\146\040\154\145\141\163\145" "\040\151\163\040\156\157\164\040\157\142\164\141\151\156\145\144" "\040\050\144\145\146\141\165\154\164\040\062\060\051\012\011\055" "\156\054\055\055\156\157\167\011\011\105\170\151\164\040\151\146" "\040\154\145\141\163\145\040\151\163\040\156\157\164\040\157\142" "\164\141\151\156\145\144\012\011\055\161\054\055\055\161\165\151" "\164\011\011\105\170\151\164\040\141\146\164\145\162\040\157\142" "\164\141\151\156\151\156\147\040\154\145\141\163\145\012\011\055" "\122\054\055\055\162\145\154\145\141\163\145\011\011\122\145\154" "\145\141\163\145\040\111\120\040\157\156\040\145\170\151\164\012" "\011\055\146\054\055\055\146\157\162\145\147\162\157\165\156\144" "\011\011\122\165\156\040\151\156\040\146\157\162\145\147\162\157" "\165\156\144\012\011\055\142\054\055\055\142\141\143\153\147\162" "\157\165\156\144\011\011\102\141\143\153\147\162\157\165\156\144" "\040\151\146\040\154\145\141\163\145\040\151\163\040\156\157\164" "\040\157\142\164\141\151\156\145\144\012\011\055\123\054\055\055" "\163\171\163\154\157\147\011\011\114\157\147\040\164\157\040\163" "\171\163\154\157\147\040\164\157\157\012\011\055\141\054\055\055" "\141\162\160\151\156\147\011\011\125\163\145\040\141\162\160\151" "\156\147\040\164\157\040\166\141\154\151\144\141\164\145\040\157" "\146\146\145\162\145\144\040\141\144\144\162\145\163\163\012\011" "\055\162\054\055\055\162\145\161\165\145\163\164\040\111\120\011" "\011\122\145\161\165\145\163\164\040\164\150\151\163\040\111\120" "\040\141\144\144\162\145\163\163\012\011\055\157\054\055\055\156" "\157\055\144\145\146\141\165\154\164\055\157\160\164\151\157\156" "\163\011\104\157\156\047\164\040\162\145\161\165\145\163\164\040" "\141\156\171\040\157\160\164\151\157\156\163\040\050\165\156\154" "\145\163\163\040\055\117\040\151\163\040\147\151\166\145\156\051" "\012\011\055\117\054\055\055\162\145\161\165\145\163\164\055\157" "\160\164\151\157\156\040\117\120\124\011\122\145\161\165\145\163" "\164\040\157\160\164\151\157\156\040\117\120\124\040\146\162\157" "\155\040\163\145\162\166\145\162\040\050\143\165\155\165\154\141" "\164\151\166\145\051\012\011\055\170\040\117\120\124\072\126\101" "\114\011\011\111\156\143\154\165\144\145\040\157\160\164\151\157" "\156\040\117\120\124\040\151\156\040\163\145\156\164\040\160\141" "\143\153\145\164\163\040\050\143\165\155\165\154\141\164\151\166" "\145\051\012\011\011\011\011\105\170\141\155\160\154\145\163\040" "\157\146\040\163\164\162\151\156\147\054\040\156\165\155\145\162" "\151\143\054\040\141\156\144\040\150\145\170\040\142\171\164\145" "\040\157\160\164\163\072\012\011\011\011\011\055\170\040\150\157" "\163\164\156\141\155\145\072\142\142\157\170\040\055\040\157\160" "\164\151\157\156\040\061\062\012\011\011\011\011\055\170\040\154" "\145\141\163\145\072\063\066\060\060\040\055\040\157\160\164\151" "\157\156\040\065\061\040\050\154\145\141\163\145\040\164\151\155" "\145\051\012\011\011\011\011\055\170\040\060\170\063\144\072\060" "\061\060\060\102\105\105\106\103\060\106\106\105\105\040\055\040" "\157\160\164\151\157\156\040\066\061\040\050\143\154\151\145\156" "\164\040\151\144\051\012\011\055\106\054\055\055\146\161\144\156" "\040\116\101\115\105\011\011\101\163\153\040\163\145\162\166\145" "\162\040\164\157\040\165\160\144\141\164\145\040\104\116\123\040" "\155\141\160\160\151\156\147\040\146\157\162\040\116\101\115\105" "\012\011\055\126\054\055\055\166\145\156\144\157\162\143\154\141" "\163\163\040\126\105\116\104\117\122\011\126\145\156\144\157\162" "\040\151\144\145\156\164\151\146\151\145\162\040\050\144\145\146" "\141\165\154\164\040\047\165\144\150\143\160\040\126\105\122\123" "\111\117\116\047\051\012\011\055\103\054\055\055\143\154\151\145" "\156\164\151\144\055\156\157\156\145\011\104\157\156\047\164\040" "\163\145\156\144\040\115\101\103\040\141\163\040\143\154\151\145" "\156\164\040\151\144\145\156\164\151\146\151\145\162\012\011\055" "\166\011\011\011\126\145\162\142\157\163\145\012\123\151\147\156" "\141\154\163\072\012\011\125\123\122\061\011\122\145\156\145\167" "\040\154\145\141\163\145\012\011\125\123\122\062\011\122\145\154" "\145\141\163\145\040\154\145\141\163\145\000\133\055\146\123\135" "\040\133\055\111\040\101\104\104\122\135\040\133\103\117\116\106" "\106\111\114\105\135\012\012\104\110\103\120\040\163\145\162\166" "\145\162\012\012\011\055\146\011\122\165\156\040\151\156\040\146" "\157\162\145\147\162\157\165\156\144\012\011\055\123\011\114\157" "\147\040\164\157\040\163\171\163\154\157\147\040\164\157\157\012" "\011\055\111\040\101\104\104\122\011\114\157\143\141\154\040\141" "\144\144\162\145\163\163\000\133\055\150\105\166\135\040\133\055" "\143\040\116\135\040\133\055\165\040\125\123\105\122\135\040\133" "\055\154\040\116\101\115\105\135\040\111\120\040\120\117\122\124" "\040\120\122\117\107\012\012\103\162\145\141\164\145\040\125\104" "\120\040\163\157\143\153\145\164\054\040\142\151\156\144\040\164" "\157\040\111\120\072\120\117\122\124\040\141\156\144\040\167\141" "\151\164\012\146\157\162\040\151\156\143\157\155\151\156\147\040" "\160\141\143\153\145\164\163\056\040\122\165\156\040\120\122\117" "\107\040\146\157\162\040\145\141\143\150\040\160\141\143\153\145" "\164\054\012\162\145\144\151\162\145\143\164\151\156\147\040\141" "\154\154\040\146\165\162\164\150\145\162\040\160\141\143\153\145" "\164\163\040\167\151\164\150\040\163\141\155\145\040\160\145\145" "\162\040\151\160\072\160\157\162\164\040\164\157\040\151\164\056" "\012\012\011\111\120\011\011\111\120\040\164\157\040\154\151\163" "\164\145\156\040\157\156\054\040\060\040\075\040\141\154\154\012" "\011\120\117\122\124\011\011\120\157\162\164\040\164\157\040\154" "\151\163\164\145\156\040\157\156\012\011\120\122\117\107\040\101" "\122\107\123\011\120\162\157\147\162\141\155\040\164\157\040\162" "\165\156\012\011\055\154\040\116\101\115\105\011\011\114\157\143" "\141\154\040\150\157\163\164\156\141\155\145\040\050\145\154\163" "\145\040\154\157\157\153\163\040\165\160\040\154\157\143\141\154" "\040\150\157\163\164\156\141\155\145\040\151\156\040\104\116\123" "\051\012\011\055\165\040\125\123\105\122\133\072\107\122\120\135" "\011\103\150\141\156\147\145\040\164\157\040\165\163\145\162\057" "\147\162\157\165\160\040\141\146\164\145\162\040\142\151\156\144" "\012\011\055\143\040\116\011\011\110\141\156\144\154\145\040\165" "\160\040\164\157\040\116\040\143\157\156\156\145\143\164\151\157" "\156\163\040\163\151\155\165\154\164\141\156\145\157\165\163\154" "\171\012\011\055\150\011\011\114\157\157\153\040\165\160\040\160" "\145\145\162\047\163\040\150\157\163\164\156\141\155\145\012\011" "\055\105\011\011\104\157\156\047\164\040\163\145\164\040\165\160" "\040\145\156\166\151\162\157\156\155\145\156\164\040\166\141\162" "\151\141\142\154\145\163\012\011\055\166\011\011\126\145\162\142" "\157\163\145\000\133\117\120\124\111\117\116\123\135\040\106\111" "\114\105\123\131\123\124\105\115\174\104\111\122\105\103\124\117" "\122\131\012\012\125\156\155\157\165\156\164\040\146\151\154\145" "\040\163\171\163\164\145\155\163\012\012\011\055\141\011\125\156" "\155\157\165\156\164\040\141\154\154\040\146\151\154\145\040\163" "\171\163\164\145\155\163\012\011\055\162\011\124\162\171\040\164" "\157\040\162\145\155\157\165\156\164\040\144\145\166\151\143\145" "\163\040\141\163\040\162\145\141\144\055\157\156\154\171\040\151" "\146\040\155\157\165\156\164\040\151\163\040\142\165\163\171\012" "\011\055\154\011\114\141\172\171\040\165\155\157\165\156\164\040" "\050\144\145\164\141\143\150\040\146\151\154\145\163\171\163\164" "\145\155\051\012\011\055\146\011\106\157\162\143\145\040\165\155" "\157\165\156\164\040\050\151\056\145\056\054\040\165\156\162\145" "\141\143\150\141\142\154\145\040\116\106\123\040\163\145\162\166" "\145\162\051\012\011\055\104\011\104\157\156\047\164\040\146\162" "\145\145\040\154\157\157\160\040\144\145\166\151\143\145\040\145" "\166\145\156\040\151\146\040\151\164\040\150\141\163\040\142\145" "\145\156\040\165\163\145\144\000\133\055\141\155\156\162\163\160" "\166\151\157\135\012\012\120\162\151\156\164\040\163\171\163\164" "\145\155\040\151\156\146\157\162\155\141\164\151\157\156\012\012" "\011\055\141\011\120\162\151\156\164\040\141\154\154\012\011\055" "\155\011\124\150\145\040\155\141\143\150\151\156\145\040\050\150" "\141\162\144\167\141\162\145\051\040\164\171\160\145\012\011\055" "\156\011\110\157\163\164\156\141\155\145\012\011\055\162\011\113" "\145\162\156\145\154\040\162\145\154\145\141\163\145\012\011\055" "\163\011\113\145\162\156\145\154\040\156\141\155\145\040\050\144" "\145\146\141\165\154\164\051\012\011\055\160\011\120\162\157\143" "\145\163\163\157\162\040\164\171\160\145\012\011\055\166\011\113" "\145\162\156\145\154\040\166\145\162\163\151\157\156\012\011\055" "\151\011\124\150\145\040\150\141\162\144\167\141\162\145\040\160" "\154\141\164\146\157\162\155\012\011\055\157\011\117\123\040\156" "\141\155\145\000\133\055\146\141\135\133\055\164\040\116\135\040" "\133\106\111\114\105\135\056\056\056\012\012\103\157\156\166\145" "\162\164\040\163\160\141\143\145\163\040\164\157\040\164\141\142" "\163\054\040\167\162\151\164\151\156\147\040\164\157\040\163\164" "\144\157\165\164\012\012\011\055\141\054\055\055\141\154\154\011" "\103\157\156\166\145\162\164\040\141\154\154\040\142\154\141\156" "\153\163\012\011\055\146\054\055\055\146\151\162\163\164\055\157" "\156\154\171\011\103\157\156\166\145\162\164\040\157\156\154\171" "\040\154\145\141\144\151\156\147\040\142\154\141\156\153\163\012" "\011\055\164\054\055\055\164\141\142\163\075\116\011\124\141\142" "\163\164\157\160\163\040\145\166\145\162\171\040\116\040\143\150" "\141\162\163\000\133\055\143\144\165\135\133\055\146\054\163\054" "\167\040\116\135\040\133\111\116\120\125\124\040\133\117\125\124" "\120\125\124\135\135\012\012\104\151\163\143\141\162\144\040\144" "\165\160\154\151\143\141\164\145\040\154\151\156\145\163\012\012" "\011\055\143\011\120\162\145\146\151\170\040\154\151\156\145\163" "\040\142\171\040\164\150\145\040\156\165\155\142\145\162\040\157" "\146\040\157\143\143\165\162\162\145\156\143\145\163\012\011\055" "\144\011\117\156\154\171\040\160\162\151\156\164\040\144\165\160" "\154\151\143\141\164\145\040\154\151\156\145\163\012\011\055\165" "\011\117\156\154\171\040\160\162\151\156\164\040\165\156\151\161" "\165\145\040\154\151\156\145\163\012\011\055\146\040\116\011\123" "\153\151\160\040\146\151\162\163\164\040\116\040\146\151\145\154" "\144\163\012\011\055\163\040\116\011\123\153\151\160\040\146\151" "\162\163\164\040\116\040\143\150\141\162\163\040\050\141\146\164" "\145\162\040\141\156\171\040\163\153\151\160\160\145\144\040\146" "\151\145\154\144\163\051\012\011\055\167\040\116\011\103\157\155" "\160\141\162\145\040\116\040\143\150\141\162\141\143\164\145\162" "\163\040\151\156\040\154\151\156\145\000\133\055\165\144\135\040" "\133\106\111\114\105\135\012\012\103\157\156\166\145\162\164\040" "\106\111\114\105\040\151\156\055\160\154\141\143\145\040\146\162" "\157\155\040\125\156\151\170\040\164\157\040\104\117\123\040\146" "\157\162\155\141\164\056\012\127\150\145\156\040\156\157\040\146" "\151\154\145\040\151\163\040\147\151\166\145\156\054\040\165\163" "\145\040\163\164\144\151\156\057\163\164\144\157\165\164\056\012" "\012\011\055\165\011\144\157\163\062\165\156\151\170\012\011\055" "\144\011\165\156\151\170\062\144\157\163\000\133\055\143\146\135" "\040\133\106\111\114\105\135\056\056\056\012\012\104\145\143\157" "\155\160\162\145\163\163\040\106\111\114\105\040\050\157\162\040" "\163\164\144\151\156\051\012\012\011\055\143\011\127\162\151\164" "\145\040\164\157\040\163\164\144\157\165\164\012\011\055\146\011" "\106\157\162\143\145\000\133\055\143\146\166\103\106\135\040\133" "\106\111\114\105\135\056\056\056\012\012\011\055\143\011\127\162" "\151\164\145\040\164\157\040\163\164\144\157\165\164\012\011\055" "\146\011\106\157\162\143\145\012\011\055\166\011\126\145\162\142" "\157\163\145\012\011\055\106\011\104\157\156\047\164\040\163\164" "\157\162\145\040\157\162\040\166\145\162\151\146\171\040\143\150" "\145\143\153\163\165\155\000\133\055\143\146\135\040\133\106\111" "\114\105\135\056\056\056\012\012\104\145\143\157\155\160\162\145" "\163\163\040\106\111\114\105\040\050\157\162\040\163\164\144\151" "\156\051\012\012\011\055\143\011\127\162\151\164\145\040\164\157" "\040\163\164\144\157\165\164\012\011\055\146\011\106\157\162\143" "\145\000\133\055\154\156\157\160\161\135\040\106\111\114\105\133" "\056\172\151\160\135\040\133\106\111\114\105\135\056\056\056\040" "\133\055\170\040\106\111\114\105\056\056\056\135\040\133\055\144" "\040\104\111\122\135\012\012\105\170\164\162\141\143\164\040\106" "\111\114\105\163\040\146\162\157\155\040\132\111\120\040\141\162" "\143\150\151\166\145\012\012\011\055\154\011\114\151\163\164\040" "\143\157\156\164\145\156\164\163\040\050\167\151\164\150\040\055" "\161\040\146\157\162\040\163\150\157\162\164\040\146\157\162\155" "\051\012\011\055\156\011\116\145\166\145\162\040\157\166\145\162" "\167\162\151\164\145\040\146\151\154\145\163\040\050\144\145\146" "\141\165\154\164\072\040\141\163\153\051\012\011\055\157\011\117" "\166\145\162\167\162\151\164\145\012\011\055\160\011\120\162\151" "\156\164\040\164\157\040\163\164\144\157\165\164\012\011\055\161" "\011\121\165\151\145\164\012\011\055\170\040\106\111\114\105\011" "\105\170\143\154\165\144\145\040\106\111\114\105\163\012\011\055" "\144\040\104\111\122\011\105\170\164\162\141\143\164\040\151\156" "\164\157\040\104\111\122\000\012\012\104\151\163\160\154\141\171" "\040\164\150\145\040\164\151\155\145\040\163\151\156\143\145\040" "\164\150\145\040\154\141\163\164\040\142\157\157\164\000\012\012" "\120\162\151\156\164\040\164\150\145\040\165\163\145\162\163\040" "\143\165\162\162\145\156\164\154\171\040\154\157\147\147\145\144" "\040\157\156\000\116\012\012\120\141\165\163\145\040\146\157\162" "\040\116\040\155\151\143\162\157\163\145\143\157\156\144\163\000" "\133\055\157\040\117\125\124\106\111\114\105\135\040\133\111\116" "\106\111\114\105\135\012\012\125\165\144\145\143\157\144\145\040" "\141\040\146\151\154\145\012\106\151\156\144\163\040\117\125\124" "\106\111\114\105\040\151\156\040\165\165\145\156\143\157\144\145" "\144\040\163\157\165\162\143\145\040\165\156\154\145\163\163\040" "\055\157\040\151\163\040\147\151\166\145\156\000\133\055\155\135" "\040\133\106\111\114\105\135\040\123\124\117\122\105\104\137\106" "\111\114\105\116\101\115\105\012\012\125\165\145\156\143\157\144" "\145\040\106\111\114\105\040\050\157\162\040\163\164\144\151\156" "\051\040\164\157\040\163\164\144\157\165\164\012\012\011\055\155" "\011\125\163\145\040\142\141\163\145\066\064\040\145\156\143\157" "\144\151\156\147\040\160\145\162\040\122\106\103\061\065\062\061" "\000\103\117\115\115\101\116\104\040\133\117\120\124\111\117\116" "\123\135\012\012\103\162\145\141\164\145\040\141\156\144\040\162" "\145\155\157\166\145\040\166\151\162\164\165\141\154\040\145\164" "\150\145\162\156\145\164\040\144\145\166\151\143\145\163\012\012" "\011\141\144\144\011\011\111\106\101\103\105\040\126\114\101\116" "\137\111\104\012\011\162\145\155\011\011\126\114\101\116\137\116" "\101\115\105\012\011\163\145\164\137\146\154\141\147\011\111\106" "\101\103\105\040\060\174\061\040\126\114\101\116\137\121\117\123" "\012\011\163\145\164\137\145\147\162\145\163\163\137\155\141\160" "\011\126\114\101\116\137\116\101\115\105\040\123\113\102\137\120" "\122\111\117\040\126\114\101\116\137\121\117\123\012\011\163\145" "\164\137\151\156\147\162\145\163\163\137\155\141\160\011\126\114" "\101\116\137\116\101\115\105\040\123\113\102\137\120\122\111\117" "\040\126\114\101\116\137\121\117\123\012\011\163\145\164\137\156" "\141\155\145\137\164\171\160\145\011\116\101\115\105\137\124\131" "\120\105\000\133\117\120\124\111\117\116\123\135\040\133\106\111" "\114\105\135\056\056\056\012\012\105\144\151\164\040\106\111\114" "\105\012\012\011\055\143\040\103\115\104\011\111\156\151\164\151" "\141\154\040\143\157\155\155\141\156\144\040\164\157\040\162\165" "\156\040\050\044\105\130\111\116\111\124\040\141\154\163\157\040" "\141\166\141\151\154\141\142\154\145\051\012\011\055\122\011\122" "\145\141\144\055\157\156\154\171\012\011\055\110\011\114\151\163" "\164\040\141\166\141\151\154\141\142\154\145\040\146\145\141\164" "\165\162\145\163\000\133\055\141\135\012\012\114\157\143\153\040" "\141\040\166\151\162\164\165\141\154\040\164\145\162\155\151\156" "\141\154\056\040\101\040\160\141\163\163\167\157\162\144\040\151" "\163\040\162\145\161\165\151\162\145\144\040\164\157\040\165\156" "\154\157\143\153\056\012\012\011\055\141\011\114\157\143\153\040" "\141\154\154\040\126\124\163\000\133\104\105\126\111\103\105\135" "\012\012\123\150\157\167\040\103\104\040\166\157\154\165\155\145" "\040\156\141\155\145\040\157\146\040\164\150\145\040\104\105\126" "\111\103\105\040\050\144\145\146\141\165\154\164\040\057\144\145" "\166\057\143\144\162\157\155\051\000\133\106\111\114\105\135\012" "\012\127\162\151\164\145\040\143\157\156\164\145\156\164\040\157" "\146\040\106\111\114\105\040\157\162\040\163\164\144\151\156\040" "\164\157\040\141\154\154\040\154\157\147\147\145\144\055\151\156" "\040\165\163\145\162\163\000\133\055\156\040\123\105\103\135\040" "\133\055\164\135\040\120\122\117\107\040\101\122\107\123\012\012" "\122\165\156\040\120\122\117\107\040\160\145\162\151\157\144\151" "\143\141\154\154\171\012\012\011\055\156\011\114\157\157\160\040" "\160\145\162\151\157\144\040\151\156\040\163\145\143\157\156\144" "\163\040\050\144\145\146\141\165\154\164\040\062\051\012\011\055" "\164\011\104\157\156\047\164\040\160\162\151\156\164\040\150\145" "\141\144\145\162\000\133\055\164\040\116\133\155\163\135\135\040" "\133\055\124\040\116\133\155\163\135\135\040\133\055\106\135\040" "\104\105\126\012\012\120\145\162\151\157\144\151\143\141\154\154" "\171\040\167\162\151\164\145\040\164\157\040\167\141\164\143\150" "\144\157\147\040\144\145\166\151\143\145\040\104\105\126\012\012" "\011\055\124\040\116\011\122\145\142\157\157\164\040\141\146\164" "\145\162\040\116\040\163\145\143\157\156\144\163\040\151\146\040" "\156\157\164\040\162\145\163\145\164\040\050\144\145\146\141\165" "\154\164\040\066\060\051\012\011\055\164\040\116\011\122\145\163" "\145\164\040\145\166\145\162\171\040\116\040\163\145\143\157\156" "\144\163\040\050\144\145\146\141\165\154\164\040\063\060\051\012" "\011\055\106\011\122\165\156\040\151\156\040\146\157\162\145\147" "\162\157\165\156\144\012\012\125\163\145\040\065\060\060\155\163" "\040\164\157\040\163\160\145\143\151\146\171\040\160\145\162\151" "\157\144\040\151\156\040\155\151\154\154\151\163\145\143\157\156" "\144\163\000\133\055\143\155\154\167\114\135\040\133\106\111\114" "\105\135\056\056\056\012\012\103\157\165\156\164\040\154\151\156" "\145\163\054\040\167\157\162\144\163\054\040\141\156\144\040\142" "\171\164\145\163\040\146\157\162\040\145\141\143\150\040\106\111" "\114\105\040\050\157\162\040\163\164\144\151\156\051\012\012\011" "\055\143\011\103\157\165\156\164\040\142\171\164\145\163\012\011" "\055\155\011\103\157\165\156\164\040\143\150\141\162\141\143\164" "\145\162\163\012\011\055\154\011\103\157\165\156\164\040\156\145" "\167\154\151\156\145\163\012\011\055\167\011\103\157\165\156\164" "\040\167\157\162\144\163\012\011\055\114\011\120\162\151\156\164" "\040\154\157\156\147\145\163\164\040\154\151\156\145\040\154\145" "\156\147\164\150\000\133\055\143\174\055\055\143\157\156\164\151" "\156\165\145\135\040\133\055\163\174\055\055\163\160\151\144\145" "\162\135\040\133\055\161\174\055\055\161\165\151\145\164\135\040" "\133\055\117\174\055\055\157\165\164\160\165\164\055\144\157\143" "\165\155\145\156\164\040\106\111\114\105\135\012\011\133\055\055" "\150\145\141\144\145\162\040\047\150\145\141\144\145\162\072\040" "\166\141\154\165\145\047\135\040\133\055\131\174\055\055\160\162" "\157\170\171\040\157\156\057\157\146\146\135\040\133\055\120\040" "\104\111\122\135\012\011\133\055\125\174\055\055\165\163\145\162" "\055\141\147\145\156\164\040\101\107\105\116\124\135\040\133\055" "\124\040\123\105\103\135\040\125\122\114\056\056\056\012\012\122" "\145\164\162\151\145\166\145\040\146\151\154\145\163\040\166\151" "\141\040\110\124\124\120\040\157\162\040\106\124\120\012\012\011" "\055\163\011\123\160\151\144\145\162\040\155\157\144\145\040\055" "\040\157\156\154\171\040\143\150\145\143\153\040\146\151\154\145" "\040\145\170\151\163\164\145\156\143\145\012\011\055\143\011\103" "\157\156\164\151\156\165\145\040\162\145\164\162\151\145\166\141" "\154\040\157\146\040\141\142\157\162\164\145\144\040\164\162\141" "\156\163\146\145\162\012\011\055\161\011\121\165\151\145\164\012" "\011\055\120\040\104\111\122\011\123\141\166\145\040\164\157\040" "\104\111\122\040\050\144\145\146\141\165\154\164\040\056\051\012" "\011\055\124\040\123\105\103\011\116\145\164\167\157\162\153\040" "\162\145\141\144\040\164\151\155\145\157\165\164\040\151\163\040" "\123\105\103\040\163\145\143\157\156\144\163\012\011\055\117\040" "\106\111\114\105\011\123\141\166\145\040\164\157\040\106\111\114" "\105\040\050\047\055\047\040\146\157\162\040\163\164\144\157\165" "\164\051\012\011\055\125\040\123\124\122\011\125\163\145\040\123" "\124\122\040\146\157\162\040\125\163\145\162\055\101\147\145\156" "\164\040\150\145\141\144\145\162\012\011\055\131\011\125\163\145" "\040\160\162\157\170\171\040\050\047\157\156\047\040\157\162\040" "\047\157\146\146\047\051\000\133\103\117\115\115\101\116\104\135" "\056\056\056\012\012\114\157\143\141\164\145\040\141\040\103\117" "\115\115\101\116\104\000\133\055\141\135\012\012\123\150\157\167" "\040\167\150\157\040\151\163\040\154\157\147\147\145\144\040\157" "\156\012\012\011\055\141\011\123\150\157\167\040\141\154\154\012" "\011\055\110\011\120\162\151\156\164\040\143\157\154\165\155\156" "\040\150\145\141\144\145\162\163\000\012\012\120\162\151\156\164" "\040\164\150\145\040\165\163\145\162\040\156\141\155\145\040\141" "\163\163\157\143\151\141\164\145\144\040\167\151\164\150\040\164" "\150\145\040\143\165\162\162\145\156\164\040\145\146\146\145\143" "\164\151\166\145\040\165\163\145\162\040\151\144\000\133\055\150" "\040\123\105\122\126\105\122\135\040\133\055\160\040\120\117\122" "\124\135\040\116\101\115\105\056\056\056\012\012\121\165\145\162" "\171\040\127\110\117\111\123\040\151\156\146\157\040\141\142\157" "\165\164\040\116\101\115\105\012\012\011\055\150\054\055\160\011" "\123\145\162\166\145\162\040\164\157\040\161\165\145\162\171\000" "\133\117\120\124\111\117\116\123\135\040\133\120\122\117\107\040" "\101\122\107\123\135\012\012\122\165\156\040\120\122\117\107\040" "\157\156\040\145\166\145\162\171\040\151\164\145\155\040\147\151" "\166\145\156\040\142\171\040\163\164\144\151\156\012\012\011\055" "\160\011\101\163\153\040\165\163\145\162\040\167\150\145\164\150" "\145\162\040\164\157\040\162\165\156\040\145\141\143\150\040\143" "\157\155\155\141\156\144\012\011\055\162\011\104\157\156\047\164" "\040\162\165\156\040\143\157\155\155\141\156\144\040\151\146\040" "\151\156\160\165\164\040\151\163\040\145\155\160\164\171\012\011" "\055\060\011\111\156\160\165\164\040\151\163\040\163\145\160\141" "\162\141\164\145\144\040\142\171\040\116\125\114\040\143\150\141" "\162\141\143\164\145\162\163\012\011\055\164\011\120\162\151\156" "\164\040\164\150\145\040\143\157\155\155\141\156\144\040\157\156" "\040\163\164\144\145\162\162\040\142\145\146\157\162\145\040\145" "\170\145\143\165\164\151\157\156\012\011\055\145\133\123\124\122" "\135\011\123\124\122\040\163\164\157\160\163\040\151\156\160\165" "\164\040\160\162\157\143\145\163\163\151\156\147\012\011\055\156" "\040\116\011\120\141\163\163\040\156\157\040\155\157\162\145\040" "\164\150\141\156\040\116\040\141\162\147\163\040\164\157\040\120" "\122\117\107\012\011\055\163\040\116\011\120\141\163\163\040\143" "\157\155\155\141\156\144\040\154\151\156\145\040\157\146\040\156" "\157\040\155\157\162\145\040\164\150\141\156\040\116\040\142\171" "\164\145\163\012\011\055\111\040\123\124\122\011\122\145\160\154" "\141\143\145\040\123\124\122\040\167\151\164\150\151\156\040\120" "\122\117\107\040\101\122\107\123\040\167\151\164\150\040\151\156" "\160\165\164\040\154\151\156\145\012\011\055\170\011\105\170\151" "\164\040\151\146\040\163\151\172\145\040\151\163\040\145\170\143" "\145\145\144\145\144\000\055\144\040\133\055\143\146\135\040\133" "\106\111\114\105\135\056\056\056\012\012\104\145\143\157\155\160" "\162\145\163\163\040\106\111\114\105\040\050\157\162\040\163\164" "\144\151\156\051\012\012\011\055\144\011\104\145\143\157\155\160" "\162\145\163\163\012\011\055\143\011\127\162\151\164\145\040\164" "\157\040\163\164\144\157\165\164\012\011\055\146\011\106\157\162" "\143\145\000\133\106\111\114\105\135\056\056\056\012\012\104\145" "\143\157\155\160\162\145\163\163\040\164\157\040\163\164\144\157" "\165\164\000\133\123\124\122\111\116\107\135\012\012\122\145\160" "\145\141\164\145\144\154\171\040\157\165\164\160\165\164\040\141" "\040\154\151\156\145\040\167\151\164\150\040\123\124\122\111\116" "\107\054\040\157\162\040\047\171\047\000\133\106\111\114\105\135" "\056\056\056\012\012\104\145\143\157\155\160\162\145\163\163\040" "\164\157\040\163\164\144\157\165\164\000\133\117\120\124\111\117" "\116\123\135\040\111\106\101\103\105\040\123\103\122\111\120\124" "\012\012\115\141\156\141\147\145\040\141\040\132\145\162\157\103" "\157\156\146\040\111\120\166\064\040\154\151\156\153\055\154\157" "\143\141\154\040\141\144\144\162\145\163\163\012\012\011\055\146" "\011\011\122\165\156\040\151\156\040\146\157\162\145\147\162\157" "\165\156\144\012\011\055\161\011\011\121\165\151\164\040\141\146" "\164\145\162\040\157\142\164\141\151\156\151\156\147\040\141\144" "\144\162\145\163\163\012\011\055\162\040\061\066\071\056\062\065" "\064\056\170\056\170\011\122\145\161\165\145\163\164\040\164\150" "\151\163\040\141\144\144\162\145\163\163\040\146\151\162\163\164" "\012\011\055\166\011\011\126\145\162\142\157\163\145\012\012\127" "\151\164\150\040\156\157\040\055\161\054\040\162\165\156\163\040" "\143\157\156\164\151\156\165\157\165\163\154\171\040\155\157\156" "\151\164\157\162\151\156\147\040\146\157\162\040\101\122\120\040" "\143\157\156\146\154\151\143\164\163\054\012\145\170\151\164\163" "\040\157\156\154\171\040\157\156\040\111\057\117\040\145\162\162" "\157\162\163\040\050\154\151\156\153\040\144\157\167\156\040\145" "\164\143\051\000";
#endif
#if (!definedEx(CONFIG_SHOW_USAGE) || definedEx(CONFIG_FEATURE_COMPRESS_USAGE))

#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
static const char packed_usage[] __attribute__((aligned(1))) = {};
#line 1 "/usr0/home/ckaestne/TypeChef/busybox/gitbusybox/include/bb_archive.h" 1
/* vi: set sw=4 ts=4: */



_Pragma("GCC visibility push(hidden)")

enum {

	
	
	
	
	
	
	
	
	
	
	
 	COMPRESS_MAGIC = 0x9d1f,
	GZIP_MAGIC  = 0x8b1f,
	BZIP2_MAGIC = 'B' + 'Z' * 256,
	XZ_MAGIC1   = 0xfd + '7' * 256,
	XZ_MAGIC2   = 'z' + ('X' + ('Z' + 0 * 256) * 256) * 256,
	XZ_MAGIC1a  = 0xfd + ('7' + ('z' + 'X' * 256) * 256) * 256,
	XZ_MAGIC2a  = 'Z' + 0 * 256,

};

typedef struct file_header_t {
	char *name;
	char *link_target;
#if definedEx(CONFIG_FEATURE_TAR_UNAME_GNAME)
	char *tar__uname;
	char *tar__gname;
#endif
	off_t size;
	uid_t uid;
	gid_t gid;
	mode_t mode;
	time_t mtime;
	dev_t device;
} file_header_t;

struct hardlinks_t;

typedef struct archive_handle_t {
	/* Flags. 1st since it is most used member */
	unsigned ah_flags;

	/* The raw stream as read from disk or stdin */
	int src_fd;

	/* Define if the header and data component should be processed */
	char  (*filter)(struct archive_handle_t *);
	/* List of files that have been accepted */
	llist_t *accept;
	/* List of files that have been rejected */
	llist_t *reject;
	/* List of files that have successfully been worked on */
	llist_t *passed;

	/* Currently processed file's header */
	file_header_t *file_header;

	/* Process the header component, e.g. tar -t */
	void  (*action_header)(const file_header_t *);

	/* Process the data component, e.g. extract to filesystem */
	void  (*action_data)(struct archive_handle_t *);

	/* Function that skips data */
	void  (*seek)(int fd, off_t amount);

	/* Count processed bytes */
	off_t offset;

	/* Archiver specific. Can make it a union if it ever gets big */


#if (definedEx(CONFIG_DPKG_DEB) || definedEx(CONFIG_TAR) || definedEx(CONFIG_DPKG))
	smallint tar__end;
#if definedEx(CONFIG_FEATURE_TAR_GNU_EXTENSIONS)
	char* tar__longname;
	char* tar__linkname;
#endif
#if definedEx(CONFIG_FEATURE_TAR_TO_COMMAND)
	char* tar__to_command;
	const char* tar__to_command_shell;
#endif
#if definedEx(CONFIG_FEATURE_TAR_SELINUX)
	char* tar__sctx[2];
#endif
#endif
#if (definedEx(CONFIG_RPM) || definedEx(CONFIG_RPM2CPIO) || definedEx(CONFIG_CPIO))
	uoff_t cpio__blocks;
	struct hardlinks_t *cpio__hardlinks_to_create;
	struct hardlinks_t *cpio__created_hardlinks;
#endif
#if (definedEx(CONFIG_DPKG) || definedEx(CONFIG_DPKG_DEB))
	/* Temporary storage */
	char *dpkg__buffer;
	/* How to process any sub archive, e.g. get_header_tar_gz */
	char  (*dpkg__action_data_subarchive)(struct archive_handle_t *);
	/* Contains the handle to a sub archive */
	struct archive_handle_t *dpkg__sub_archive;
#endif
#if definedEx(CONFIG_FEATURE_AR_CREATE)
	const char *ar__name;
	struct archive_handle_t *ar__out;
#endif
} archive_handle_t;
/* bits in ah_flags */










#if definedEx(CONFIG_RPM)

#endif
/* POSIX tar Header Block, from POSIX 1003.1-1990  */



typedef struct tar_header_t {     /* byte offset */
	char name[100];     /*   0-99 */
	char mode[8];             /* 100-107 */
	char uid[8];              /* 108-115 */
	char gid[8];              /* 116-123 */
	char size[12];            /* 124-135 */
	char mtime[12];           /* 136-147 */
	char chksum[8];           /* 148-155 */
	char typeflag;            /* 156-156 */
	char linkname[100]; /* 157-256 */
	/* POSIX:   "ustar" NUL "00" */
	/* GNU tar: "ustar  " NUL */
	/* Normally it's defined as magic[6] followed by
	 * version[2], but we put them together to save code.
	 */
	char magic[8];            /* 257-264 */
	char uname[32];           /* 265-296 */
	char gname[32];           /* 297-328 */
	char devmajor[8];         /* 329-336 */
	char devminor[8];         /* 337-344 */
	char prefix[155];         /* 345-499 */
	char padding[12];         /* 500-512 (pad to exactly TAR_BLOCK_SIZE) */
} tar_header_t;
struct BUG_tar_header {
	char c[sizeof(tar_header_t) == 512 ? 1 : -1];
};



archive_handle_t *init_handle(void) ;

char filter_accept_all(archive_handle_t *archive_handle) ;
char filter_accept_list(archive_handle_t *archive_handle) ;
char filter_accept_list_reassign(archive_handle_t *archive_handle) ;
char filter_accept_reject_list(archive_handle_t *archive_handle) ;

void unpack_ar_archive(archive_handle_t *ar_archive) ;

void data_skip(archive_handle_t *archive_handle) ;
void data_extract_all(archive_handle_t *archive_handle) ;
void data_extract_to_stdout(archive_handle_t *archive_handle) ;
void data_extract_to_command(archive_handle_t *archive_handle) ;

void header_skip(const file_header_t *file_header) ;
void header_list(const file_header_t *file_header) ;
void header_verbose_list(const file_header_t *file_header) ;

char get_header_ar(archive_handle_t *archive_handle) ;
char get_header_cpio(archive_handle_t *archive_handle) ;
char get_header_tar(archive_handle_t *archive_handle) ;
char get_header_tar_gz(archive_handle_t *archive_handle) ;
char get_header_tar_bz2(archive_handle_t *archive_handle) ;
char get_header_tar_lzma(archive_handle_t *archive_handle) ;

void seek_by_jump(int fd, off_t amount) ;
void seek_by_read(int fd, off_t amount) ;

const char *strip_unsafe_prefix(const char *str) ;

void data_align(archive_handle_t *archive_handle, unsigned boundary) ;
const llist_t *find_list_entry(const llist_t *list, const char *filename) ;
const llist_t *find_list_entry2(const llist_t *list, const char *filename) ;

/* A bit of bunzip2 internals are exposed for compressed help support: */
typedef struct bunzip_data bunzip_data;
int start_bunzip(bunzip_data **bdp, int in_fd, const void *inbuf, int len) ;
/* NB: read_bunzip returns < 0 on error, or the number of *unfilled* bytes
 * in outbuf. IOW: on EOF returns len ("all bytes are not filled"), not 0: */
int read_bunzip(bunzip_data *bd, char *outbuf, int len) ;
void dealloc_bunzip(bunzip_data *bd) ;

/* Meaning and direction (input/output) of the fields are transformer-specific */
typedef struct transformer_aux_data_t {
	smallint check_signature; /* most often referenced member */
	off_t    bytes_out;
	off_t    bytes_in;  /* used in unzip code only: needs to know packed size */
	uint32_t crc32;
	time_t   mtime;     /* gunzip code may set this on exit */
} transformer_aux_data_t;

void init_transformer_aux_data(transformer_aux_data_t *aux) ;
int  check_signature16(transformer_aux_data_t *aux, int src_fd, unsigned magic16) ;


#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int inflate_unzip(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int unpack_Z_stream(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int unpack_gz_stream(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int unpack_bz2_stream(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int unpack_lzma_stream(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int unpack_xz_stream(transformer_aux_data_t *aux, int src_fd, int dst_fd) ;

char* append_ext(char *filename, const char *expected_ext) ;
int bbunpack(char **argv,
		
#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int  (*unpacker)(transformer_aux_data_t *aux),
		char*  (*make_new_name)(char *filename, const char *expected_ext),
		const char *expected_ext
) ;

void check_errors_in_children(int signo);
#if !definedEx(CONFIG_NOMMU)
void open_transformer(int fd,
	int check_signature,
	
#if definedEx(CONFIG_DESKTOP)
long long
#endif
#if !definedEx(CONFIG_DESKTOP)

#endif
 int  (*transformer)(transformer_aux_data_t *aux, int src_fd, int dst_fd)
) ;


#endif
#if definedEx(CONFIG_NOMMU)
void open_transformer(int fd, const char *transform_prog) ;

/* open_transformer_with_no_sig() does not exist on NOMMU */
#endif
_Pragma("GCC visibility pop")


#line 67 "gitbusybox/libbb/appletlib.c" 2
static const char *unpack_usage_messages(void)
{
	char *outbuf = ((void *)0);
	bunzip_data *bd;
	int i;

	i = start_bunzip(&bd,
			/* src_fd: */ -1,
			/* inbuf:  */ packed_usage,
			/* len:    */ sizeof(packed_usage));
	/* read_bunzip can longjmp to start_bunzip, and ultimately
	 * end up here with i != 0 on read data errors! Not trivial */
	if (!i) {
		/* Cannot use xmalloc: will leak bd in NOFORK case! */
		outbuf = malloc_or_warn(sizeof
		if (outbuf)
			read_bunzip(bd, outbuf, sizeof
	}
	dealloc_bunzip(bd);
	return outbuf;
}


#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)



#endif
void  bb_show_usage(void)
{
	if (
#if definedEx(CONFIG_SHOW_USAGE)
1
#endif
#if !definedEx(CONFIG_SHOW_USAGE)
0
#endif
) {

		
		

		
			
		
			
			
			
		
		
			
 		const char *p;
		const char *usage_string = p = 
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)

#if (!definedEx(CONFIG_SHOW_USAGE) || definedEx(CONFIG_FEATURE_COMPRESS_USAGE))
0
#endif
#if (definedEx(CONFIG_SHOW_USAGE) && !definedEx(CONFIG_FEATURE_COMPRESS_USAGE))
usage_messages
#endif

#endif
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
unpack_usage_messages()
#endif
;
		int ap = find_applet_by_name(applet_name);

		if (ap < 0) /* never happens, paranoia */
			xfunc_die();
		while (ap) {
			while (*p++) continue;
			ap--;
		}
		full_write2_str(bb_banner);
		full_write2_str(" multi-call binary.\n");
		if (*p == '\b')
			full_write2_str("\nNo help available.\n\n");
		else {
			full_write2_str("\nUsage: ");
			full_write2_str(applet_name);
			full_write2_str(" ");
			full_write2_str(p);
			full_write2_str("\n\n");
		}
		if (
#if definedEx(CONFIG_FEATURE_CLEAN_UP)
1
#endif
#if !definedEx(CONFIG_FEATURE_CLEAN_UP)
0
#endif
)
			
#if definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
free((char*)usage_string)
#endif
#if !definedEx(CONFIG_FEATURE_COMPRESS_USAGE)
((void)((char*)usage_string))
#endif
;

	}
	xfunc_die();
}


static int applet_name_compare(const void *name, const void *idx)
{
	int i = (int)(ptrdiff_t)idx - 1;
	return strcmp(name, 
#if (definedEx(CONFIG_FEATURE_SUID) || definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + (applet_nameofs[i] & 0x0fff))
#endif
#if (!definedEx(CONFIG_FEATURE_SUID) && !definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + applet_nameofs[i])
#endif
);
}

int  find_applet_by_name(const char *name)
{

	/* Do a binary search to find the applet entry given the name. */
	const char *p;
	p = bsearch(name, (void*)(ptrdiff_t)1, ((unsigned)(sizeof(applet_main) / sizeof((applet_main)[0]))), 1, applet_name_compare);
	/*
	 * if (!p) return -1;
	 * ^^^^^^^^^^^^^^^^^^ the code below will do this if p == NULL :)
	 */
	return (int)(ptrdiff_t)p - 1;
 	
	
	
	
		
			
		
		
	
	

}


void lbb_prepare(const char *applet
		
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
, char **argv
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
)
				
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
__attribute__(( visibility("default") ))
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
;
void lbb_prepare(const char *applet
		
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
, char **argv
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
)
{

	(*(int **)&bb_errno) = __errno_location();
	__asm__ __volatile__("":::"memory");

	applet_name = applet;

	/* Set locale for everybody except 'init' */
	if (
#if definedEx(CONFIG_LOCALE_SUPPORT)
1
#endif
#if !definedEx(CONFIG_LOCALE_SUPPORT)
0
#endif
 && getpid() != 1)
		
#if !definedEx(CONFIG_LOCALE_SUPPORT)
((void)0)
#endif
#if definedEx(CONFIG_LOCALE_SUPPORT)
setlocale(__LC_ALL, "")
#endif
;

#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
	/* Redundant for busybox (run_applet_and_exit covers that case)
	 * but needed for "individual applet" mode */
	if (argv[1]
	 && !argv[2]
	 && strcmp(argv[1], "--help") == 0
	 && strncmp(applet, "busybox", 7) != 0
	) {
		/* Special case. POSIX says "test --help"
		 * should be no different from e.g. "test --foo".  */
		if (!
#if definedEx(CONFIG_TEST)
1
#endif
#if !definedEx(CONFIG_TEST)
0
#endif
 || strcmp(applet_name, "test") != 0)
			bb_show_usage();
	}
#endif
}

/* The code below can well be in applets/applets.c, as it is used only
 * for busybox binary, not "individual" binaries.
 * However, keeping it here and linking it into libbusybox.so
 * (together with remaining tiny applets/applets.o)
 * makes it possible to avoid --whole-archive at link time.
 * This makes (shared busybox) + libbusybox smaller.
 * (--gc-sections would be even better....)
 */

const char *applet_name;
#if definedEx(CONFIG_NOMMU)
_Bool re_execed;
#endif
/* If not built as a single-applet executable... */


#if definedEx(CONFIG_FEATURE_SUID)
static uid_t ruid;
#endif
#if !definedEx(CONFIG_FEATURE_SUID)

#endif
  /* real uid */

#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
static struct suid_config_t {
	/* next ptr must be first: this struct needs to be llist-compatible */
	struct suid_config_t *m_next;
	struct bb_uidgid_t m_ugid;
	int m_applet;
	mode_t m_mode;
} *suid_config;

static _Bool suid_cfg_readable;

/* check if u is member of group g */
static int ingroup(uid_t u, gid_t g)
{
	struct group *grp = 
#if definedEx(CONFIG_USE_BB_PWD_GRP)
bb_internal_getgrgid
#endif
#if !definedEx(CONFIG_USE_BB_PWD_GRP)
getgrgid
#endif
(g);
	if (grp) {
		char **mem;
		for (mem = grp->gr_mem; *mem; mem++) {
			struct passwd *pwd = 
#if definedEx(CONFIG_USE_BB_PWD_GRP)
bb_internal_getpwnam
#endif
#if !definedEx(CONFIG_USE_BB_PWD_GRP)
getpwnam
#endif
(*mem);
			if (pwd && (pwd->pw_uid == u))
				return 1;
		}
	}
	return 0;
}

/* libbb candidate */
static char *get_trimmed_slice(char *s, char *e)
{
	/* First, consider the value at e to be nul and back up until we
	 * reach a non-space char.  Set the char after that (possibly at
	 * the original e) to nul. */
	while (e-- > s) {
		if (!({ unsigned char bb__isspace = (*e) - 9; bb__isspace == (' ' - 9) || bb__isspace <= (13 - 9); })) {
			break;
		}
	}
	e[1] = '\0';

	/* Next, advance past all leading space and return a ptr to the
	 * first non-space char; possibly the terminating nul. */
	return skip_whitespace(s);
}

static void parse_config_file(void)
{
	/* Don't depend on the tools to combine strings. */
	static const char config_file[] __attribute__((aligned(1))) = "/etc/busybox.conf";

	struct suid_config_t *sct_head;
	int applet_no;
	FILE *f;
	const char *errmsg;
	unsigned lc;
	smallint section;
	struct stat st;

	ruid = getuid();
	if (ruid == 0) /* run by root - don't need to even read config file */
		return;

	if ((stat(config_file, &st) != 0)       /* No config file? */
	 || !((((st.st_mode)) & 0170000) == (0100000))                /* Not a regular file? */
	 || (st.st_uid != 0)                    /* Not owned by root? */
	 || (st.st_mode & ((0200 >> 3) | ((0200 >> 3) >> 3)))  /* Writable by non-root? */
	 || !(f = fopen_for_read(config_file))  /* Cannot open? */
	) {
		return;
	}

	suid_cfg_readable = 1;
	sct_head = ((void *)0);
	section = lc = 0;

	while (1) {
		char buffer[256];
		char *s;

		if (!fgets_unlocked(buffer, sizeof(buffer), f)) { /* Are we done? */
			// Looks like bloat
			//if (ferror(f)) {   /* Make sure it wasn't a read error. */
			//	errmsg = "reading";
			//	goto pe_label;
			//}
			fclose(f);
			suid_config = sct_head;	/* Success, so set the pointer. */
			return;
		}

		s = buffer;
		lc++;					/* Got a (partial) line. */

		/* If a line is too long for our buffer, we consider it an error.
		 * The following test does mistreat one corner case though.
		 * If the final line of the file does not end with a newline and
		 * yet exactly fills the buffer, it will be treated as too long
		 * even though there isn't really a problem.  But it isn't really
		 * worth adding code to deal with such an unlikely situation, and
		 * we do err on the side of caution.  Besides, the line would be
		 * too long if it did end with a newline. */
		if (!strchr(s, '\n') && !feof(f)) {
			errmsg = "line too long";
			goto pe_label;
		}

		/* Trim leading and trailing whitespace, ignoring comments, and
		 * check if the resulting string is empty. */
		s = get_trimmed_slice(s, strchrnul(s, '#'));
		if (!*s) {
			continue;
		}

		/* Check for a section header. */

		if (*s == '[') {
			/* Unlike the old code, we ignore leading and trailing
			 * whitespace for the section name.  We also require that
			 * there are no stray characters after the closing bracket. */
			char *e = strchr(s, ']');
			if (!e   /* Missing right bracket? */
			 || e[1] /* Trailing characters? */
			 || !*(s = get_trimmed_slice(s+1, e)) /* Missing name? */
			) {
				errmsg = "section header";
				goto pe_label;
			}
			/* Right now we only have one section so just check it.
			 * If more sections are added in the future, please don't
			 * resort to cascading ifs with multiple strcasecmp calls.
			 * That kind of bloated code is all too common.  A loop
			 * and a string table would be a better choice unless the
			 * number of sections is very small. */
			if (strcasecmp(s, "SUID") == 0) {
				section = 1;
				continue;
			}
			section = -1;	/* Unknown section so set to skip. */
			continue;
		}

		/* Process sections. */

		if (section == 1) {		/* SUID */
			/* Since we trimmed leading and trailing space above, we're
			 * now looking for strings of the form
			 *    <key>[::space::]*=[::space::]*<value>
			 * where both key and value could contain inner whitespace. */

			/* First get the key (an applet name in our case). */
			char *e = strchr(s, '=');
			if (e) {
				s = get_trimmed_slice(s, e);
			}
			if (!e || !*s) {	/* Missing '=' or empty key. */
				errmsg = "keyword";
				goto pe_label;
			}

			/* Ok, we have an applet name.  Process the rhs if this
			 * applet is currently built in and ignore it otherwise.
			 * Note: this can hide config file bugs which only pop
			 * up when the busybox configuration is changed. */
			applet_no = find_applet_by_name(s);
			if (applet_no >= 0) {
				unsigned i;
				struct suid_config_t *sct;

				/* Note: We currently don't check for duplicates!
				 * The last config line for each applet will be the
				 * one used since we insert at the head of the list.
				 * I suppose this could be considered a feature. */
				sct = xzalloc(sizeof(*sct));
				sct->m_applet = applet_no;
				/*sct->m_mode = 0;*/
				sct->m_next = sct_head;
				sct_head = sct;

				/* Get the specified mode. */

				e = skip_whitespace(e+1);

				for (i = 0; i < 3; i++) {
					/* There are 4 chars for each of user/group/other.
					 * "x-xx" instead of "x-" are to make
					 * "idx > 3" check catch invalid chars.
					 */
					static const char mode_chars[] __attribute__((aligned(1))) = "Ssx-" "Ssx-" "x-xx";
					static const unsigned short mode_mask[] __attribute__((aligned(2))) = {
						04000, 04000|0100, 0100, 0, /* Ssx- */
						02000, 02000|(0100 >> 3), (0100 >> 3), 0, /* Ssx- */
						                          ((0100 >> 3) >> 3), 0  /*   x- */
					};
					const char *q = strchrnul(mode_chars + 4*i, *e);
					unsigned idx = q - (mode_chars + 4*i);
					if (idx > 3) {
						errmsg = "mode";
						goto pe_label;
					}
					sct->m_mode |= mode_mask[q - mode_chars];
					e++;
				}

				/* Now get the user/group info. */

				s = skip_whitespace(e);
				/* Default is 0.0, else parse USER.GROUP: */
				if (*s) {
					/* We require whitespace between mode and USER.GROUP */
					if ((s == e) || !(e = strchr(s, '.'))) {
						errmsg = "uid.gid";
						goto pe_label;
					}
					*e = ':'; /* get_uidgid needs USER:GROUP syntax */
					if (get_uidgid(&sct->m_ugid, s, /*allow_numeric:*/ 1) == 0) {
						errmsg = "unknown user/group";
						goto pe_label;
					}
				}
			}
			continue;
		}

		/* Unknown sections are ignored. */

		/* Encountering configuration lines prior to seeing a
		 * section header is treated as an error.  This is how
		 * the old code worked, but it may not be desirable.
		 * We may want to simply ignore such lines in case they
		 * are used in some future version of busybox. */
		if (!section) {
			errmsg = "keyword outside section";
			goto pe_label;
		}

	} /* while (1) */

 pe_label:
	fclose(f);
	bb_error_msg("parse error in %s, line %u: %s", config_file, lc, errmsg);

	/* Release any allocated memory before returning. */
	llist_free((llist_t*)sct_head, ((void *)0));
}
#endif
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG)
static __inline__ void parse_config_file(void)
{
	
#if definedEx(CONFIG_FEATURE_SUID)
ruid = getuid();
#endif
#if !definedEx(CONFIG_FEATURE_SUID)

#endif

}
#endif
#if definedEx(CONFIG_FEATURE_SUID)
static void check_suid(int applet_no)
{
	gid_t rgid;  /* real gid */

	if (ruid == 0) /* set by parse_config_file() */
		return; /* run by root - no need to check more */
	rgid = getgid();

#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
	if (suid_cfg_readable) {
		uid_t uid;
		struct suid_config_t *sct;
		mode_t m;

		for (sct = suid_config; sct; sct = sct->m_next) {
			if (sct->m_applet == applet_no)
				goto found;
		}
		goto check_need_suid;
 found:
		/* Is this user allowed to run this applet? */
		m = sct->m_mode;
		if (sct->m_ugid.uid == ruid)
			/* same uid */
			m >>= 6;
		else if ((sct->m_ugid.gid == rgid) || ingroup(ruid, sct->m_ugid.gid))
			/* same group / in group */
			m >>= 3;
		if (!(m & ((0100 >> 3) >> 3))) /* is x bit not set? */
			bb_error_msg_and_die("you have no permission to run this applet");

		/* We set effective AND saved ids. If saved-id is not set
		 * like we do below, seteuid(0) can still later succeed! */

		/* Are we directed to change gid
		 * (APPLET = *s* USER.GROUP or APPLET = *S* USER.GROUP)?
		 */
		if (sct->m_mode & 02000)
			rgid = sct->m_ugid.gid;
		/* else: we will set egid = rgid, thus dropping sgid effect */
		if (setresgid(-1, rgid, rgid))
			bb_perror_msg_and_die("setresgid");

		/* Are we directed to change uid
		 * (APPLET = s** USER.GROUP or APPLET = S** USER.GROUP)?
		 */
		uid = ruid;
		if (sct->m_mode & 04000)
			uid = sct->m_ugid.uid;
		/* else: we will set euid = ruid, thus dropping suid effect */
		if (setresuid(-1, uid, uid))
			bb_perror_msg_and_die("setresuid");

		goto ret;
	}
#if !definedEx(CONFIG_FEATURE_SUID_CONFIG_QUIET)
	{
		static _Bool onetime = 0;

		if (!onetime) {
			onetime = 1;
			bb_error_msg("using fallback suid method");
		}
	}
#endif
 check_need_suid:
#endif
	if (((applet_nameofs[applet_no] >> 14) & 0x3) == BB_SUID_REQUIRE) {
		/* Real uid is not 0. If euid isn't 0 too, suid bit
		 * is most probably not set on our executable */
		if (geteuid())
			bb_error_msg_and_die("must be suid to work properly");
	} else if (((applet_nameofs[applet_no] >> 14) & 0x3) == BB_SUID_DROP) {
		xsetgid(rgid);  /* drop all privileges */
		xsetuid(ruid);
	}
#if definedEx(CONFIG_FEATURE_SUID_CONFIG)
 ret: ;
	llist_free((llist_t*)suid_config, ((void *)0));
#endif
}
#endif
#if !definedEx(CONFIG_FEATURE_SUID)

#endif
#if definedEx(CONFIG_FEATURE_INSTALLER)
static const char usr_bin [] __attribute__((aligned(1))) = "/usr/bin/";
static const char usr_sbin[] __attribute__((aligned(1))) = "/usr/sbin/";
static const char *const install_dir[] = {
	&usr_bin [8], /* "/" */
	&usr_bin [4], /* "/bin/" */
	&usr_sbin[4]  /* "/sbin/" */
#if !definedEx(CONFIG_INSTALL_NO_USR)
	,usr_bin
	,usr_sbin
#endif
};

/* create (sym)links for each applet */
static void install_links(const char *busybox, int use_symbolic_links,
		char *custom_install_dir)
{
	/* directory table
	 * this should be consistent w/ the enum,
	 * busybox.h::bb_install_loc_t, or else... */
	int (*lf)(const char *, const char *);
	char *fpc;
	unsigned i;
	int rc;

	lf = link;
	if (use_symbolic_links)
		lf = symlink;

	for (i = 0; i < ((unsigned)(sizeof(applet_main) / sizeof((applet_main)[0]))); i++) {
		fpc = concat_path_file(
				custom_install_dir ? custom_install_dir : install_dir[({ unsigned v = (i); if (v & 1) v = applet_install_loc[v/2] >> 4; else v = applet_install_loc[v/2] & 0xf; v; })],
				
#if (definedEx(CONFIG_FEATURE_SUID) || definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + (applet_nameofs[i] & 0x0fff))
#endif
#if (!definedEx(CONFIG_FEATURE_SUID) && !definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + applet_nameofs[i])
#endif
);
		// debug: bb_error_msg("%slinking %s to busybox",
		//		use_symbolic_links ? "sym" : "", fpc);
		rc = lf(busybox, fpc);
		if (rc != 0 && (*bb_errno) != 17) {
			bb_simple_perror_msg(fpc);
		}
		free(fpc);
	}
}
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)
static void install_links(const char *busybox __attribute__ ((__unused__)),
		int use_symbolic_links __attribute__ ((__unused__)),
		char *custom_install_dir __attribute__ ((__unused__)))
{
}
#endif
/* If we were called as "busybox..." */
static int busybox_main(char **argv)
{
	if (!argv[1]) {
		/* Called without arguments */
		const char *a;
		int col;
		unsigned output_width;
 help:
		output_width = 80;
		if (
#if definedEx(CONFIG_FEATURE_AUTOWIDTH)
1
#endif
#if !definedEx(CONFIG_FEATURE_AUTOWIDTH)
0
#endif
) {
			/* Obtain the terminal width */
			get_terminal_width_height(0, &output_width, ((void *)0));
		}

		dup2(1, 2);
		full_write2_str(bb_banner); /* reuse const string */
		full_write2_str(" multi-call binary.\n"); /* reuse */
		full_write2_str(
			"BusyBox is copyrighted by many authors between 1998-2012.\n"
			"Licensed under GPLv2. See source distribution for detailed\n"
			"copyright notices.\n"
			"\n"
			"Usage: busybox [function [arguments]...]\n"
			"   or: busybox --list"
#if definedEx(CONFIG_FEATURE_INSTALLER)
"[-full]"
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)

#endif
"\n"
			
#if definedEx(CONFIG_FEATURE_INSTALLER)

 "   or: busybox --install [-s] [DIR]\n"

#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)

#endif

			"   or: function [arguments]...\n"
			"\n"
			"\tBusyBox is a multi-call binary that combines many common Unix\n"
			"\tutilities into a single executable.  Most people will create a\n"
			"\tlink to busybox for each function they wish to use and BusyBox\n"
			"\twill act like whatever it was invoked as.\n"
			"\n"
			"Currently defined functions:\n"
		);
		col = 0;
		a = applet_names;
		/* prevent last comma to be in the very last pos */
		output_width--;
		while (*a) {
			int len2 = strlen(a) + 2;
			if (col >= (int)output_width - len2) {
				full_write2_str(",\n");
				col = 0;
			}
			if (col == 0) {
				col = 6;
				full_write2_str("\t");
			} else {
				full_write2_str(", ");
			}
			full_write2_str(a);
			col += len2;
			a += len2 - 1;
		}
		full_write2_str("\n\n");
		return 0;
	}

	if (strncmp(argv[1], "--list", 6) == 0) {
		unsigned i = 0;
		const char *a = applet_names;
		dup2(1, 2);
		while (*a) {
#if definedEx(CONFIG_FEATURE_INSTALLER)
			if (argv[1][6]) /* --list-full? */
				full_write2_str(install_dir[({ unsigned v = (i); if (v & 1) v = applet_install_loc[v/2] >> 4; else v = applet_install_loc[v/2] & 0xf; v; })] + 1);
#endif
			full_write2_str(a);
			full_write2_str("\n");
			i++;
			a += strlen(a) + 1;
		}
		return 0;
	}

	if (
#if definedEx(CONFIG_FEATURE_INSTALLER)
1
#endif
#if !definedEx(CONFIG_FEATURE_INSTALLER)
0
#endif
 && strcmp(argv[1], "--install") == 0) {
		int use_symbolic_links;
		const char *busybox;

		busybox = xmalloc_readlink(bb_busybox_exec_path);
		if (!busybox) {
			/* bb_busybox_exec_path is usually "/proc/self/exe".
			 * In chroot, readlink("/proc/self/exe") usually fails.
			 * In such case, better use argv[0] as symlink target
			 * if it is a full path name.
			 */
			if (argv[0][0] != '/')
				bb_error_msg_and_die("'%s' is not an absolute path", argv[0]);
			busybox = argv[0];
		}
		/* busybox --install [-s] [DIR]:
		 * -s: make symlinks
		 * DIR: directory to install links to
		 */
		use_symbolic_links = (argv[2] && strcmp(argv[2], "-s") == 0 && ++argv);
		install_links(busybox, use_symbolic_links, argv[2]);
		return 0;
	}

	if (strcmp(argv[1], "--help") == 0) {
		/* "busybox --help [<applet>]" */
		if (!argv[2])
			goto help;
		/* convert to "<applet> --help" */
		argv[0] = argv[2];
		argv[2] = ((void *)0);
	} else {
		/* "busybox <applet> arg1 arg2 ..." */
		argv++;
	}
	/* We support "busybox /a/path/to/applet args..." too. Allows for
	 * "#!/bin/busybox"-style wrappers */
	applet_name = bb_get_last_path_component_nostrip(argv[0]);
	run_applet_and_exit(applet_name, argv);

	/*bb_error_msg_and_die("applet not found"); - sucks in printf */
	full_write2_str(applet_name);
	full_write2_str(": applet not found\n");
	xfunc_die();
}

void  run_applet_no_and_exit(int applet_no, char **argv)
{
	int argc = 1;

	while (argv[argc])
		argc++;

	/* Reinit some shared global data */
	xfunc_error_retval = 1;

	applet_name = 
#if (definedEx(CONFIG_FEATURE_SUID) || definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + (applet_nameofs[applet_no] & 0x0fff))
#endif
#if (!definedEx(CONFIG_FEATURE_SUID) && !definedEx(CONFIG_FEATURE_PREFER_APPLETS))
(applet_names + applet_nameofs[applet_no])
#endif
;
	if (argc == 2 && strcmp(argv[1], "--help") == 0) {
		/* Special case. POSIX says "test --help"
		 * should be no different from e.g. "test --foo".  */
//TODO: just compare applet_no with APPLET_NO_test
		if (!
#if definedEx(CONFIG_TEST)
1
#endif
#if !definedEx(CONFIG_TEST)
0
#endif
 || strcmp(applet_name, "test") != 0) {
			/* If you want "foo --help" to return 0: */
			xfunc_error_retval = 0;
			bb_show_usage();
		}
	}
	if (
#if definedEx(CONFIG_FEATURE_SUID)
1
#endif
#if !definedEx(CONFIG_FEATURE_SUID)
0
#endif
)
		
#if !definedEx(CONFIG_FEATURE_SUID)
((void)0)
#endif
#if definedEx(CONFIG_FEATURE_SUID)
check_suid(applet_no)
#endif
;
	exit(applet_main[applet_no](argc, argv));
}

void  run_applet_and_exit(const char *name, char **argv)
{
	int applet = find_applet_by_name(name);
	if (applet >= 0)
		run_applet_no_and_exit(applet, argv);
	if (strncmp(name, "busybox", 7) == 0)
		exit(busybox_main(argv));
}


#if definedEx(CONFIG_BUILD_LIBBUSYBOX)
int lbb_main(char **argv)
#endif
#if !definedEx(CONFIG_BUILD_LIBBUSYBOX)
int main(int argc __attribute__ ((__unused__)), char **argv)
#endif
{
	/* Tweak malloc for reduced memory consumption */

	/* M_TRIM_THRESHOLD is the maximum amount of freed top-most memory
	 * to keep before releasing to the OS
	 * Default is way too big: 256k
	 */
	mallopt(-1, 8 * 1024);


	/* M_MMAP_THRESHOLD is the request size threshold for using mmap()
	 * Default is too big: 256k
	 */
	mallopt(-3, 32 * 1024 - 256);

#if definedEx(CONFIG_NOMMU)
	/* NOMMU re-exec trick sets high-order bit in first byte of name */
	if (argv[0][0] & 0x80) {
		re_execed = 1;
		argv[0][0] &= 0x7f;
	}
#endif

	
	
		
		
	
	
	
	
 	lbb_prepare("busybox" 
#if definedEx(CONFIG_FEATURE_INDIVIDUAL)
, argv
#endif
#if !definedEx(CONFIG_FEATURE_INDIVIDUAL)

#endif
);

	applet_name = argv[0];
	if (applet_name[0] == '-')
		applet_name++;
	applet_name = bb_basename(applet_name);

	parse_config_file(); /* ...maybe, if FEATURE_SUID_CONFIG */

	run_applet_and_exit(applet_name, argv);

	/*bb_error_msg_and_die("applet not found"); - sucks in printf */
	full_write2_str(applet_name);
	full_write2_str(": applet not found\n");
	xfunc_die();

}
